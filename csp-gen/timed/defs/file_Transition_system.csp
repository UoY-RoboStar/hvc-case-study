
module mod_sys
exports 

	transparent diamond
	transparent sbisim
	transparent wbisim
	transparent chase
	
	-- declaring channels
	-- declaring robotic platform events
	channel int_ActualHV: InOut.core_real
	channel currentState: InOut.State
	channel int_pwmSignal: InOut.Power
	channel ext_setPoint: InOut.core_real
	channel ext_pow24VStatus: InOut.Power
	
	
	-- declaring module termination channel
	channel terminate
				
	-- declaring robotic platform variables
	
		module ctrl_ref0
			Timed(OneStep) {
				shared_variable_events = {|
				|}		
			}	
		exports
			transparent diamond
			transparent sbisim
			transparent wbisim
			transparent chase
			
					module stm_ref0
					exports
						-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
						external prioritise
						transparent wbisim
						transparent dbisim
						transparent sbisim
					
						Timed(OneStep) {	
							-- flow channels
							channel internal__ : TIDS
							channel enteredV, enterV, exitV, exitedV : SIDS
							channel enter, entered: SIDS.SIDS
							channel exit,exited: SIDS.SIDS
							channel terminate
							
							-- variable channels
							channel get_power, set_power: Power
							channel get_setPoint, set_setPoint: core_real
							channel get_res, set_res: core_boolean
							channel get_errorFlag, set_errorFlag: core_boolean
							channel get_lim, set_lim: core_boolean
							channel get_supplyLim, set_supplyLim: core_boolean
							channel get_ActualHV, set_ActualHV: core_real
							channel get_errorAck, set_errorAck: core_boolean
							channel get_overLimit, set_overLimit: core_real
							channel get_underLimit, set_underLimit: core_real
									
							-- shared variable channels
							
							-- local variable channels for defined operations that are required by the state machine
							channel get_disableHV_arg, set_disableHV_arg: core_boolean
							channel get_supplyVoltCheck_power, set_supplyVoltCheck_power: Power
							
							-- declaring state machine events
							channel currentState__: TIDS.InOut.State
							channel currentState: InOut.State
							channel ext_setPoint__: TIDS.InOut.core_real
							channel ext_setPoint: InOut.core_real
							channel ext_pow24VStatus__: TIDS.InOut.Power
							channel ext_pow24VStatus: InOut.Power
							channel int_overLimit__: TIDS.InOut.core_real
							channel int_overLimit: InOut.core_real
							channel int_pwmSignal__: TIDS.InOut.Power
							channel int_pwmSignal: InOut.Power
							channel int_underLimit__: TIDS.InOut.core_real
							channel int_underLimit: InOut.core_real
							channel int_DisableHV__: TIDS.InOut
							channel int_DisableHV: InOut
							channel int_ActualHV__: TIDS.InOut.core_real
							channel int_ActualHV: InOut.core_real
							
							-- declaring call and ret events for undefined operations
						
							-- Only the undefined operations are declared here.
							-- If the state machine is in isolation, all required operations will be undefined.
							-- If it is in the context of a controller, the required operations not provided by the
							-- controller will be declared here, and the defined operations will be defined in the
							-- context of the Controller module, and therefore within scope of the state machien module.
							
							CALL__disableHV(id__,
										arg) = (
							OP_disableHV::set_arg!arg -> 
							OP_disableHV::D__(id__))
							[[
								OP_disableHV::int_pwmSignal <- int_pwmSignal
							]]
							[[
								OP_disableHV::get_setPoint <- get_setPoint,
								OP_disableHV::set_setPoint <- set_setPoint,
								OP_disableHV::get_res <- get_res,
								OP_disableHV::set_res <- set_res,
								OP_disableHV::get_errorFlag <- get_errorFlag,
								OP_disableHV::set_errorFlag <- set_errorFlag,
								OP_disableHV::get_lim <- get_lim,
								OP_disableHV::set_lim <- set_lim,
								OP_disableHV::get_supplyLim <- get_supplyLim,
								OP_disableHV::set_supplyLim <- set_supplyLim,
								OP_disableHV::get_ActualHV <- get_ActualHV,
								OP_disableHV::set_ActualHV <- set_ActualHV,
								OP_disableHV::get_errorAck <- get_errorAck,
								OP_disableHV::set_errorAck <- set_errorAck,
								OP_disableHV::get_overLimit <- get_overLimit,
								OP_disableHV::set_overLimit <- set_overLimit,
								OP_disableHV::get_underLimit <- get_underLimit,
								OP_disableHV::set_underLimit <- set_underLimit
							]]
							CALL__supplyVoltCheck(id__) = (
							OP_supplyVoltCheck::D__(id__))
							[[
								OP_supplyVoltCheck::ext_setPoint <- ext_setPoint,
								OP_supplyVoltCheck::ext_pow24VStatus <- ext_pow24VStatus
							]]
							[[
								OP_supplyVoltCheck::get_setPoint <- get_setPoint,
								OP_supplyVoltCheck::set_setPoint <- set_setPoint,
								OP_supplyVoltCheck::get_res <- get_res,
								OP_supplyVoltCheck::set_res <- set_res,
								OP_supplyVoltCheck::get_errorFlag <- get_errorFlag,
								OP_supplyVoltCheck::set_errorFlag <- set_errorFlag,
								OP_supplyVoltCheck::get_lim <- get_lim,
								OP_supplyVoltCheck::set_lim <- set_lim,
								OP_supplyVoltCheck::get_supplyLim <- get_supplyLim,
								OP_supplyVoltCheck::set_supplyLim <- set_supplyLim,
								OP_supplyVoltCheck::get_ActualHV <- get_ActualHV,
								OP_supplyVoltCheck::set_ActualHV <- set_ActualHV,
								OP_supplyVoltCheck::get_errorAck <- get_errorAck,
								OP_supplyVoltCheck::set_errorAck <- set_errorAck,
								OP_supplyVoltCheck::get_overLimit <- get_overLimit,
								OP_supplyVoltCheck::set_overLimit <- set_overLimit,
								OP_supplyVoltCheck::get_underLimit <- get_underLimit,
								OP_supplyVoltCheck::set_underLimit <- set_underLimit
							]]
							CALL__checkLimits(id__) = (
							OP_checkLimits::D__(id__))
							[[
								OP_checkLimits::ext_setPoint <- ext_setPoint,
								OP_checkLimits::ext_pow24VStatus <- ext_pow24VStatus
							]]
							[[
								OP_checkLimits::get_setPoint <- get_setPoint,
								OP_checkLimits::set_setPoint <- set_setPoint,
								OP_checkLimits::get_res <- get_res,
								OP_checkLimits::set_res <- set_res,
								OP_checkLimits::get_errorFlag <- get_errorFlag,
								OP_checkLimits::set_errorFlag <- set_errorFlag,
								OP_checkLimits::get_lim <- get_lim,
								OP_checkLimits::set_lim <- set_lim,
								OP_checkLimits::get_supplyLim <- get_supplyLim,
								OP_checkLimits::set_supplyLim <- set_supplyLim,
								OP_checkLimits::get_ActualHV <- get_ActualHV,
								OP_checkLimits::set_ActualHV <- set_ActualHV,
								OP_checkLimits::get_errorAck <- get_errorAck,
								OP_checkLimits::set_errorAck <- set_errorAck,
								OP_checkLimits::get_overLimit <- get_overLimit,
								OP_checkLimits::set_overLimit <- set_overLimit,
								OP_checkLimits::get_underLimit <- get_underLimit,
								OP_checkLimits::set_underLimit <- set_underLimit
							]]
							
							-- definition of functions used to expose flow channels
							ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
											   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
											   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
											   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
												 
							ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
										[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							
							-- declaring identifiers of state and final states
							datatype SIDS = SID_State_machine
							              | SID_State_machine_Ramping
							              | SID_State_machine_Init
							              | SID_State_machine_Init_si0
							              | SID_State_machine_Wait24Vpower
							              | SID_State_machine_Wait24Vpower_si0
							              | SID_State_machine_Wait24Vpower_s1
							              | SID_State_machine_ClosedLoop
							              | SID_State_machine_ClosedLoop_s1
							              | SID_State_machine_ClosedLoop_s2
							              | SID_State_machine_ClosedLoop_s2_s0
							              | SID_State_machine_ClosedLoop_s2_s1
							              | SID_State_machine_ClosedLoop_s3
							              | SID_State_machine_ClosedLoop_s4
							              | SID_State_machine_ErrorMode
							              | SID_State_machine_ErrorMode_f0
							              | SID_State_machine_ErrorMode_s1
							              | SID_State_machine_ErrorMode_s2
							
							-- declaring identifiers of transitions
							datatype TIDS = NULLTRANSITION__
							              | TID_State_machine_Init_t0
							              | TID_State_machine_Wait24Vpower_t0
							              | TID_State_machine_Wait24Vpower_t1
							              | TID_State_machine_ClosedLoop_s2_t0
							              | TID_State_machine_ClosedLoop_s2_t1
							              | TID_State_machine_ClosedLoop_s2_t5
							              | TID_State_machine_ClosedLoop_s2_t2
							              | TID_State_machine_ClosedLoop_t1
							              | TID_State_machine_ClosedLoop_t2
							              | TID_State_machine_ClosedLoop_t3
							              | TID_State_machine_ClosedLoop_t4
							              | TID_State_machine_ClosedLoop_t5
							              | TID_State_machine_ClosedLoop_t0
							              | TID_State_machine_ErrorMode_t0
							              | TID_State_machine_ErrorMode_t2
							              | TID_State_machine_ErrorMode_t4
							              | TID_State_machine_ErrorMode_t5
							              | TID_State_machine_ErrorMode_t1
							              | TID_State_machine_t0
							              | TID_State_machine_t1
							              | TID_State_machine_t2
							              | TID_State_machine_t3
							              | TID_State_machine_t4
							              | TID_State_machine_t5
							              | TID_State_machine_t6
							              | TID_State_machine_t8
							              | TID_State_machine_t11
							              | TID_State_machine_t7
							
							-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
							
							ITIDS = {
								TID_State_machine_Wait24Vpower_t1,	TID_State_machine_ClosedLoop_s2_t1,	TID_State_machine_ClosedLoop_s2_t2,	TID_State_machine_ClosedLoop_t1,	TID_State_machine_ClosedLoop_t2,	TID_State_machine_ClosedLoop_t3,	TID_State_machine_ClosedLoop_t4,	TID_State_machine_ClosedLoop_t5,	TID_State_machine_ErrorMode_t0,	TID_State_machine_ErrorMode_t4,	TID_State_machine_t0,	TID_State_machine_t1,	TID_State_machine_t2,	TID_State_machine_t3,	TID_State_machine_t4,	TID_State_machine_t6,	TID_State_machine_t8,	TID_State_machine_t11
							}
							
							int_int = {|
								currentState__.TID_State_machine_Wait24Vpower_t1,
								ext_setPoint__.TID_State_machine_Wait24Vpower_t1,
								ext_pow24VStatus__.TID_State_machine_Wait24Vpower_t1,
								int_overLimit__.TID_State_machine_Wait24Vpower_t1,
								int_pwmSignal__.TID_State_machine_Wait24Vpower_t1,
								int_underLimit__.TID_State_machine_Wait24Vpower_t1,
								int_DisableHV__.TID_State_machine_Wait24Vpower_t1,
								int_ActualHV__.TID_State_machine_Wait24Vpower_t1,
								internal__.TID_State_machine_Wait24Vpower_t1,
								currentState__.TID_State_machine_ClosedLoop_s2_t1,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								currentState__.TID_State_machine_ClosedLoop_s2_t2,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								currentState__.TID_State_machine_ClosedLoop_t1,
								ext_setPoint__.TID_State_machine_ClosedLoop_t1,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t1,
								int_overLimit__.TID_State_machine_ClosedLoop_t1,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t1,
								int_underLimit__.TID_State_machine_ClosedLoop_t1,
								int_DisableHV__.TID_State_machine_ClosedLoop_t1,
								int_ActualHV__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_ClosedLoop_t1,
								currentState__.TID_State_machine_ClosedLoop_t2,
								ext_setPoint__.TID_State_machine_ClosedLoop_t2,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t2,
								int_overLimit__.TID_State_machine_ClosedLoop_t2,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t2,
								int_underLimit__.TID_State_machine_ClosedLoop_t2,
								int_DisableHV__.TID_State_machine_ClosedLoop_t2,
								int_ActualHV__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t2,
								currentState__.TID_State_machine_ClosedLoop_t3,
								ext_setPoint__.TID_State_machine_ClosedLoop_t3,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t3,
								int_overLimit__.TID_State_machine_ClosedLoop_t3,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t3,
								int_underLimit__.TID_State_machine_ClosedLoop_t3,
								int_DisableHV__.TID_State_machine_ClosedLoop_t3,
								int_ActualHV__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_ClosedLoop_t3,
								currentState__.TID_State_machine_ClosedLoop_t4,
								ext_setPoint__.TID_State_machine_ClosedLoop_t4,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t4,
								int_overLimit__.TID_State_machine_ClosedLoop_t4,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t4,
								int_underLimit__.TID_State_machine_ClosedLoop_t4,
								int_DisableHV__.TID_State_machine_ClosedLoop_t4,
								int_ActualHV__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t4,
								currentState__.TID_State_machine_ClosedLoop_t5,
								ext_setPoint__.TID_State_machine_ClosedLoop_t5,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t5,
								int_overLimit__.TID_State_machine_ClosedLoop_t5,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t5,
								int_underLimit__.TID_State_machine_ClosedLoop_t5,
								int_DisableHV__.TID_State_machine_ClosedLoop_t5,
								int_ActualHV__.TID_State_machine_ClosedLoop_t5,
								internal__.TID_State_machine_ClosedLoop_t5,
								currentState__.TID_State_machine_ErrorMode_t0,
								ext_setPoint__.TID_State_machine_ErrorMode_t0,
								ext_pow24VStatus__.TID_State_machine_ErrorMode_t0,
								int_overLimit__.TID_State_machine_ErrorMode_t0,
								int_pwmSignal__.TID_State_machine_ErrorMode_t0,
								int_underLimit__.TID_State_machine_ErrorMode_t0,
								int_DisableHV__.TID_State_machine_ErrorMode_t0,
								int_ActualHV__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t0,
								currentState__.TID_State_machine_ErrorMode_t4,
								ext_setPoint__.TID_State_machine_ErrorMode_t4,
								ext_pow24VStatus__.TID_State_machine_ErrorMode_t4,
								int_overLimit__.TID_State_machine_ErrorMode_t4,
								int_pwmSignal__.TID_State_machine_ErrorMode_t4,
								int_underLimit__.TID_State_machine_ErrorMode_t4,
								int_DisableHV__.TID_State_machine_ErrorMode_t4,
								int_ActualHV__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t4,
								currentState__.TID_State_machine_t0,
								ext_setPoint__.TID_State_machine_t0,
								ext_pow24VStatus__.TID_State_machine_t0,
								int_overLimit__.TID_State_machine_t0,
								int_pwmSignal__.TID_State_machine_t0,
								int_underLimit__.TID_State_machine_t0,
								int_DisableHV__.TID_State_machine_t0,
								int_ActualHV__.TID_State_machine_t0,
								internal__.TID_State_machine_t0,
								currentState__.TID_State_machine_t1,
								ext_setPoint__.TID_State_machine_t1,
								ext_pow24VStatus__.TID_State_machine_t1,
								int_overLimit__.TID_State_machine_t1,
								int_pwmSignal__.TID_State_machine_t1,
								int_underLimit__.TID_State_machine_t1,
								int_DisableHV__.TID_State_machine_t1,
								int_ActualHV__.TID_State_machine_t1,
								internal__.TID_State_machine_t1,
								currentState__.TID_State_machine_t2,
								ext_setPoint__.TID_State_machine_t2,
								ext_pow24VStatus__.TID_State_machine_t2,
								int_overLimit__.TID_State_machine_t2,
								int_pwmSignal__.TID_State_machine_t2,
								int_underLimit__.TID_State_machine_t2,
								int_DisableHV__.TID_State_machine_t2,
								int_ActualHV__.TID_State_machine_t2,
								internal__.TID_State_machine_t2,
								currentState__.TID_State_machine_t3,
								ext_setPoint__.TID_State_machine_t3,
								ext_pow24VStatus__.TID_State_machine_t3,
								int_overLimit__.TID_State_machine_t3,
								int_pwmSignal__.TID_State_machine_t3,
								int_underLimit__.TID_State_machine_t3,
								int_DisableHV__.TID_State_machine_t3,
								int_ActualHV__.TID_State_machine_t3,
								internal__.TID_State_machine_t3,
								currentState__.TID_State_machine_t4,
								ext_setPoint__.TID_State_machine_t4,
								ext_pow24VStatus__.TID_State_machine_t4,
								int_overLimit__.TID_State_machine_t4,
								int_pwmSignal__.TID_State_machine_t4,
								int_underLimit__.TID_State_machine_t4,
								int_DisableHV__.TID_State_machine_t4,
								int_ActualHV__.TID_State_machine_t4,
								internal__.TID_State_machine_t4,
								currentState__.TID_State_machine_t6,
								ext_setPoint__.TID_State_machine_t6,
								ext_pow24VStatus__.TID_State_machine_t6,
								int_overLimit__.TID_State_machine_t6,
								int_pwmSignal__.TID_State_machine_t6,
								int_underLimit__.TID_State_machine_t6,
								int_DisableHV__.TID_State_machine_t6,
								int_ActualHV__.TID_State_machine_t6,
								internal__.TID_State_machine_t6,
								currentState__.TID_State_machine_t8,
								ext_setPoint__.TID_State_machine_t8,
								ext_pow24VStatus__.TID_State_machine_t8,
								int_overLimit__.TID_State_machine_t8,
								int_pwmSignal__.TID_State_machine_t8,
								int_underLimit__.TID_State_machine_t8,
								int_DisableHV__.TID_State_machine_t8,
								int_ActualHV__.TID_State_machine_t8,
								internal__.TID_State_machine_t8,
								currentState__.TID_State_machine_t11,
								ext_setPoint__.TID_State_machine_t11,
								ext_pow24VStatus__.TID_State_machine_t11,
								int_overLimit__.TID_State_machine_t11,
								int_pwmSignal__.TID_State_machine_t11,
								int_underLimit__.TID_State_machine_t11,
								int_DisableHV__.TID_State_machine_t11,
								int_ActualHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t11
							|}
								
							
							internal_events = {|enter,entered,exit,exited|}
							shared_variable_events = {|
							|}
									
							
							-- declaring all states
							CS_State_machine_Ramping_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
								y____ <- {SID_State_machine_Ramping}
							|}
							
							
							State_machine_Ramping_triggers = {|
								int_DisableHV__.TID_State_machine_t8,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_t7,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t6,
								internal__.TID_State_machine_t1,
								internal__.TID_State_machine_t0
							|}
							
							State_State_machine_Ramping(id__) = let
								T_State_machine_t0(id__) = internal__!TID_State_machine_t0 ->  exit.SID_State_machine_Ramping.SID_State_machine_Ramping -> SKIP;
													SKIP;exited.SID_State_machine_Ramping.SID_State_machine_Ramping -> SKIP;
													enter!SID_State_machine_Ramping!SID_State_machine_Init -> entered!SID_State_machine_Ramping!SID_State_machine_Init ->
													State_State_machine_Ramping(id__)
								State_State_machine_Ramping_execute(id__,o____) = true&(currentState.out!State_Ramp -> SKIP); 
									entered!o____!SID_State_machine_Ramping ->
									(SKIP; STOP /\ (
										T_State_machine_t0(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0}) -> exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
												SKIP;
												exited!y____!SID_State_machine_Ramping -> SKIP);
												State_State_machine_Ramping(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (State_State_machine_Ramping_execute(id__,x____))
							
							CS_State_machine_Init_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
								y____ <- {SID_State_machine_Init}
							|}
							
							State_machine_Init_int_int = {|
							|}
								
							
							State_machine_Init_int_triggers = {|
								internal__.TID_State_machine_Init_t0
							|}
							
							State_State_machine_Init_si0_R(id__) = 
								State_State_machine_Init_si0(id__)
							 		[|diff(State_machine_Init_int_int,State_machine_Init_si0_triggers)|]
							 	SKIP
							 		
							State_State_machine_Init(id__) = (
								State_State_machine_Init_aux(id__)
									[|
										union(
											diff(int_int, State_machine_Init_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_State_machine_Init_si0}),
											  y____ <- {SID_State_machine_Init_si0}
										    |}
										)
									|]
								State_State_machine_Init_si0_R(id__)
							)
							
							State_machine_Init_triggers = {|
								int_DisableHV__.TID_State_machine_t8,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_t7,
								internal__.TID_State_machine_Init_t0,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t6,
								internal__.TID_State_machine_t1
							|}
							
							State_State_machine_Init_aux(id__) = let
								T_State_machine_t1(id__) = internal__!TID_State_machine_t1 ->  exit.SID_State_machine_Init.SID_State_machine_Init -> SKIP;
													exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_Init.SID_State_machine_Init -> SKIP;
													enter!SID_State_machine_Init!SID_State_machine_Wait24Vpower -> entered!SID_State_machine_Init!SID_State_machine_Wait24Vpower ->
													State_State_machine_Init_aux(id__)
								State_State_machine_Init_aux_execute(id__,o____) = true&(currentState.out!State_Init -> SKIP);true&CALL__disableHV(
											id__,
											false
										); 
								I_State_machine_Init_i0(id__);
									entered!o____!SID_State_machine_Init ->
									(SKIP; STOP /\ (
										T_State_machine_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Init -> SKIP);
												State_State_machine_Init_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (State_State_machine_Init_aux_execute(id__,x____))
							
							CS_State_machine_Init_si0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Init_si0},
								y____ <- {SID_State_machine_Init_si0}
							|}
							
							
							State_machine_Init_si0_triggers = {|
							|}
							
							State_State_machine_Init_si0(id__) = let
								State_State_machine_Init_si0_execute(id__,o____) = get_setPoint?setPoint -> true & (set_overLimit!overLimitF(Plus(setPoint, 2, core_real)) -> SKIP);get_setPoint?setPoint -> true & (set_underLimit!underLimitF(Minus(setPoint, 2, core_real)) -> SKIP);get_underLimit?underLimit -> true&(int_underLimit.out!underLimit -> SKIP);get_overLimit?overLimit -> true&(int_overLimit.out!overLimit -> SKIP); 
									entered!o____!SID_State_machine_Init_si0 ->
									(SKIP; STOP /\ (
										internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Init_si0 -> SKIP);
												State_State_machine_Init_si0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (State_State_machine_Init_si0_execute(id__,x____))
							
							CS_State_machine_Wait24Vpower_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
								y____ <- {SID_State_machine_Wait24Vpower}
							|}
							
							State_machine_Wait24Vpower_int_int = {|
								currentState__.TID_State_machine_Wait24Vpower_t1,
								ext_setPoint__.TID_State_machine_Wait24Vpower_t1,
								ext_pow24VStatus__.TID_State_machine_Wait24Vpower_t1,
								int_overLimit__.TID_State_machine_Wait24Vpower_t1,
								int_pwmSignal__.TID_State_machine_Wait24Vpower_t1,
								int_underLimit__.TID_State_machine_Wait24Vpower_t1,
								int_DisableHV__.TID_State_machine_Wait24Vpower_t1,
								int_ActualHV__.TID_State_machine_Wait24Vpower_t1,
								internal__.TID_State_machine_Wait24Vpower_t1
							|}
								
							
							State_machine_Wait24Vpower_int_triggers = {|
								internal__.TID_State_machine_Wait24Vpower_t0,
								internal__.TID_State_machine_Wait24Vpower_t1
							|}
							
							State_State_machine_Wait24Vpower_si0_R(id__) = 
								State_State_machine_Wait24Vpower_si0(id__)
							 		[|diff(State_machine_Wait24Vpower_int_int,State_machine_Wait24Vpower_si0_triggers)|]
							 	SKIP
							 		
							State_State_machine_Wait24Vpower_s1_R(id__) = 
								State_State_machine_Wait24Vpower_s1(id__)
							 		[|diff(State_machine_Wait24Vpower_int_int,State_machine_Wait24Vpower_s1_triggers)|]
							 	SKIP
							 		
							State_State_machine_Wait24Vpower(id__) = (
								State_State_machine_Wait24Vpower_aux(id__)
									[|
										union(
											diff(int_int, State_machine_Wait24Vpower_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1}),
											  y____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1}
										    |}
										)
									|]
								(
									State_State_machine_Wait24Vpower_si0_R(id__)
										[|inter(CS_State_machine_Wait24Vpower_si0_sync,CS_State_machine_Wait24Vpower_s1_sync)|]
									State_State_machine_Wait24Vpower_s1_R(id__)
								)
							)
							
							State_machine_Wait24Vpower_triggers = {|
								int_DisableHV__.TID_State_machine_t8,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_t7,
								internal__.TID_State_machine_Wait24Vpower_t1,
								internal__.TID_State_machine_Wait24Vpower_t0,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t6
							|}
							
							State_State_machine_Wait24Vpower_aux(id__) = let
								T_State_machine_t2(id__) = internal__!TID_State_machine_t2 ->  exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													true & (set_res!false -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode ->
													State_State_machine_Wait24Vpower_aux(id__)
								T_State_machine_t3(id__) = internal__!TID_State_machine_t3 ->  exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													enter!SID_State_machine_Wait24Vpower!SID_State_machine_ClosedLoop -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ClosedLoop ->
													State_State_machine_Wait24Vpower_aux(id__)
								T_State_machine_t8(id__) = int_DisableHV__!TID_State_machine_t8.in ->  (exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
													J_State_machine_j0(id__))
								J_State_machine_j0(id__) = (
											(internal__!TID_State_machine_t7 -> true&CALL__disableHV(
														id__,
														true
													);true & (set_res!false -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode ->
											State_State_machine_Wait24Vpower_aux(id__)
											)
											)
								State_State_machine_Wait24Vpower_aux_execute(id__,o____) = true&(currentState.out!State_Wait24Vpower -> SKIP);true&CALL__disableHV(
											id__,
											false
										); 
								I_State_machine_Wait24Vpower_i0(id__);
									entered!o____!SID_State_machine_Wait24Vpower ->
									(SKIP; STOP /\ (
										T_State_machine_t2(id__)[]
										T_State_machine_t3(id__)[]
										T_State_machine_t8(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
												State_State_machine_Wait24Vpower_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (State_State_machine_Wait24Vpower_aux_execute(id__,x____))
							
							CS_State_machine_Wait24Vpower_si0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1},
								y____ <- {SID_State_machine_Wait24Vpower_si0}
							|}
							
							
							State_machine_Wait24Vpower_si0_triggers = {|
								internal__.TID_State_machine_Wait24Vpower_t1
							|}
							
							State_State_machine_Wait24Vpower_si0(id__) = let
								T_State_machine_Wait24Vpower_t1(id__) = internal__!TID_State_machine_Wait24Vpower_t1 ->  exit.SID_State_machine_Wait24Vpower_si0.SID_State_machine_Wait24Vpower_si0 -> SKIP;
													SKIP;exited.SID_State_machine_Wait24Vpower_si0.SID_State_machine_Wait24Vpower_si0 -> SKIP;
													enter!SID_State_machine_Wait24Vpower_si0!SID_State_machine_Wait24Vpower_s1 -> entered!SID_State_machine_Wait24Vpower_si0!SID_State_machine_Wait24Vpower_s1 ->
													State_State_machine_Wait24Vpower_si0(id__)
								State_State_machine_Wait24Vpower_si0_execute(id__,o____) = true&CALL__supplyVoltCheck(
											id__
										); 
									entered!o____!SID_State_machine_Wait24Vpower_si0 ->
									(SKIP; STOP /\ (
										T_State_machine_Wait24Vpower_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
												State_State_machine_Wait24Vpower_si0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (State_State_machine_Wait24Vpower_si0_execute(id__,x____))
							
							CS_State_machine_Wait24Vpower_s1_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1},
								y____ <- {SID_State_machine_Wait24Vpower_s1}
							|}
							
							
							State_machine_Wait24Vpower_s1_triggers = {|
							|}
							
							State_State_machine_Wait24Vpower_s1(id__) = let
								State_State_machine_Wait24Vpower_s1_execute(id__,o____) = true&CALL__disableHV(
											id__,
											true
										); 
									entered!o____!SID_State_machine_Wait24Vpower_s1 ->
									(SKIP; STOP /\ (
										internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
												State_State_machine_Wait24Vpower_s1(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (State_State_machine_Wait24Vpower_s1_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
								y____ <- {SID_State_machine_ClosedLoop}
							|}
							
							State_machine_ClosedLoop_int_int = {|
								currentState__.TID_State_machine_ClosedLoop_s2_t1,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								currentState__.TID_State_machine_ClosedLoop_s2_t2,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								currentState__.TID_State_machine_ClosedLoop_t1,
								ext_setPoint__.TID_State_machine_ClosedLoop_t1,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t1,
								int_overLimit__.TID_State_machine_ClosedLoop_t1,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t1,
								int_underLimit__.TID_State_machine_ClosedLoop_t1,
								int_DisableHV__.TID_State_machine_ClosedLoop_t1,
								int_ActualHV__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_ClosedLoop_t1,
								currentState__.TID_State_machine_ClosedLoop_t2,
								ext_setPoint__.TID_State_machine_ClosedLoop_t2,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t2,
								int_overLimit__.TID_State_machine_ClosedLoop_t2,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t2,
								int_underLimit__.TID_State_machine_ClosedLoop_t2,
								int_DisableHV__.TID_State_machine_ClosedLoop_t2,
								int_ActualHV__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t2,
								currentState__.TID_State_machine_ClosedLoop_t3,
								ext_setPoint__.TID_State_machine_ClosedLoop_t3,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t3,
								int_overLimit__.TID_State_machine_ClosedLoop_t3,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t3,
								int_underLimit__.TID_State_machine_ClosedLoop_t3,
								int_DisableHV__.TID_State_machine_ClosedLoop_t3,
								int_ActualHV__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_ClosedLoop_t3,
								currentState__.TID_State_machine_ClosedLoop_t4,
								ext_setPoint__.TID_State_machine_ClosedLoop_t4,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t4,
								int_overLimit__.TID_State_machine_ClosedLoop_t4,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t4,
								int_underLimit__.TID_State_machine_ClosedLoop_t4,
								int_DisableHV__.TID_State_machine_ClosedLoop_t4,
								int_ActualHV__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t4,
								currentState__.TID_State_machine_ClosedLoop_t5,
								ext_setPoint__.TID_State_machine_ClosedLoop_t5,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_t5,
								int_overLimit__.TID_State_machine_ClosedLoop_t5,
								int_pwmSignal__.TID_State_machine_ClosedLoop_t5,
								int_underLimit__.TID_State_machine_ClosedLoop_t5,
								int_DisableHV__.TID_State_machine_ClosedLoop_t5,
								int_ActualHV__.TID_State_machine_ClosedLoop_t5,
								internal__.TID_State_machine_ClosedLoop_t5
							|}
								
							
							State_machine_ClosedLoop_int_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t0,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t5,
								internal__.TID_State_machine_ClosedLoop_t0
							|}
							
							State_State_machine_ClosedLoop_s1_R(id__) = 
								State_State_machine_ClosedLoop_s1(id__)
							 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s1_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop_s2_R(id__) = 
								State_State_machine_ClosedLoop_s2(id__)
							 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s2_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop_s3_R(id__) = 
								State_State_machine_ClosedLoop_s3(id__)
							 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s3_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop_s4_R(id__) = 
								State_State_machine_ClosedLoop_s4(id__)
							 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s4_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop(id__) = (
								State_State_machine_ClosedLoop_aux(id__)
									[|
										union(
											diff(int_int, State_machine_ClosedLoop_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4}),
											  y____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4}
										    |}
										)
									|]
								(
									State_State_machine_ClosedLoop_s1_R(id__)
										[|inter(CS_State_machine_ClosedLoop_s1_sync,union(union(CS_State_machine_ClosedLoop_s2_sync,CS_State_machine_ClosedLoop_s3_sync),CS_State_machine_ClosedLoop_s4_sync))|]
									(
										State_State_machine_ClosedLoop_s2_R(id__)
											[|inter(CS_State_machine_ClosedLoop_s2_sync,union(CS_State_machine_ClosedLoop_s3_sync,CS_State_machine_ClosedLoop_s4_sync))|]
										(
											State_State_machine_ClosedLoop_s3_R(id__)
												[|inter(CS_State_machine_ClosedLoop_s3_sync,CS_State_machine_ClosedLoop_s4_sync)|]
											State_State_machine_ClosedLoop_s4_R(id__)
										)
									)
								)
							)
							
							State_machine_ClosedLoop_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t0,
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_t7,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								int_DisableHV__.TID_State_machine_t8,
								internal__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_ClosedLoop_t0,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_t6,
								internal__.TID_State_machine_ClosedLoop_t5
							|}
							
							State_State_machine_ClosedLoop_aux(id__) = let
								T_State_machine_t4(id__) = internal__!TID_State_machine_t4 ->  exit.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
													exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
													true & (set_res!false -> SKIP);enter!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode ->
													State_State_machine_ClosedLoop_aux(id__)
								T_State_machine_t11(id__) = int_DisableHV__!TID_State_machine_t11.in ->  (exit.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
													exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
													J_State_machine_j0(id__))
								J_State_machine_j0(id__) = (
											(internal__!TID_State_machine_t7 -> true&CALL__disableHV(
														id__,
														true
													);true & (set_res!false -> SKIP);enter!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode ->
											State_State_machine_ClosedLoop_aux(id__)
											)
											)
								State_State_machine_ClosedLoop_aux_execute(id__,o____) = true&(currentState.out!State_ClosedLoop -> SKIP); 
								I_State_machine_ClosedLoop_i0(id__);
									entered!o____!SID_State_machine_ClosedLoop ->
									(SKIP; STOP /\ (
										T_State_machine_t4(id__)[]
										T_State_machine_t11(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop -> SKIP);
												State_State_machine_ClosedLoop_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (State_State_machine_ClosedLoop_aux_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s1_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
								y____ <- {SID_State_machine_ClosedLoop_s1}
							|}
							
							
							State_machine_ClosedLoop_s1_triggers = {|
							|}
							
							State_State_machine_ClosedLoop_s1(id__) = let
								State_State_machine_ClosedLoop_s1_execute(id__,o____) = true & (set_lim!false -> SKIP);true&CALL__disableHV(
											id__,
											true
										); 
									entered!o____!SID_State_machine_ClosedLoop_s1 ->
									(SKIP; STOP /\ (
										internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
												State_State_machine_ClosedLoop_s1(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (State_State_machine_ClosedLoop_s1_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s2_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
								y____ <- {SID_State_machine_ClosedLoop_s2}
							|}
							
							State_machine_ClosedLoop_s2_int_int = {|
								currentState__.TID_State_machine_ClosedLoop_s2_t1,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								currentState__.TID_State_machine_ClosedLoop_s2_t2,
								ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
								ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
								int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
								int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
								int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
								int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t2
							|}
								
							
							State_machine_ClosedLoop_s2_int_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t0,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t2
							|}
							
							State_State_machine_ClosedLoop_s2_s0_R(id__) = 
								State_State_machine_ClosedLoop_s2_s0(id__)
							 		[|diff(State_machine_ClosedLoop_s2_int_int,State_machine_ClosedLoop_s2_s0_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop_s2_s1_R(id__) = 
								State_State_machine_ClosedLoop_s2_s1(id__)
							 		[|diff(State_machine_ClosedLoop_s2_int_int,State_machine_ClosedLoop_s2_s1_triggers)|]
							 	SKIP
							 		
							State_State_machine_ClosedLoop_s2(id__) = (
								State_State_machine_ClosedLoop_s2_aux(id__)
									[|
										union(
											diff(int_int, State_machine_ClosedLoop_s2_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1}),
											  y____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1}
										    |}
										)
									|]
								(
									State_State_machine_ClosedLoop_s2_s0_R(id__)
										[|inter(CS_State_machine_ClosedLoop_s2_s0_sync,CS_State_machine_ClosedLoop_s2_s1_sync)|]
									State_State_machine_ClosedLoop_s2_s1_R(id__)
								)
							)
							
							State_machine_ClosedLoop_s2_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t0,
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t2
							|}
							
							State_State_machine_ClosedLoop_s2_aux(id__) = let
								T_State_machine_ClosedLoop_t2(id__) = internal__!TID_State_machine_ClosedLoop_t2 ->  exit.SID_State_machine_ClosedLoop_s2.SID_State_machine_ClosedLoop_s2 -> SKIP;
													exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s2.SID_State_machine_ClosedLoop_s2 -> SKIP;
													enter!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s1 ->
													State_State_machine_ClosedLoop_s2_aux(id__)
								State_State_machine_ClosedLoop_s2_aux_execute(id__,o____) = SKIP; 
								I_State_machine_ClosedLoop_s2_i0(id__);
									entered!o____!SID_State_machine_ClosedLoop_s2 ->
									(SKIP; STOP /\ (
										T_State_machine_ClosedLoop_t2(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
												State_State_machine_ClosedLoop_s2_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (State_State_machine_ClosedLoop_s2_aux_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s2_s0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1},
								y____ <- {SID_State_machine_ClosedLoop_s2_s0}
							|}
							
							
							State_machine_ClosedLoop_s2_s0_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t2
							|}
							
							State_State_machine_ClosedLoop_s2_s0(id__) = let
								T_State_machine_ClosedLoop_s2_t1(id__) = internal__!TID_State_machine_ClosedLoop_s2_t1 ->  exit.SID_State_machine_ClosedLoop_s2_s0.SID_State_machine_ClosedLoop_s2_s0 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s2_s0.SID_State_machine_ClosedLoop_s2_s0 -> SKIP;
													enter!SID_State_machine_ClosedLoop_s2_s0!SID_State_machine_ClosedLoop_s2_s1 -> entered!SID_State_machine_ClosedLoop_s2_s0!SID_State_machine_ClosedLoop_s2_s1 ->
													State_State_machine_ClosedLoop_s2_s0(id__)
								State_State_machine_ClosedLoop_s2_s0_execute(id__,o____) = true&CALL__checkLimits(
											id__
										); 
									entered!o____!SID_State_machine_ClosedLoop_s2_s0 ->
									(SKIP; STOP /\ (
										T_State_machine_ClosedLoop_s2_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
												State_State_machine_ClosedLoop_s2_s0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (State_State_machine_ClosedLoop_s2_s0_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s2_s1_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1},
								y____ <- {SID_State_machine_ClosedLoop_s2_s1}
							|}
							
							
							State_machine_ClosedLoop_s2_s1_triggers = {|
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_s2_t1
							|}
							
							State_State_machine_ClosedLoop_s2_s1(id__) = let
								T_State_machine_ClosedLoop_s2_t2(id__) = internal__!TID_State_machine_ClosedLoop_s2_t2 ->  exit.SID_State_machine_ClosedLoop_s2_s1.SID_State_machine_ClosedLoop_s2_s1 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s2_s1.SID_State_machine_ClosedLoop_s2_s1 -> SKIP;
													get_setPoint?setPoint -> true & (set_ActualHV!setPoint -> SKIP);J_State_machine_ClosedLoop_s2_j0(id__)
								J_State_machine_ClosedLoop_s2_j0(id__) = (
											(internal__!TID_State_machine_ClosedLoop_s2_t5 -> get_ActualHV?ActualHV -> true&(int_ActualHV.out!ActualHV -> SKIP);enter!SID_State_machine_ClosedLoop_s2_s1!SID_State_machine_ClosedLoop_s2_s0 -> entered!SID_State_machine_ClosedLoop_s2_s1!SID_State_machine_ClosedLoop_s2_s0 ->
											State_State_machine_ClosedLoop_s2_s1(id__)
											)
											)
								State_State_machine_ClosedLoop_s2_s1_execute(id__,o____) = true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP); 
									entered!o____!SID_State_machine_ClosedLoop_s2_s1 ->
									(SKIP; STOP /\ (
										T_State_machine_ClosedLoop_s2_t2(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
												State_State_machine_ClosedLoop_s2_s1(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (State_State_machine_ClosedLoop_s2_s1_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s3_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
								y____ <- {SID_State_machine_ClosedLoop_s3}
							|}
							
							
							State_machine_ClosedLoop_s3_triggers = {|
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t5
							|}
							
							State_State_machine_ClosedLoop_s3(id__) = let
								T_State_machine_ClosedLoop_t4(id__) = internal__!TID_State_machine_ClosedLoop_t4 ->  exit.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
													enter!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s2 -> entered!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s2 ->
													State_State_machine_ClosedLoop_s3(id__)
								T_State_machine_ClosedLoop_t5(id__) = internal__!TID_State_machine_ClosedLoop_t5 ->  exit.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
													enter!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s1 ->
													State_State_machine_ClosedLoop_s3(id__)
								State_State_machine_ClosedLoop_s3_execute(id__,o____) = true&CALL__checkLimits(
											id__
										); 
									entered!o____!SID_State_machine_ClosedLoop_s3 ->
									(SKIP; STOP /\ (
										T_State_machine_ClosedLoop_t4(id__)[]
										T_State_machine_ClosedLoop_t5(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
												State_State_machine_ClosedLoop_s3(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (State_State_machine_ClosedLoop_s3_execute(id__,x____))
							
							CS_State_machine_ClosedLoop_s4_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
								y____ <- {SID_State_machine_ClosedLoop_s4}
							|}
							
							
							State_machine_ClosedLoop_s4_triggers = {|
								internal__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t5
							|}
							
							State_State_machine_ClosedLoop_s4(id__) = let
								T_State_machine_ClosedLoop_t1(id__) = internal__!TID_State_machine_ClosedLoop_t1 ->  exit.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
													enter!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s1 ->
													State_State_machine_ClosedLoop_s4(id__)
								T_State_machine_ClosedLoop_t3(id__) = internal__!TID_State_machine_ClosedLoop_t3 ->  exit.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
													SKIP;exited.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
													true&(int_pwmSignal.out!Power_On -> SKIP);enter!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s3 -> entered!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s3 ->
													State_State_machine_ClosedLoop_s4(id__)
								State_State_machine_ClosedLoop_s4_execute(id__,o____) = true&CALL__supplyVoltCheck(
											id__
										); 
									entered!o____!SID_State_machine_ClosedLoop_s4 ->
									(SKIP; STOP /\ (
										T_State_machine_ClosedLoop_t1(id__)[]
										T_State_machine_ClosedLoop_t3(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
												SKIP;
												exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
												State_State_machine_ClosedLoop_s4(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (State_State_machine_ClosedLoop_s4_execute(id__,x____))
							
							CS_State_machine_ErrorMode_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
								y____ <- {SID_State_machine_ErrorMode}
							|}
							
							State_machine_ErrorMode_int_int = {|
								currentState__.TID_State_machine_ErrorMode_t0,
								ext_setPoint__.TID_State_machine_ErrorMode_t0,
								ext_pow24VStatus__.TID_State_machine_ErrorMode_t0,
								int_overLimit__.TID_State_machine_ErrorMode_t0,
								int_pwmSignal__.TID_State_machine_ErrorMode_t0,
								int_underLimit__.TID_State_machine_ErrorMode_t0,
								int_DisableHV__.TID_State_machine_ErrorMode_t0,
								int_ActualHV__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t0,
								currentState__.TID_State_machine_ErrorMode_t4,
								ext_setPoint__.TID_State_machine_ErrorMode_t4,
								ext_pow24VStatus__.TID_State_machine_ErrorMode_t4,
								int_overLimit__.TID_State_machine_ErrorMode_t4,
								int_pwmSignal__.TID_State_machine_ErrorMode_t4,
								int_underLimit__.TID_State_machine_ErrorMode_t4,
								int_DisableHV__.TID_State_machine_ErrorMode_t4,
								int_ActualHV__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t4
							|}
								
							
							State_machine_ErrorMode_int_triggers = {|
								internal__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t2,
								internal__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t5,
								internal__.TID_State_machine_ErrorMode_t1
							|}
							
							State_State_machine_ErrorMode_f0_R(id__) = 
								State_State_machine_ErrorMode_f0(id__)
							 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_f0_triggers)|]
							 	SKIP
							 		
							State_State_machine_ErrorMode_s1_R(id__) = 
								State_State_machine_ErrorMode_s1(id__)
							 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_s1_triggers)|]
							 	SKIP
							 		
							State_State_machine_ErrorMode_s2_R(id__) = 
								State_State_machine_ErrorMode_s2(id__)
							 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_s2_triggers)|]
							 	SKIP
							 		
							State_State_machine_ErrorMode(id__) = (
								State_State_machine_ErrorMode_aux(id__)
									[|
										union(
											diff(int_int, State_machine_ErrorMode_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2}),
											  y____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2}
										    |}
										)
									|]
								(
									State_State_machine_ErrorMode_f0_R(id__)
										[|inter(CS_State_machine_ErrorMode_f0_sync,union(CS_State_machine_ErrorMode_s1_sync,CS_State_machine_ErrorMode_s2_sync))|]
									(
										State_State_machine_ErrorMode_s1_R(id__)
											[|inter(CS_State_machine_ErrorMode_s1_sync,CS_State_machine_ErrorMode_s2_sync)|]
										State_State_machine_ErrorMode_s2_R(id__)
									)
								)
							)
							
							State_machine_ErrorMode_triggers = {|
								int_DisableHV__.TID_State_machine_t8,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_t7,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t6,
								internal__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t5,
								internal__.TID_State_machine_ErrorMode_t1,
								internal__.TID_State_machine_ErrorMode_t2
							|}
							
							State_State_machine_ErrorMode_aux(id__) = let
								T_State_machine_t6(id__) = internal__!TID_State_machine_t6 ->  exit.SID_State_machine_ErrorMode.SID_State_machine_ErrorMode -> SKIP;
													exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
															SKIP;
													SKIP;exited.SID_State_machine_ErrorMode.SID_State_machine_ErrorMode -> SKIP;
													enter!SID_State_machine_ErrorMode!SID_State_machine_Wait24Vpower -> entered!SID_State_machine_ErrorMode!SID_State_machine_Wait24Vpower ->
													State_State_machine_ErrorMode_aux(id__)
								State_State_machine_ErrorMode_aux_execute(id__,o____) = true&(currentState.out!State_ErrorMode -> SKIP);true&CALL__disableHV(
											id__,
											false
										); 
								I_State_machine_ErrorMode_i0(id__);
									entered!o____!SID_State_machine_ErrorMode ->
									(SKIP; STOP /\ (
										T_State_machine_t6(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_State_machine_ErrorMode -> SKIP);
												State_State_machine_ErrorMode_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (State_State_machine_ErrorMode_aux_execute(id__,x____))
							
							CS_State_machine_ErrorMode_f0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
								y____ <- {SID_State_machine_ErrorMode_f0}
							|}
							
							
							State_machine_ErrorMode_f0_triggers = {|
							|}
							
							State_State_machine_ErrorMode_f0(id__) = let
								State_State_machine_ErrorMode_f0_execute(id__,o____) = SKIP; 
									entered!o____!SID_State_machine_ErrorMode_f0 ->
									(SKIP; STOP /\ (
										internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
												State_State_machine_ErrorMode_f0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (State_State_machine_ErrorMode_f0_execute(id__,x____))
							
							CS_State_machine_ErrorMode_s1_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
								y____ <- {SID_State_machine_ErrorMode_s1}
							|}
							
							
							State_machine_ErrorMode_s1_triggers = {|
								internal__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t5,
								internal__.TID_State_machine_ErrorMode_t1
							|}
							
							State_State_machine_ErrorMode_s1(id__) = let
								T_State_machine_ErrorMode_t0(id__) = internal__!TID_State_machine_ErrorMode_t0 ->  exit.SID_State_machine_ErrorMode_s1.SID_State_machine_ErrorMode_s1 -> SKIP;
													SKIP;exited.SID_State_machine_ErrorMode_s1.SID_State_machine_ErrorMode_s1 -> SKIP;
													get_setPoint?setPoint -> true&(ext_setPoint.out!setPoint -> SKIP);enter!SID_State_machine_ErrorMode_s1!SID_State_machine_ErrorMode_s2 -> entered!SID_State_machine_ErrorMode_s1!SID_State_machine_ErrorMode_s2 ->
													State_State_machine_ErrorMode_s1(id__)
								State_State_machine_ErrorMode_s1_execute(id__,o____) = true & (set_setPoint!0 -> SKIP); 
									entered!o____!SID_State_machine_ErrorMode_s1 ->
									(SKIP; STOP /\ (
										T_State_machine_ErrorMode_t0(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
												State_State_machine_ErrorMode_s1(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (State_State_machine_ErrorMode_s1_execute(id__,x____))
							
							CS_State_machine_ErrorMode_s2_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
								y____ <- {SID_State_machine_ErrorMode_s2}
							|}
							
							
							State_machine_ErrorMode_s2_triggers = {|
								internal__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t5,
								internal__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t1
							|}
							
							State_State_machine_ErrorMode_s2(id__) = let
								T_State_machine_ErrorMode_t4(id__) = internal__!TID_State_machine_ErrorMode_t4 ->  exit.SID_State_machine_ErrorMode_s2.SID_State_machine_ErrorMode_s2 -> SKIP;
													SKIP;exited.SID_State_machine_ErrorMode_s2.SID_State_machine_ErrorMode_s2 -> SKIP;
													get_ActualHV?ActualHV -> true&(int_ActualHV.out!ActualHV -> SKIP);J_State_machine_ErrorMode_j0(id__)
								J_State_machine_ErrorMode_j0(id__) = (
											(internal__!TID_State_machine_ErrorMode_t5 -> true & (set_errorAck!true -> SKIP);enter!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_f0 -> entered!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_f0 ->
											State_State_machine_ErrorMode_s2(id__)
											)[]
											(internal__!TID_State_machine_ErrorMode_t1 -> enter!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_s1 -> entered!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_s1 ->
											State_State_machine_ErrorMode_s2(id__)
											)
											)
								State_State_machine_ErrorMode_s2_execute(id__,o____) = true & (set_ActualHV!0 -> SKIP); 
									entered!o____!SID_State_machine_ErrorMode_s2 ->
									(SKIP; STOP /\ (
										T_State_machine_ErrorMode_t4(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
												SKIP;
												exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
												State_State_machine_ErrorMode_s2(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (State_State_machine_ErrorMode_s2_execute(id__,x____))
							
							
							I_State_machine_Init_i0(id__) = let
								T_State_machine_Init_t0(id__) = internal__!TID_State_machine_Init_t0 -> true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP);enter!SID_State_machine_Init!SID_State_machine_Init_si0 -> entered!SID_State_machine_Init!SID_State_machine_Init_si0 ->
								SKIP
							within
								T_State_machine_Init_t0(id__)
							
							I_State_machine_Wait24Vpower_i0(id__) = let
								T_State_machine_Wait24Vpower_t0(id__) = internal__!TID_State_machine_Wait24Vpower_t0 -> true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_Wait24Vpower_si0 -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_Wait24Vpower_si0 ->
								SKIP
							within
								T_State_machine_Wait24Vpower_t0(id__)
							
							I_State_machine_ClosedLoop_i0(id__) = let
								T_State_machine_ClosedLoop_t0(id__) = internal__!TID_State_machine_ClosedLoop_t0 -> enter!SID_State_machine_ClosedLoop!SID_State_machine_ClosedLoop_s4 -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ClosedLoop_s4 ->
								SKIP
							within
								T_State_machine_ClosedLoop_t0(id__)
							
							I_State_machine_ClosedLoop_s2_i0(id__) = let
								T_State_machine_ClosedLoop_s2_t0(id__) = internal__!TID_State_machine_ClosedLoop_s2_t0 -> enter!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s2_s1 -> entered!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s2_s1 ->
								SKIP
							within
								T_State_machine_ClosedLoop_s2_t0(id__)
							
							I_State_machine_ErrorMode_i0(id__) = let
								T_State_machine_ErrorMode_t2(id__) = internal__!TID_State_machine_ErrorMode_t2 -> true & (set_errorAck!false -> SKIP);enter!SID_State_machine_ErrorMode!SID_State_machine_ErrorMode_s1 -> entered!SID_State_machine_ErrorMode!SID_State_machine_ErrorMode_s1 ->
								SKIP
							within
								T_State_machine_ErrorMode_t2(id__)
							
							I_State_machine_i0(id__) = let
								T_State_machine_t5(id__) = internal__!TID_State_machine_t5 -> enter!SID_State_machine!SID_State_machine_Ramping -> entered!SID_State_machine!SID_State_machine_Ramping ->
								SKIP
							within
								T_State_machine_t5(id__)
							
							
							State_State_machine_Ramping_R(id__) = 
								State_State_machine_Ramping(id__)
									[|diff(int_int,State_machine_Ramping_triggers)|]
								SKIP
									 		
							State_State_machine_Init_R(id__) = 
								State_State_machine_Init(id__)
									[|diff(int_int,State_machine_Init_triggers)|]
								SKIP
									 		
							State_State_machine_Wait24Vpower_R(id__) = 
								State_State_machine_Wait24Vpower(id__)
									[|diff(int_int,State_machine_Wait24Vpower_triggers)|]
								SKIP
									 		
							State_State_machine_ClosedLoop_R(id__) = 
								State_State_machine_ClosedLoop(id__)
									[|diff(int_int,State_machine_ClosedLoop_triggers)|]
								SKIP
									 		
							State_State_machine_ErrorMode_R(id__) = 
								State_State_machine_ErrorMode(id__)
									[|diff(int_int,State_machine_ErrorMode_triggers)|]
								SKIP
									 		
								
							STM(id__) = (
								I_State_machine_i0(id__)
									[|
										{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
											x____ <- diff(SIDS,{SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode}),
											y____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode}
									|}|]
								(
									State_State_machine_Ramping_R(id__)
										[|inter(CS_State_machine_Ramping_sync,union(union(union(CS_State_machine_Init_sync,CS_State_machine_Wait24Vpower_sync),CS_State_machine_ClosedLoop_sync),CS_State_machine_ErrorMode_sync))|]
									(
										State_State_machine_Init_R(id__)
											[|inter(CS_State_machine_Init_sync,union(union(CS_State_machine_Wait24Vpower_sync,CS_State_machine_ClosedLoop_sync),CS_State_machine_ErrorMode_sync))|]
										(
											State_State_machine_Wait24Vpower_R(id__)
												[|inter(CS_State_machine_Wait24Vpower_sync,union(CS_State_machine_ClosedLoop_sync,CS_State_machine_ErrorMode_sync))|]
											(
												State_State_machine_ClosedLoop_R(id__)
													[|inter(CS_State_machine_ClosedLoop_sync,CS_State_machine_ErrorMode_sync)|]
												State_State_machine_ErrorMode_R(id__)
											)
										)
									)
								)
							)
							
							-- optimized memory process
							channel getV_power: Power
							channel getV_setPoint: core_real
							channel getV_res: core_boolean
							channel getV_errorFlag: core_boolean
							channel getV_lim: core_boolean
							channel getV_supplyLim: core_boolean
							channel getV_ActualHV: core_real
							channel getV_errorAck: core_boolean
							channel getV_overLimit: core_real
							channel getV_underLimit: core_real
							
							-- individual memory processes
							Memory_power(x__) = ( 
								get_power!x__ -> Memory_power(x__)
								[]
								getV_power!x__ -> Memory_power(x__)
								[]
								set_power?x__ -> Memory_power(x__)
							)
							Memory_setPoint(x__) = ( 
								get_setPoint!x__ -> Memory_setPoint(x__)
								[]
								getV_setPoint!x__ -> Memory_setPoint(x__)
								[]
								set_setPoint?x__ -> Memory_setPoint(x__)
							)
							Memory_res(x__) = ( 
								get_res!x__ -> Memory_res(x__)
								[]
								getV_res!x__ -> Memory_res(x__)
								[]
								set_res?x__ -> Memory_res(x__)
							)
							Memory_errorFlag(x__) = ( 
								get_errorFlag!x__ -> Memory_errorFlag(x__)
								[]
								getV_errorFlag!x__ -> Memory_errorFlag(x__)
								[]
								set_errorFlag?x__ -> Memory_errorFlag(x__)
							)
							Memory_lim(x__) = ( 
								get_lim!x__ -> Memory_lim(x__)
								[]
								getV_lim!x__ -> Memory_lim(x__)
								[]
								set_lim?x__ -> Memory_lim(x__)
							)
							Memory_supplyLim(x__) = ( 
								get_supplyLim!x__ -> Memory_supplyLim(x__)
								[]
								getV_supplyLim!x__ -> Memory_supplyLim(x__)
								[]
								set_supplyLim?x__ -> Memory_supplyLim(x__)
							)
							Memory_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								getV_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_ActualHV(x__)
							)
							Memory_errorAck(x__) = ( 
								get_errorAck!x__ -> Memory_errorAck(x__)
								[]
								getV_errorAck!x__ -> Memory_errorAck(x__)
								[]
								set_errorAck?x__ -> Memory_errorAck(x__)
							)
							Memory_overLimit(x__) = ( 
								get_overLimit!x__ -> Memory_overLimit(x__)
								[]
								getV_overLimit!x__ -> Memory_overLimit(x__)
								[]
								set_overLimit?x__ -> Memory_overLimit(x__)
							)
							Memory_underLimit(x__) = ( 
								get_underLimit!x__ -> Memory_underLimit(x__)
								[]
								getV_underLimit!x__ -> Memory_underLimit(x__)
								[]
								set_underLimit?x__ -> Memory_underLimit(x__)
							)
							Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__) = (
								getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID!x__ -> Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__)
								[]
								setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__)
							)
							Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__) = (
								getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID!x__ -> Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
								[]
								setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
							)
							Memory_WC_TID_State_machine_t0_0(x__) = (
								getWC.WC_TID_State_machine_t0_0_ID!x__ -> Memory_WC_TID_State_machine_t0_0(x__)
								[]
								setWC.WC_TID_State_machine_t0_0_ID?x__ -> Memory_WC_TID_State_machine_t0_0(x__)
							)
							
							-- processes that read variables and offer transitions
							MemoryTransitions(id__,
								 power,
								 setPoint,
								 res,
								 errorFlag,
								 lim,
								 supplyLim,
								 ActualHV,
								 errorAck,
								 overLimit,
								 underLimit,
								 WC_TID_State_machine_ClosedLoop_t4_0,
								 WC_TID_State_machine_ClosedLoop_s2_t1_0,
								 WC_TID_State_machine_t0_0,
								 disableHV_arg,
								 supplyVoltCheck_power) = (
								internal__!TID_State_machine_Init_t0 -> SKIP
								[]
								internal__!TID_State_machine_Wait24Vpower_t0 -> SKIP
								[]
								(((setPoint!=0) or (lim==true)))&internal__!TID_State_machine_Wait24Vpower_t1 -> SKIP
								[]
								internal__!TID_State_machine_ClosedLoop_s2_t0 -> SKIP
								[]
								(WC_TID_State_machine_ClosedLoop_s2_t1_0)&internal__!TID_State_machine_ClosedLoop_s2_t1 -> SKIP
								[]
								internal__!TID_State_machine_ClosedLoop_s2_t5 -> SKIP
								[]
								internal__!TID_State_machine_ClosedLoop_s2_t2 -> SKIP
								[]
								((lim==true))&internal__!TID_State_machine_ClosedLoop_t1 -> SKIP
								[]
								((lim==true))&internal__!TID_State_machine_ClosedLoop_t2 -> SKIP
								[]
								((lim==false))&internal__!TID_State_machine_ClosedLoop_t3 -> SKIP
								[]
								(((lim==false) and WC_TID_State_machine_ClosedLoop_t4_0))&internal__!TID_State_machine_ClosedLoop_t4 -> SKIP
								[]
								((lim==true))&internal__!TID_State_machine_ClosedLoop_t5 -> SKIP
								[]
								internal__!TID_State_machine_ClosedLoop_t0 -> SKIP
								[]
								internal__!TID_State_machine_ErrorMode_t0 -> SKIP
								[]
								internal__!TID_State_machine_ErrorMode_t2 -> SKIP
								[]
								internal__!TID_State_machine_ErrorMode_t4 -> SKIP
								[]
								(((setPoint==0) and (ActualHV==0)))&internal__!TID_State_machine_ErrorMode_t5 -> SKIP
								[]
								(((setPoint!=0) or (ActualHV!=0)))&internal__!TID_State_machine_ErrorMode_t1 -> SKIP
								[]
								(WC_TID_State_machine_t0_0)&internal__!TID_State_machine_t0 -> SKIP
								[]
								internal__!TID_State_machine_t1 -> SKIP
								[]
								((res==true))&internal__!TID_State_machine_t2 -> SKIP
								[]
								((((setPoint==0) and (lim==false)) and (res==false)))&internal__!TID_State_machine_t3 -> SKIP
								[]
								((res==true))&internal__!TID_State_machine_t4 -> SKIP
								[]
								internal__!TID_State_machine_t5 -> SKIP
								[]
								(errorAck)&internal__!TID_State_machine_t6 -> SKIP
								[]
								int_DisableHV__!TID_State_machine_t8.in -> SKIP
								[]
								int_DisableHV__!TID_State_machine_t11.in -> SKIP
								[]
								internal__!TID_State_machine_t7 -> SKIP
							
								[]
									OP_disableHV::MemoryTransitions(id__,
									 disableHV_arg,
									 setPoint,
									 res,
									 errorFlag,
									 lim,
									 supplyLim,
									 ActualHV,
									 errorAck,
									 overLimit,
									 underLimit)
								[]		 		OP_supplyVoltCheck::MemoryTransitions(id__,
									 supplyVoltCheck_power,
									 setPoint,
									 res,
									 errorFlag,
									 lim,
									 supplyLim,
									 ActualHV,
									 errorAck,
									 overLimit,
									 underLimit)
								[]		 		OP_checkLimits::MemoryTransitions(id__,
									 setPoint,
									 res,
									 errorFlag,
									 lim,
									 supplyLim,
									 ActualHV,
									 errorAck,
									 overLimit,
									 underLimit)		 	
							
								[]
									set_power?x__ -> SKIP
								[]
								set_setPoint?x__ -> SKIP
								[]
								set_res?x__ -> SKIP
								[]
								set_errorFlag?x__ -> SKIP
								[]
								set_lim?x__ -> SKIP
								[]
								set_supplyLim?x__ -> SKIP
								[]
								set_ActualHV?x__ -> SKIP
								[]
								set_errorAck?x__ -> SKIP
								[]
								set_overLimit?x__ -> SKIP
								[]
								set_underLimit?x__ -> SKIP
							
								[]
									setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> SKIP
								[]
								setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> SKIP
								[]
								setWC.WC_TID_State_machine_t0_0_ID?x__ -> SKIP
							 	)
							MemoryTransitions_State_machine(id__) =
								(
								getV_power?power ->	
								getV_setPoint?setPoint ->	
								getV_res?res ->	
								getV_errorFlag?errorFlag ->	
								getV_lim?lim ->	
								getV_supplyLim?supplyLim ->	
								getV_ActualHV?ActualHV ->	
								getV_errorAck?errorAck ->	
								getV_overLimit?overLimit ->	
								getV_underLimit?underLimit ->	
								getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?WC_TID_State_machine_ClosedLoop_t4_0 ->	
								getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?WC_TID_State_machine_ClosedLoop_s2_t1_0 ->	
								getWC.WC_TID_State_machine_t0_0_ID?WC_TID_State_machine_t0_0 ->	
								OP_disableHV::getV_arg?disableHV_arg ->	
								OP_supplyVoltCheck::getV_power?supplyVoltCheck_power ->
								 MemoryTransitions(id__,
								 	 power,
								 	 setPoint,
								 	 res,
								 	 errorFlag,
								 	 lim,
								 	 supplyLim,
								 	 ActualHV,
								 	 errorAck,
								 	 overLimit,
								 	 underLimit,
								 	 WC_TID_State_machine_ClosedLoop_t4_0,
								 	 WC_TID_State_machine_ClosedLoop_s2_t1_0,
								 	 WC_TID_State_machine_t0_0,
								 	 disableHV_arg,
								 	 supplyVoltCheck_power);
								 MemoryTransitions_State_machine(id__)
								)
							
							-- synchronisation, hiding and process sets 
							MemoryVariablesProcesses_State_machine = Union(
								{
									OP_disableHV::MemoryVariablesProcesses_disableHV,
									OP_supplyVoltCheck::MemoryVariablesProcesses_supplyVoltCheck,
									OP_checkLimits::MemoryVariablesProcesses_checkLimits,
									{
										Memory_power(Power_On),
										Memory_setPoint(0),
										Memory_res(false),
										Memory_errorFlag(true),
										Memory_lim(false),
										Memory_supplyLim(false),
										Memory_ActualHV(0),
										Memory_errorAck(false),
										Memory_overLimit(0),
										Memory_underLimit(0),
										Memory_WC_TID_State_machine_ClosedLoop_t4_0(false),
										Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(false),
										Memory_WC_TID_State_machine_t0_0(false)
									}
								}
							)
							
							MemoryVariablesSyncSet = Union({
								OP_disableHV::MemoryVariablesSyncSet,
								OP_supplyVoltCheck::MemoryVariablesSyncSet,
								OP_checkLimits::MemoryVariablesSyncSet,
								{|
									set_ActualHV,
									setWC.WC_TID_State_machine_t0_0_ID,
									set_errorFlag,
									getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,
									getV_supplyLim,
									set_power,
									getV_errorFlag,
									set_res,
									getV_lim,
									getWC.WC_TID_State_machine_t0_0_ID,
									set_underLimit,
									getV_ActualHV,
									getV_power,
									set_overLimit,
									set_lim,
									getV_setPoint,
									getV_res,
									setWC,
									getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,
									set_errorAck,
									set_setPoint,
									getV_errorAck,
									setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,
									set_supplyLim,
									getV_underLimit,
									setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,
									getV_overLimit
								|}	
							})
							
							MemoryVariablesHideSet = Union({
								OP_disableHV::MemoryVariablesHideSet,
								OP_supplyVoltCheck::MemoryVariablesHideSet,
								OP_checkLimits::MemoryVariablesHideSet,
								{|
									getV_power,
									getV_errorAck,
									getV_setPoint,
									getV_res,
									getV_lim,
									getV_supplyLim,
									getWC,
									getV_errorFlag,
									getV_underLimit,
									getV_ActualHV,
									getV_overLimit
								|}
							})
							
							-- combined individual memory processes
							MemoryVariables = ||| P : MemoryVariablesProcesses_State_machine @ P
							
							-- complete memory process
							MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_State_machine(id__)) \ MemoryVariablesHideSet
							
							-- optimised memory
							-- Sets of named elements identified according to transition conditions:
							-- {}
							-- {res,lim,setPoint}
							-- {WC_TID_State_machine_t0_0}
							-- {overLimit,ActualHV,underLimit}
							-- {OP_disableHV::arg}
							-- {ActualHV,setPoint}
							-- {WC_TID_State_machine_ClosedLoop_t4_0,lim}
							-- {errorAck}
							-- {WC_TID_State_machine_ClosedLoop_s2_t1_0}
							-- Summary of all identified named elements:
							-- {
							-- OP_supplyVoltCheck::power
							-- overLimit
							-- WC_TID_State_machine_t0_0
							-- setPoint
							-- OP_disableHV::arg
							-- res
							-- WC_TID_State_machine_ClosedLoop_t4_0
							-- errorFlag
							-- ActualHV
							-- underLimit
							-- lim
							-- power
							-- supplyLim
							-- errorAck
							-- WC_TID_State_machine_ClosedLoop_s2_t1_0
							-- }
							
							-- Allocation plan:
							-- 0:{}
							--	=> {
							--		TID_State_machine_ErrorMode_t0,
							--		TID_supplyVoltCheck_t0,
							--		TID_State_machine_ClosedLoop_s2_t0,
							--		TID_supplyVoltCheck_t1,
							--		TID_disableHV_t3,
							--		TID_State_machine_ClosedLoop_s2_t5,
							--		TID_supplyVoltCheck_t2,
							--		TID_State_machine_ClosedLoop_t0,
							--		TID_State_machine_t1,
							--		TID_State_machine_ErrorMode_t4,
							--		TID_State_machine_Wait24Vpower_t0,
							--		TID_State_machine_ClosedLoop_s2_t2,
							--		TID_State_machine_t5,
							--		TID_State_machine_t8,
							--		TID_checkLimits_t0,
							--		TID_State_machine_ErrorMode_t2,
							--		TID_State_machine_t11,
							--		TID_State_machine_t7,
							--		TID_disableHV_t2,
							--		TID_State_machine_Init_t0}
							-- 7:{res,lim,setPoint}
							--	=> {
							--		TID_State_machine_ClosedLoop_t1,
							--		TID_State_machine_ClosedLoop_t2,
							--		TID_State_machine_t3,
							--		TID_State_machine_Wait24Vpower_t1,
							--		TID_State_machine_t4,
							--		TID_State_machine_ClosedLoop_t5,
							--		TID_State_machine_t2,
							--		TID_State_machine_ClosedLoop_t3}
							-- 1:{WC_TID_State_machine_t0_0}
							--	=> {
							--		TID_State_machine_t0}
							-- 8:{overLimit,ActualHV,underLimit}
							--	=> {
							--		TID_checkLimits_t1,
							--		TID_checkLimits_t2}
							-- 2:{OP_disableHV::arg}
							--	=> {
							--		TID_disableHV_t1,
							--		TID_disableHV_t0}
							-- 5:{ActualHV,setPoint}
							--	=> {
							--		TID_State_machine_ErrorMode_t1,
							--		TID_State_machine_ErrorMode_t5}
							-- 6:{WC_TID_State_machine_ClosedLoop_t4_0,lim}
							--	=> {
							--		TID_State_machine_ClosedLoop_t4}
							-- 3:{errorAck}
							--	=> {
							--		TID_State_machine_t6}
							-- 4:{WC_TID_State_machine_ClosedLoop_s2_t1_0}
							--	=> {
							--		TID_State_machine_ClosedLoop_s2_t1}
							
							-- Memory transition processes
							MemoryTransitions_opt_0(id__) =
							(
								let
									Update = Current(id__)
									Current(id__)
									 	   = 
									 	   internal__!TID_State_machine_ErrorMode_t0 -> Update
									 	   []
									 	   OP_supplyVoltCheck::internal__!OP_supplyVoltCheck::TID_supplyVoltCheck_t0 -> Update
									 	   []
									 	   internal__!TID_State_machine_ClosedLoop_s2_t0 -> Update
									 	   []
									 	   OP_supplyVoltCheck::ext_pow24VStatus__!OP_supplyVoltCheck::TID_supplyVoltCheck_t1.in?power:{power|power <- Power, (power==Power_On)} -> Update
									 	   []
									 	   OP_disableHV::internal__!OP_disableHV::TID_disableHV_t3 -> Update
									 	   []
									 	   internal__!TID_State_machine_ClosedLoop_s2_t5 -> Update
									 	   []
									 	   OP_supplyVoltCheck::ext_pow24VStatus__!OP_supplyVoltCheck::TID_supplyVoltCheck_t2.in?power:{power|power <- Power, (power==Power_Off)} -> Update
									 	   []
									 	   internal__!TID_State_machine_ClosedLoop_t0 -> Update
									 	   []
									 	   internal__!TID_State_machine_t1 -> Update
									 	   []
									 	   internal__!TID_State_machine_ErrorMode_t4 -> Update
									 	   []
									 	   internal__!TID_State_machine_Wait24Vpower_t0 -> Update
									 	   []
									 	   internal__!TID_State_machine_ClosedLoop_s2_t2 -> Update
									 	   []
									 	   internal__!TID_State_machine_t5 -> Update
									 	   []
									 	   int_DisableHV__!TID_State_machine_t8.in -> Update
									 	   []
									 	   OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t0 -> Update
									 	   []
									 	   internal__!TID_State_machine_ErrorMode_t2 -> Update
									 	   []
									 	   int_DisableHV__!TID_State_machine_t11.in -> Update
									 	   []
									 	   internal__!TID_State_machine_t7 -> Update
									 	   []
									 	   OP_disableHV::internal__!OP_disableHV::TID_disableHV_t2 -> Update
									 	   []
									 	   internal__!TID_State_machine_Init_t0 -> Update
								within
									Update
							)
							MemoryTransitions_opt_7(id__) =
							(
								let
									Update = 
									get_res?res ->
									get_lim?lim ->
									get_setPoint?setPoint ->
									Current(id__,
										 res,
										 lim,
										 setPoint)
									Current(id__,
										 res,
										 lim,
										 setPoint)
									 	   = 
									 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t1 -> Update)
									 	   []
									 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t2 -> Update)
									 	   []
									 	   ((((setPoint==0) and (lim==false)) and (res==false)))&(internal__!TID_State_machine_t3 -> Update)
									 	   []
									 	   (((setPoint!=0) or (lim==true)))&(internal__!TID_State_machine_Wait24Vpower_t1 -> Update)
									 	   []
									 	   ((res==true))&(internal__!TID_State_machine_t4 -> Update)
									 	   []
									 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t5 -> Update)
									 	   []
									 	   ((res==true))&(internal__!TID_State_machine_t2 -> Update)
									 	   []
									 	   ((lim==false))&(internal__!TID_State_machine_ClosedLoop_t3 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_res?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_lim?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_setPoint?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_1(id__) =
							(
								let
									Update = 
									getWC.WC_TID_State_machine_t0_0_ID?WC_TID_State_machine_t0_0 ->
									Current(id__,
										 WC_TID_State_machine_t0_0)
									Current(id__,
										 WC_TID_State_machine_t0_0)
									 	   = 
									 	   (WC_TID_State_machine_t0_0)&(internal__!TID_State_machine_t0 -> Update)
									 	   	 
									 	   	 []
									 	   	 setWC.WC_TID_State_machine_t0_0_ID?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_8(id__) =
							(
								let
									Update = 
									get_overLimit?overLimit ->
									get_ActualHV?ActualHV ->
									get_underLimit?underLimit ->
									Current(id__,
										 overLimit,
										 ActualHV,
										 underLimit)
									Current(id__,
										 overLimit,
										 ActualHV,
										 underLimit)
									 	   = 
									 	   (((ActualHV<=overLimit) and (ActualHV>=underLimit)))&(OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t1 -> Update)
									 	   []
									 	   (((ActualHV<underLimit) or (ActualHV>overLimit)))&(OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t2 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_overLimit?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_ActualHV?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_underLimit?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_2(id__) =
							(
								let
									Update = 
									OP_disableHV::get_arg?arg ->
									Current(id__,
										 arg)
									Current(id__,
										 arg)
									 	   = 
									 	   ((arg==true))&(OP_disableHV::internal__!OP_disableHV::TID_disableHV_t1 -> Update)
									 	   []
									 	   ((arg==false))&(OP_disableHV::internal__!OP_disableHV::TID_disableHV_t0 -> Update)
									 	   	 
									 	   	 []
									 	   	 OP_disableHV::set_arg?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_5(id__) =
							(
								let
									Update = 
									get_ActualHV?ActualHV ->
									get_setPoint?setPoint ->
									Current(id__,
										 ActualHV,
										 setPoint)
									Current(id__,
										 ActualHV,
										 setPoint)
									 	   = 
									 	   (((setPoint!=0) or (ActualHV!=0)))&(internal__!TID_State_machine_ErrorMode_t1 -> Update)
									 	   []
									 	   (((setPoint==0) and (ActualHV==0)))&(internal__!TID_State_machine_ErrorMode_t5 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_ActualHV?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_setPoint?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_6(id__) =
							(
								let
									Update = 
									getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?WC_TID_State_machine_ClosedLoop_t4_0 ->
									get_lim?lim ->
									Current(id__,
										 WC_TID_State_machine_ClosedLoop_t4_0,
										 lim)
									Current(id__,
										 WC_TID_State_machine_ClosedLoop_t4_0,
										 lim)
									 	   = 
									 	   (((lim==false) and WC_TID_State_machine_ClosedLoop_t4_0))&(internal__!TID_State_machine_ClosedLoop_t4 -> Update)
									 	   	 
									 	   	 []
									 	   	 setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_lim?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_3(id__) =
							(
								let
									Update = 
									get_errorAck?errorAck ->
									Current(id__,
										 errorAck)
									Current(id__,
										 errorAck)
									 	   = 
									 	   (errorAck)&(internal__!TID_State_machine_t6 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_errorAck?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_4(id__) =
							(
								let
									Update = 
									getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?WC_TID_State_machine_ClosedLoop_s2_t1_0 ->
									Current(id__,
										 WC_TID_State_machine_ClosedLoop_s2_t1_0)
									Current(id__,
										 WC_TID_State_machine_ClosedLoop_s2_t1_0)
									 	   = 
									 	   (WC_TID_State_machine_ClosedLoop_s2_t1_0)&(internal__!TID_State_machine_ClosedLoop_s2_t1 -> Update)
									 	   	 
									 	   	 []
									 	   	 setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Update
								within
									Update
							)
							
							-- Memory cell processes
							Memory_opt_overLimit(x__) = ( 
								get_overLimit!x__ -> Memory_opt_overLimit(x__)
								[]
								set_overLimit?x__ -> Memory_opt_overLimit(x__)
							)
							Memory_opt_WC_TID_State_machine_t0_0(x__) = ( 
								getWC.WC_TID_State_machine_t0_0_ID!x__ -> Memory_opt_WC_TID_State_machine_t0_0(x__)
								[]
								setWC.WC_TID_State_machine_t0_0_ID?x__ -> Memory_opt_WC_TID_State_machine_t0_0(x__)
							)
							Memory_opt_setPoint(x__) = ( 
								get_setPoint!x__ -> Memory_opt_setPoint(x__)
								[]
								set_setPoint?x__ -> Memory_opt_setPoint(x__)
							)
							Memory_opt_res(x__) = ( 
								get_res!x__ -> Memory_opt_res(x__)
								[]
								set_res?x__ -> Memory_opt_res(x__)
							)
							Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__) = ( 
								getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID!x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__)
								[]
								setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__)
							)
							Memory_opt_errorFlag(x__) = ( 
								get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
								[]
								set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
							)
							Memory_opt_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
							)
							Memory_opt_underLimit(x__) = ( 
								get_underLimit!x__ -> Memory_opt_underLimit(x__)
								[]
								set_underLimit?x__ -> Memory_opt_underLimit(x__)
							)
							Memory_opt_lim(x__) = ( 
								get_lim!x__ -> Memory_opt_lim(x__)
								[]
								set_lim?x__ -> Memory_opt_lim(x__)
							)
							Memory_opt_power(x__) = ( 
								get_power!x__ -> Memory_opt_power(x__)
								[]
								set_power?x__ -> Memory_opt_power(x__)
							)
							Memory_opt_supplyLim(x__) = ( 
								get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
								[]
								set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
							)
							Memory_opt_errorAck(x__) = ( 
								get_errorAck!x__ -> Memory_opt_errorAck(x__)
								[]
								set_errorAck?x__ -> Memory_opt_errorAck(x__)
							)
							Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__) = ( 
								getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID!x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
								[]
								setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
							)
							
							-- Composition of memory, StateMachine and Memory transition processes
							
							MemorySTM_opt(id__) =
								dbisim(
								  sbisim(Memory_opt_res(false)
								      	[| {|set_res,get_res|} |] 
								      	dbisim(
								      	  sbisim(Memory_opt_lim(false)
								      	      	[| {|set_lim,get_lim|} |] 
								      	      	dbisim(
								      	      	  sbisim(Memory_opt_setPoint(0)
								      	      	      	[| {|set_setPoint,get_setPoint|} |] 
								      	      	      	sbisim(	
								      	      	      	  dbisim(
								      	      	      	    sbisim(dbisim(
								      	      	      	      sbisim(Memory_opt_WC_TID_State_machine_t0_0(false)
								      	      	      	          	[| {|setWC.WC_TID_State_machine_t0_0_ID,getWC.WC_TID_State_machine_t0_0_ID|} |] 
								      	      	      	          	sbisim(	
								      	      	      	          	  dbisim(
								      	      	      	          	    sbisim(dbisim(
								      	      	      	          	      sbisim(Memory_opt_overLimit(0)
								      	      	      	          	          	[| {|set_overLimit,get_overLimit|} |] 
								      	      	      	          	          	dbisim(
								      	      	      	          	          	  sbisim(Memory_opt_ActualHV(0)
								      	      	      	          	          	      	[| {|set_ActualHV,get_ActualHV|} |] 
								      	      	      	          	          	      	dbisim(
								      	      	      	          	          	      	  sbisim(Memory_opt_underLimit(0)
								      	      	      	          	          	      	      	[| {|get_underLimit,set_underLimit|} |] 
								      	      	      	          	          	      	      	sbisim(	
								      	      	      	          	          	      	      	  dbisim(
								      	      	      	          	          	      	      	    sbisim(dbisim(
								      	      	      	          	          	      	      	      sbisim(OP_disableHV::Memory_opt_arg(true)
								      	      	      	          	          	      	      	          	[| {|OP_disableHV::get_arg,OP_disableHV::set_arg|} |] 
								      	      	      	          	          	      	      	          	sbisim(	
								      	      	      	          	          	      	      	          	  dbisim(
								      	      	      	          	          	      	      	          	    sbisim(sbisim(	
								      	      	      	          	          	      	      	          	      dbisim(
								      	      	      	          	          	      	      	          	        sbisim(dbisim(
								      	      	      	          	          	      	      	          	          sbisim(Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(false)
								      	      	      	          	          	      	      	          	              	[| {|getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID|} |] 
								      	      	      	          	          	      	      	          	              	sbisim(	
								      	      	      	          	          	      	      	          	              	  dbisim(
								      	      	      	          	          	      	      	          	              	    sbisim(dbisim(
								      	      	      	          	          	      	      	          	              	      sbisim(Memory_opt_errorAck(false)
								      	      	      	          	          	      	      	          	              	          	[| {|set_errorAck,get_errorAck|} |] 
								      	      	      	          	          	      	      	          	              	          	sbisim(	
								      	      	      	          	          	      	      	          	              	          	  dbisim(
								      	      	      	          	          	      	      	          	              	          	    sbisim(dbisim(
								      	      	      	          	          	      	      	          	              	          	      sbisim(Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(false)
								      	      	      	          	          	      	      	          	              	          	          	[| {|setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|} |] 
								      	      	      	          	          	      	      	          	              	          	          	sbisim(	
								      	      	      	          	          	      	      	          	              	          	          	  dbisim(
								      	      	      	          	          	      	      	          	              	          	          	    sbisim(sbisim(	
								      	      	      	          	          	      	      	          	              	          	          	      dbisim(
								      	      	      	          	          	      	      	          	              	          	          	        sbisim(dbisim(sbisim(OP_supplyVoltCheck::Memory_opt_power(Power_On)
								      	      	      	          	          	      	      	          	              	          	          	              	[| {|OP_supplyVoltCheck::get_power,OP_supplyVoltCheck::set_power|} |] 
								      	      	      	          	          	      	      	          	              	          	          	              	dbisim(sbisim(Memory_opt_errorFlag(true)
								      	      	      	          	          	      	      	          	              	          	          	              	      	[| {|set_errorFlag,get_errorFlag|} |] 
								      	      	      	          	          	      	      	          	              	          	          	              	      	dbisim(sbisim(Memory_opt_power(Power_On)
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	[| {|get_power,set_power|} |] 
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	dbisim(sbisim(Memory_opt_supplyLim(false)
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	      	[| {|get_supplyLim,set_supplyLim|} |] 
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	      	STM_core(id__)
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	      	)\ {|get_supplyLim,set_supplyLim|}
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	      )
								      	      	      	          	          	      	      	          	              	          	          	              	      	      	)\ {|get_power,set_power|}
								      	      	      	          	          	      	      	          	              	          	          	              	      	      )
								      	      	      	          	          	      	      	          	              	          	          	              	      	)\ {|set_errorFlag,get_errorFlag|}
								      	      	      	          	          	      	      	          	              	          	          	              	      )
								      	      	      	          	          	      	      	          	              	          	          	              	)\ {|OP_supplyVoltCheck::get_power,OP_supplyVoltCheck::set_power|}
								      	      	      	          	          	      	      	          	              	          	          	              )
								      	      	      	          	          	      	      	          	              	          	          	          	  [| {|int_DisableHV__.TID_State_machine_t8,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t0,internal__.TID_State_machine_Init_t0,OP_supplyVoltCheck::internal__.OP_supplyVoltCheck::TID_supplyVoltCheck_t0,internal__.TID_State_machine_ClosedLoop_t0,internal__.TID_State_machine_ErrorMode_t0,OP_supplyVoltCheck::ext_pow24VStatus__.OP_supplyVoltCheck::TID_supplyVoltCheck_t1,internal__.TID_State_machine_Wait24Vpower_t0,internal__.TID_State_machine_ClosedLoop_s2_t5,OP_supplyVoltCheck::ext_pow24VStatus__.OP_supplyVoltCheck::TID_supplyVoltCheck_t2,int_DisableHV__.TID_State_machine_t11,internal__.TID_State_machine_t1,internal__.TID_State_machine_ClosedLoop_s2_t0,internal__.TID_State_machine_ErrorMode_t4,internal__.TID_State_machine_t7,internal__.TID_State_machine_ClosedLoop_s2_t2,internal__.TID_State_machine_ErrorMode_t2,internal__.TID_State_machine_t5,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t3,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t2|} |]
								      	      	      	          	          	      	      	          	              	          	          	          	  MemoryTransitions_opt_0(id__)
								      	      	      	          	          	      	      	          	              	          	          	          	  )\{|internal__.TID_State_machine_ClosedLoop_t0,internal__.TID_State_machine_ClosedLoop_s2_t0,internal__.TID_State_machine_t5,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t0,OP_supplyVoltCheck::internal__.OP_supplyVoltCheck::TID_supplyVoltCheck_t0,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t3,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t2|})
								      	      	      	          	          	      	      	          	              	          	          	          )
								      	      	      	          	          	      	      	          	              	          	          	      	  [| {|internal__.TID_State_machine_ClosedLoop_s2_t1,setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|} |]
								      	      	      	          	          	      	      	          	              	          	          	      	  MemoryTransitions_opt_4(id__)
								      	      	      	          	          	      	      	          	              	          	          	      	  )\{||})
								      	      	      	          	          	      	      	          	              	          	          	      )
								      	      	      	          	          	      	      	          	              	          	          	) \ {|setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|}
								      	      	      	          	          	      	      	          	              	          	          )
								      	      	      	          	          	      	      	          	              	          	      	  [| {|set_errorAck,internal__.TID_State_machine_t6|} |]
								      	      	      	          	          	      	      	          	              	          	      	  MemoryTransitions_opt_3(id__)
								      	      	      	          	          	      	      	          	              	          	      	  )\{||})
								      	      	      	          	          	      	      	          	              	          	      )
								      	      	      	          	          	      	      	          	              	          	) \ {|set_errorAck,get_errorAck|}
								      	      	      	          	          	      	      	          	              	          )
								      	      	      	          	          	      	      	          	              	      	  [| {|set_lim,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,internal__.TID_State_machine_ClosedLoop_t4|} |]
								      	      	      	          	          	      	      	          	              	      	  MemoryTransitions_opt_6(id__)
								      	      	      	          	          	      	      	          	              	      	  )\{||})
								      	      	      	          	          	      	      	          	              	      )
								      	      	      	          	          	      	      	          	              	) \ {|getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID|}
								      	      	      	          	          	      	      	          	              )
								      	      	      	          	          	      	      	          	          	  [| {|set_ActualHV,set_setPoint,internal__.TID_State_machine_ErrorMode_t1,internal__.TID_State_machine_ErrorMode_t5|} |]
								      	      	      	          	          	      	      	          	          	  MemoryTransitions_opt_5(id__)
								      	      	      	          	          	      	      	          	          	  )\{||})
								      	      	      	          	          	      	      	          	          )
								      	      	      	          	          	      	      	          	      	  [| {|OP_disableHV::internal__.OP_disableHV::TID_disableHV_t1,OP_disableHV::set_arg,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t0|} |]
								      	      	      	          	          	      	      	          	      	  MemoryTransitions_opt_2(id__)
								      	      	      	          	          	      	      	          	      	  )\{||})
								      	      	      	          	          	      	      	          	      )
								      	      	      	          	          	      	      	          	) \ {|OP_disableHV::get_arg,OP_disableHV::set_arg|}
								      	      	      	          	          	      	      	          )
								      	      	      	          	          	      	      	      	  [| {|set_overLimit,set_ActualHV,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t2,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t1,set_underLimit|} |]
								      	      	      	          	          	      	      	      	  MemoryTransitions_opt_8(id__)
								      	      	      	          	          	      	      	      	  )\{||})
								      	      	      	          	          	      	      	      )
								      	      	      	          	          	      	      	) \ {|get_underLimit,set_underLimit|}
								      	      	      	          	          	      	      )
								      	      	      	          	          	      	) \ {|set_ActualHV,get_ActualHV|}
								      	      	      	          	          	      )
								      	      	      	          	          	) \ {|set_overLimit,get_overLimit|}
								      	      	      	          	          )
								      	      	      	          	      	  [| {|internal__.TID_State_machine_t0,setWC.WC_TID_State_machine_t0_0_ID|} |]
								      	      	      	          	      	  MemoryTransitions_opt_1(id__)
								      	      	      	          	      	  )\{||})
								      	      	      	          	      )
								      	      	      	          	) \ {|setWC.WC_TID_State_machine_t0_0_ID,getWC.WC_TID_State_machine_t0_0_ID|}
								      	      	      	          )
								      	      	      	      	  [| {|internal__.TID_State_machine_ClosedLoop_t2,internal__.TID_State_machine_ClosedLoop_t3,internal__.TID_State_machine_ClosedLoop_t1,internal__.TID_State_machine_t4,set_setPoint,internal__.TID_State_machine_t3,internal__.TID_State_machine_Wait24Vpower_t1,set_res,set_lim,internal__.TID_State_machine_t2,internal__.TID_State_machine_ClosedLoop_t5|} |]
								      	      	      	      	  MemoryTransitions_opt_7(id__)
								      	      	      	      	  )\{||})
								      	      	      	      )
								      	      	      	) \ {|set_setPoint,get_setPoint|}
								      	      	      )
								      	      	) \ {|set_lim,get_lim|}
								      	      )
								      	) \ {|set_res,get_res|}
								      )
							
							-- main process
							
							MachineMemorySyncSet = Union({
								union(
									union(
										{|get_power,set_power,
										get_setPoint,set_setPoint,
										get_res,set_res,
										get_errorFlag,set_errorFlag,
										get_lim,set_lim,
										get_supplyLim,set_supplyLim,
										get_ActualHV,set_ActualHV,
										get_errorAck,set_errorAck,
										get_overLimit,set_overLimit,
										get_underLimit,set_underLimit|},
										{||}
									)
										
									,
									{|internal__.TID_State_machine_Init_t0,
									internal__.TID_State_machine_Wait24Vpower_t0,
									internal__.TID_State_machine_Wait24Vpower_t1,
									internal__.TID_State_machine_ClosedLoop_s2_t0,
									internal__.TID_State_machine_ClosedLoop_s2_t1,
									internal__.TID_State_machine_ClosedLoop_s2_t5,
									internal__.TID_State_machine_ClosedLoop_s2_t2,
									internal__.TID_State_machine_ClosedLoop_t1,
									internal__.TID_State_machine_ClosedLoop_t2,
									internal__.TID_State_machine_ClosedLoop_t3,
									internal__.TID_State_machine_ClosedLoop_t4,
									internal__.TID_State_machine_ClosedLoop_t5,
									internal__.TID_State_machine_ClosedLoop_t0,
									internal__.TID_State_machine_ErrorMode_t0,
									internal__.TID_State_machine_ErrorMode_t2,
									internal__.TID_State_machine_ErrorMode_t4,
									internal__.TID_State_machine_ErrorMode_t5,
									internal__.TID_State_machine_ErrorMode_t1,
									internal__.TID_State_machine_t0,
									internal__.TID_State_machine_t1,
									internal__.TID_State_machine_t2,
									internal__.TID_State_machine_t3,
									internal__.TID_State_machine_t4,
									internal__.TID_State_machine_t5,
									internal__.TID_State_machine_t6,
									int_DisableHV__.TID_State_machine_t8,
									int_DisableHV__.TID_State_machine_t11,
									internal__.TID_State_machine_t7|}
								),
								{|deadline|},
								WCresets
								, OP_disableHV::MachineMemorySyncSet
								, OP_supplyVoltCheck::MachineMemorySyncSet
								, OP_checkLimits::MachineMemorySyncSet
							})
							
							MachineMemoryHidingSet = Union({
								union(
									{|get_power,set_power,
									get_setPoint,set_setPoint,
									get_res,set_res,
									get_errorFlag,set_errorFlag,
									get_lim,set_lim,
									get_supplyLim,set_supplyLim,
									get_ActualHV,set_ActualHV,
									get_errorAck,set_errorAck,
									get_overLimit,set_overLimit,
									get_underLimit,set_underLimit|},
									{||}
								)
								,
								{|deadline|}
								, OP_disableHV::MachineMemoryHidingSet
								, OP_supplyVoltCheck::MachineMemoryHidingSet
								, OP_checkLimits::MachineMemoryHidingSet
							})
							
							MachineInternalEvents = {|
								internal__
								, OP_disableHV::internal__
								, OP_supplyVoltCheck::internal__
								, OP_checkLimits::internal__
							|}
						
							-- main process
							AUX(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								(
									(MemoryN(id__))
										[| union(WCsets,WCsync) |]
									Clocks(id__)
								)\WCsets
							)
							[[
								currentState__.x____ <- currentState,
								ext_setPoint__.x____ <- ext_setPoint,
								ext_pow24VStatus__.x____ <- ext_pow24VStatus,
								int_overLimit__.x____ <- int_overLimit,
								int_pwmSignal__.x____ <- int_pwmSignal,
								int_underLimit__.x____ <- int_underLimit,
								int_DisableHV__.x____ <- int_DisableHV,
								int_ActualHV__.x____ <- int_ActualHV
								| x____ <- TIDS
							]]
							[[
								OP_disableHV::int_pwmSignal__.x____ <- int_pwmSignal
								| x____ <- OP_disableHV::TIDS
							]]
							[[
								OP_supplyVoltCheck::ext_setPoint__.x____ <- ext_setPoint,
								OP_supplyVoltCheck::ext_pow24VStatus__.x____ <- ext_pow24VStatus
								| x____ <- OP_supplyVoltCheck::TIDS
							]]
							[[
								OP_checkLimits::ext_setPoint__.x____ <- ext_setPoint,
								OP_checkLimits::ext_pow24VStatus__.x____ <- ext_pow24VStatus
								| x____ <- OP_checkLimits::TIDS
							]]
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP\MachineInternalEvents)
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							STM_core(id__) = 
								dbisim(
									sbisim(
											(STM(id__)
											[| union(WCsync,WCresets) |]
											Clocks(id__))\WCresets
										  )
									  )
							
							AUX_opt(id__) = 
								prioritise(
									(MemorySTM_opt(id__)
									)[[
										currentState__.x____ <- currentState,
										ext_setPoint__.x____ <- ext_setPoint,
										ext_pow24VStatus__.x____ <- ext_pow24VStatus,
										int_overLimit__.x____ <- int_overLimit,
										int_pwmSignal__.x____ <- int_pwmSignal,
										int_underLimit__.x____ <- int_underLimit,
										int_DisableHV__.x____ <- int_DisableHV,
										int_ActualHV__.x____ <- int_ActualHV
										| x____ <- TIDS
									]]
									[[
										OP_disableHV::int_pwmSignal__.x____ <- int_pwmSignal
										| x____ <- OP_disableHV::TIDS
									]]
									[[
										OP_supplyVoltCheck::ext_setPoint__.x____ <- ext_setPoint,
										OP_supplyVoltCheck::ext_pow24VStatus__.x____ <- ext_pow24VStatus
										| x____ <- OP_supplyVoltCheck::TIDS
									]]
									[[
										OP_checkLimits::ext_setPoint__.x____ <- ext_setPoint,
										OP_checkLimits::ext_pow24VStatus__.x____ <- ext_pow24VStatus
										| x____ <- OP_checkLimits::TIDS
									]]
								[|{|terminate|}|>SKIP\MachineInternalEvents
								,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							internal_(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
							)
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP)
							,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
							-- declare clocks
							datatype ClockSet = dummyC | CLID_Cl1
							channel clockReset : ClockSet
										
							
							-- declare trigger deadlines channel
							channel deadline : TIDS.deadlineSignal
							
							-- compile clocks process
							
							-- set of strings that uniquely identify the waiting conditions, each of which is 
							-- used to synchronise with the Memory process to set the correspoding variable in
							-- the memory process.
							datatype setWC_identifierSet = dummyWC
							                             | WC_TID_State_machine_ClosedLoop_t4_0_ID
							                             | WC_TID_State_machine_t0_0_ID
							                             | WC_TID_State_machine_ClosedLoop_s2_t1_0_ID
							
							-- declaring getWC and setWC channel for updating memory variables related to clocks
							channel setWC : setWC_identifierSet.Bool
							channel getWC : setWC_identifierSet.Bool
							
							-- Set of pairs capturing waiting condition processes and their alphabet.
							-- It includes the corresponding set of the defined operations.
							WCset(id__) = Union({
								{
								({|setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,internal__.TID_State_machine_ClosedLoop_t4,entered.x.SID_State_machine_ClosedLoop_s3 | x <- SIDS|},P_WC_TID_State_machine_ClosedLoop_t4_0(id__)),
								
								({|entered.x.SID_State_machine_ClosedLoop_s2_s0,internal__.TID_State_machine_ClosedLoop_s2_t1,setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID | x <- SIDS|},P_WC_TID_State_machine_ClosedLoop_s2_t1_0(id__)),
								
								({|internal__.TID_State_machine_t0,setWC.WC_TID_State_machine_t0_0_ID,entered.x.SID_State_machine_Ramping | x <- SIDS|},P_WC_TID_State_machine_t0_0(id__))
								}
								,
								{({|wc_alpha_rename_disableHV(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_disableHV::WCset(id__)}
							,
								{({|wc_alpha_rename_supplyVoltCheck(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_supplyVoltCheck::WCset(id__)}
							,
								{({|wc_alpha_rename_checkLimits(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_checkLimits::WCset(id__)}
							})
							
							-- Auxiliary function to rename the channel set for required clocks.
							wc_alpha_rename_disableHV(x) = x
							wc_alpha_rename_supplyVoltCheck(x) = x
							wc_alpha_rename_checkLimits(x) = x
							
							-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
							-- It includes the corresponding set of the defined operations.
							WCsync = Union({
								{|internal__.TID_State_machine_t0,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_t4|}
								,
								OP_disableHV::WCsync
							,
								OP_supplyVoltCheck::WCsync
							,
								OP_checkLimits::WCsync
							})
							-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
							-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
							WCresets = Union({
								{|entered.x.SID_State_machine_ClosedLoop_s2_s0,
								entered.x.SID_State_machine_ClosedLoop_s3,
								entered.x.SID_State_machine_Ramping | x <- SIDS |}
								,
								OP_disableHV::WCresets
							,
								OP_supplyVoltCheck::WCresets
							,
								OP_checkLimits::WCresets
							})
							-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
							WCsets = Union({
								{|setWC|}
								,
								OP_disableHV::WCsets
							,
								OP_supplyVoltCheck::WCsets
							,
								OP_checkLimits::WCsets
							})
							
							P_WC_TID_State_machine_ClosedLoop_t4_0_reset(id__) = entered?x.SID_State_machine_ClosedLoop_s3 -> setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__)
							
							P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__) = (TimedInterrupt(RUN({|tock,internal__.TID_State_machine_ClosedLoop_t4|}),0+1) ; setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.true -> RUN({|tock,internal__.TID_State_machine_ClosedLoop_t4|})) /\ P_WC_TID_State_machine_ClosedLoop_t4_0_reset(id__)
							
							P_WC_TID_State_machine_ClosedLoop_s2_t1_0_reset(id__) = entered?x.SID_State_machine_ClosedLoop_s2_s0 -> setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__)
							
							P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__) = (TimedInterrupt(RUN({|tock,internal__.TID_State_machine_ClosedLoop_s2_t1|}),0+1) ; setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.true -> RUN({|tock,internal__.TID_State_machine_ClosedLoop_s2_t1|})) /\ P_WC_TID_State_machine_ClosedLoop_s2_t1_0_reset(id__)
							
							P_WC_TID_State_machine_t0_0_reset(id__) = entered?x.SID_State_machine_Ramping -> setWC.WC_TID_State_machine_t0_0_ID.false -> P_WC_TID_State_machine_t0_0_monitor(id__)
							
							P_WC_TID_State_machine_t0_0_monitor(id__) = (TimedInterrupt(RUN({|internal__.TID_State_machine_t0,tock|}),1) ; setWC.WC_TID_State_machine_t0_0_ID.true -> RUN({|internal__.TID_State_machine_t0,tock|})) /\ P_WC_TID_State_machine_t0_0_reset(id__)
							
							P_WC_TID_State_machine_ClosedLoop_t4_0(id__) = setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__)
							
							P_WC_TID_State_machine_ClosedLoop_s2_t1_0(id__) = setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__)
							
							P_WC_TID_State_machine_t0_0(id__) = setWC.WC_TID_State_machine_t0_0_ID.false -> P_WC_TID_State_machine_t0_0_monitor(id__)
							
							-- Clocks process
							Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
			
							-- collects all clockResets including those of operations
							ClockResets = Union({
								{|clockReset|}
								,
								OP_disableHV::ClockResets
			,
								OP_supplyVoltCheck::ClockResets
			,
								OP_checkLimits::ClockResets
							})
							
							-- With no internal events visible
							Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
							
							D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
							
							O__(id__) = D__(id__)
							
							-- With enter/entered/exit/exited events visible
							FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
							
							-- With enterV/enteredV/exitV/exitedV events visible
							VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
							
							-- With clock resets visible
							FVS_C__(id__) = AUX(id__)
						}
					endmodule
		
			module OP_disableHV
				Timed(OneStep) {
							
					
					-- declaring identifiers of state and final states
					datatype SIDS = SID_disableHV
					              | SID_disableHV_s1
					              | SID_disableHV_f0
					              | SID_disableHV_s0
					
					int_int = {|
						int_pwmSignal__.TID_disableHV_t0,
						internal__.TID_disableHV_t0,
						int_pwmSignal__.TID_disableHV_t1,
						internal__.TID_disableHV_t1,
						int_pwmSignal__.TID_disableHV_t3,
						internal__.TID_disableHV_t3
					|}
						
					
					internal_events = {|enter,entered,exit,exited,terminate|}
					
					-- declaring all states
					CS_disableHV_s1_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
						y____ <- {SID_disableHV_s1}
					|}
					
					
					disableHV_s1_triggers = {|
						internal__.TID_disableHV_t1,
						internal__.TID_disableHV_t0
					|}
					
					State_disableHV_s1(id__) = let
						T_disableHV_t0(id__) = internal__!TID_disableHV_t0 ->  exit.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
											SKIP;exited.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
											true & (set_res!false -> SKIP);enter!SID_disableHV_s1!SID_disableHV_f0 -> entered!SID_disableHV_s1!SID_disableHV_f0 ->
											State_disableHV_s1(id__)
						T_disableHV_t1(id__) = internal__!TID_disableHV_t1 ->  exit.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
											SKIP;exited.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
											true & (set_res!true -> SKIP);enter!SID_disableHV_s1!SID_disableHV_f0 -> entered!SID_disableHV_s1!SID_disableHV_f0 ->
											State_disableHV_s1(id__)
						State_disableHV_s1_execute(id__,o____) = true & (set_setPoint!0 -> SKIP); 
							entered!o____!SID_disableHV_s1 ->
							(SKIP; STOP /\ (
								T_disableHV_t0(id__)[]
								T_disableHV_t1(id__)
								[]
								internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0}) -> exit?y____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (
										SKIP;
										exited!y____!SID_disableHV_s1 -> SKIP);
										State_disableHV_s1(id__)
								[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (
										SKIP;
										exited!y____!SID_disableHV_s1 -> SKIP);
										State_disableHV_s1(id__)
							))
					within
						enter?x____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (State_disableHV_s1_execute(id__,x____))
					
					CS_disableHV_f0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
						y____ <- {SID_disableHV_f0}
					|}
					
					
					disableHV_f0_triggers = {|
					|}
					
					State_disableHV_f0(id__) = let
						State_disableHV_f0_execute(id__,o____) = SKIP; 
							entered!o____!SID_disableHV_f0 ->
							terminate -> SKIP
					within
						enter?x____:diff(SIDS,{SID_disableHV_f0})!SID_disableHV_f0 -> (State_disableHV_f0_execute(id__,x____))
					
					CS_disableHV_s0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
						y____ <- {SID_disableHV_s0}
					|}
					
					
					disableHV_s0_triggers = {|
						internal__.TID_disableHV_t1,
						internal__.TID_disableHV_t0,
						internal__.TID_disableHV_t3
					|}
					
					State_disableHV_s0(id__) = let
						T_disableHV_t3(id__) = internal__!TID_disableHV_t3 ->  exit.SID_disableHV_s0.SID_disableHV_s0 -> SKIP;
											SKIP;exited.SID_disableHV_s0.SID_disableHV_s0 -> SKIP;
											enter!SID_disableHV_s0!SID_disableHV_s1 -> entered!SID_disableHV_s0!SID_disableHV_s1 ->
											State_disableHV_s0(id__)
						State_disableHV_s0_execute(id__,o____) = Deadline(true&(int_pwmSignal.out!Power_Off -> SKIP),0); 
							entered!o____!SID_disableHV_s0 ->
							(SKIP; STOP /\ (
								T_disableHV_t3(id__)
								[]
								internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0,TID_disableHV_t3}) -> exit?y____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (
										SKIP;
										exited!y____!SID_disableHV_s0 -> SKIP);
										State_disableHV_s0(id__)
								[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0,TID_disableHV_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (
										SKIP;
										exited!y____!SID_disableHV_s0 -> SKIP);
										State_disableHV_s0(id__)
							))
					within
						enter?x____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (State_disableHV_s0_execute(id__,x____))
					
					
					I_disableHV_i0(id__) = let
						T_disableHV_t2(id__) = internal__!TID_disableHV_t2 -> enter!SID_disableHV!SID_disableHV_s0 -> entered!SID_disableHV!SID_disableHV_s0 ->
						SKIP
					within
						T_disableHV_t2(id__)
					
					
					State_disableHV_s1_R(id__) = 
						State_disableHV_s1(id__)
							[|diff(int_int,disableHV_s1_triggers)|]
						SKIP
							 		
					State_disableHV_f0_R(id__) = 
						State_disableHV_f0(id__)
							[|diff(int_int,disableHV_f0_triggers)|]
						SKIP
							 		
					State_disableHV_s0_R(id__) = 
						State_disableHV_s0(id__)
							[|diff(int_int,disableHV_s0_triggers)|]
						SKIP
							 		
						
					STM(id__) = (
						I_disableHV_i0(id__)
							[|
								{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
									x____ <- diff(SIDS,{SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0}),
									y____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0}
							|}|]
						(
							State_disableHV_s1_R(id__)
								[|inter(CS_disableHV_s1_sync,union(CS_disableHV_f0_sync,CS_disableHV_s0_sync))|]
							(
								State_disableHV_f0_R(id__)
									[|inter(CS_disableHV_f0_sync,CS_disableHV_s0_sync)|]
								State_disableHV_s0_R(id__)
							)
						)
					)
					
					-- main process
					AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
				}
			exports
				Timed(OneStep) {
					-- the transition identifiers and memory transitions of an operation definition
					-- are exported here to allow for the renaming of the state machine to include
					-- the renaming of the events of the operation
					external prioritise
					transparent wbisim
					
					-- declaring identifiers of transitions
					datatype TIDS = NULLTRANSITION__
					              | TID_disableHV_t0
					              | TID_disableHV_t1
					              | TID_disableHV_t2
					              | TID_disableHV_t3
					
					-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
					
					ITIDS = {
						TID_disableHV_t0,	TID_disableHV_t1,	TID_disableHV_t3
					}
					
					-- flow channels
					channel internal__ : TIDS
					channel enteredV, enterV, exitV, exitedV : SIDS
					channel enter, entered: SIDS.SIDS
					channel exit,exited: SIDS.SIDS
					channel terminate
					
					-- variable channels
					channel get_arg, set_arg, getV_arg: core_boolean
					channel get_setPoint, set_setPoint, getV_setPoint: core_real
					channel get_res, set_res, getV_res: core_boolean
					channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
					channel get_lim, set_lim, getV_lim: core_boolean
					channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
					channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
					channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
					channel get_overLimit, set_overLimit, getV_overLimit: core_real
					channel get_underLimit, set_underLimit, getV_underLimit: core_real
							
					-- shared variable channels
					channel set_EXT_setPoint: core_real
					channel set_EXT_res: core_boolean
					channel set_EXT_errorFlag: core_boolean
					channel set_EXT_lim: core_boolean
					channel set_EXT_supplyLim: core_boolean
					channel set_EXT_ActualHV: core_real
					channel set_EXT_errorAck: core_boolean
					channel set_EXT_overLimit: core_real
					channel set_EXT_underLimit: core_real
					
					-- local variable channels for defined operations that are required by the state machine
					
					-- declaring state machine events
					channel int_pwmSignal__: TIDS.InOut.Power
					channel int_pwmSignal: InOut.Power
					
					-- declare clocks
					datatype ClockSet = dummyC
					channel clockReset 		-- no clocks declared
						
					-- declare trigger deadlines channel
					channel deadline : TIDS.deadlineSignal
						
					-- compile clocks process
					
					-- set of strings that uniquely identify the waiting conditions, each of which is 
					-- used to synchronise with the Memory process to set the correspoding variable in
					-- the memory process.
					datatype setWC_identifierSet = dummyWC
					
					-- declaring getWC and setWC channel for updating memory variables related to clocks
					channel setWC : setWC_identifierSet.Bool
					channel getWC : setWC_identifierSet.Bool
					
					-- Set of pairs capturing waiting condition processes and their alphabet.
					-- It includes the corresponding set of the defined operations.
					WCset(id__) = Union({
						{
						}
						})
					
					-- Auxiliary function to rename the channel set for required clocks.
					
					-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
					-- It includes the corresponding set of the defined operations.
					WCsync = Union({
						{||}
						})
					-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
					-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
					WCresets = Union({
						{| | x <- SIDS |}
						})
					-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
					WCsets = Union({
						{|setWC|}
						})
					
					
					
					-- Clocks process
					Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
					
					-- collects all clockResets
					ClockResets = {|clockReset|}
					
					-- processes that read variables and offer transitions
					MemoryTransitions(id__,
						 arg,
						 setPoint,
						 res,
						 errorFlag,
						 lim,
						 supplyLim,
						 ActualHV,
						 errorAck,
						 overLimit,
						 underLimit) = (
						((arg==false))&internal__!TID_disableHV_t0 -> SKIP
						[]
						((arg==true))&internal__!TID_disableHV_t1 -> SKIP
						[]
						internal__!TID_disableHV_t2 -> SKIP
						[]
						internal__!TID_disableHV_t3 -> SKIP
					
						[]
							set_arg?x__ -> SKIP
					 	)
					MemoryTransitions_disableHV(id__) =
						(
						OP_disableHV::getV_arg?arg ->	
						OP_disableHV::getV_setPoint?setPoint ->	
						OP_disableHV::getV_res?res ->	
						OP_disableHV::getV_errorFlag?errorFlag ->	
						OP_disableHV::getV_lim?lim ->	
						OP_disableHV::getV_supplyLim?supplyLim ->	
						OP_disableHV::getV_ActualHV?ActualHV ->	
						OP_disableHV::getV_errorAck?errorAck ->	
						OP_disableHV::getV_overLimit?overLimit ->	
						OP_disableHV::getV_underLimit?underLimit ->
						 MemoryTransitions(id__,
						 	 arg,
						 	 setPoint,
						 	 res,
						 	 errorFlag,
						 	 lim,
						 	 supplyLim,
						 	 ActualHV,
						 	 errorAck,
						 	 overLimit,
						 	 underLimit);
						 MemoryTransitions_disableHV(id__)
						)
					
					-- synchronisation, hiding and process sets 
			
					
					MemoryVariablesProcesses_disableHV = Union(
						{
							{
								Memory_arg(true)
							}
						}
					)
					
					MemoryVariablesSyncSet = Union({
						{|
							setWC,
							set_arg,
							getV_arg
						|}	
					})
					
					MemoryVariablesHideSet = Union({
						{|
							getWC,
							getV_arg
						|}
					})
					MachineMemorySyncSet = Union({
						union(
							union(
								{|get_arg,set_arg|},
								{||}
							)
								
							,
							{|internal__.TID_disableHV_t0,
							internal__.TID_disableHV_t1,
							internal__.TID_disableHV_t2,
							internal__.TID_disableHV_t3|}
						),
						{|deadline|},
						WCresets
					})
					
					MachineMemoryHidingSet = Union({
						union(
							{|get_arg,set_arg|},
							{||}
						)
						,
						{|deadline|}
					})
					
					MachineInternalEvents = {|
						internal__
					|}
			
					-- individual memory processes
					Memory_arg(x__) = ( 
						get_arg!x__ -> Memory_arg(x__)
						[]
						getV_arg!x__ -> Memory_arg(x__)
						[]
						set_arg?x__ -> Memory_arg(x__)
					)
					
					-- Memory cell processes
					Memory_opt_res(x__) = ( 
						get_res!x__ -> Memory_opt_res(x__)
						[]
						set_res?x__ -> Memory_opt_res(x__)
						[]
						set_EXT_res?x__ -> Memory_opt_res(x__)
					)
					Memory_opt_errorFlag(x__) = ( 
						get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
						[]
						set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
						[]
						set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					)
					Memory_opt_overLimit(x__) = ( 
						get_overLimit!x__ -> Memory_opt_overLimit(x__)
						[]
						set_overLimit?x__ -> Memory_opt_overLimit(x__)
						[]
						set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
					)
					Memory_opt_ActualHV(x__) = ( 
						get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
						[]
						set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						[]
						set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					)
					Memory_opt_lim(x__) = ( 
						get_lim!x__ -> Memory_opt_lim(x__)
						[]
						set_lim?x__ -> Memory_opt_lim(x__)
						[]
						set_EXT_lim?x__ -> Memory_opt_lim(x__)
					)
					Memory_opt_arg(x__) = ( 
						get_arg!x__ -> Memory_opt_arg(x__)
						[]
						set_arg?x__ -> Memory_opt_arg(x__)
					)
					Memory_opt_setPoint(x__) = ( 
						get_setPoint!x__ -> Memory_opt_setPoint(x__)
						[]
						set_setPoint?x__ -> Memory_opt_setPoint(x__)
						[]
						set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
					)
					Memory_opt_errorAck(x__) = ( 
						get_errorAck!x__ -> Memory_opt_errorAck(x__)
						[]
						set_errorAck?x__ -> Memory_opt_errorAck(x__)
						[]
						set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
					)
					Memory_opt_underLimit(x__) = ( 
						get_underLimit!x__ -> Memory_opt_underLimit(x__)
						[]
						set_underLimit?x__ -> Memory_opt_underLimit(x__)
						[]
						set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
					)
					Memory_opt_supplyLim(x__) = ( 
						get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
						[]
						set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
						[]
						set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					)
			
					-- combined individual memory processes
					MemoryVariables = ||| P : MemoryVariablesProcesses_disableHV @ P
				
					-- definition of the behaviour of state machines (default and optimised)
					D__(id__) = AUX(id__) \ internal_events
					O__(id__) = D__(id__)
				}
			endmodule
			module OP_supplyVoltCheck
				Timed(OneStep) {
							
					
					-- declaring identifiers of state and final states
					datatype SIDS = SID_supplyVoltCheck
					              | SID_supplyVoltCheck_s0
					              | SID_supplyVoltCheck_f0
					
					int_int = {|
						ext_setPoint__.TID_supplyVoltCheck_t1,
						ext_pow24VStatus__.TID_supplyVoltCheck_t1,
						internal__.TID_supplyVoltCheck_t1,
						ext_setPoint__.TID_supplyVoltCheck_t2,
						ext_pow24VStatus__.TID_supplyVoltCheck_t2,
						internal__.TID_supplyVoltCheck_t2
					|}
						
					
					internal_events = {|enter,entered,exit,exited,terminate|}
					
					-- declaring all states
					CS_supplyVoltCheck_s0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0},
						y____ <- {SID_supplyVoltCheck_s0}
					|}
					
					
					supplyVoltCheck_s0_triggers = {|
						ext_pow24VStatus__.TID_supplyVoltCheck_t1,
						ext_pow24VStatus__.TID_supplyVoltCheck_t2
					|}
					
					State_supplyVoltCheck_s0(id__) = let
						T_supplyVoltCheck_t1(id__) = ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power -> set_power!power ->  (exit.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
											SKIP;exited.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
											true & (set_lim!false -> SKIP);enter!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 -> entered!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 ->
											State_supplyVoltCheck_s0(id__)
						)
						T_supplyVoltCheck_t2(id__) = ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power -> set_power!power ->  (exit.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
											SKIP;exited.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
											true & (set_lim!true -> SKIP);enter!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 -> entered!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 ->
											State_supplyVoltCheck_s0(id__)
						)
						State_supplyVoltCheck_s0_execute(id__,o____) = SKIP; 
							entered!o____!SID_supplyVoltCheck_s0 ->
							(SKIP; STOP /\ (
								T_supplyVoltCheck_t1(id__)[]
								T_supplyVoltCheck_t2(id__)
								[]
								internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2}) -> exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
										SKIP;
										exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
										State_supplyVoltCheck_s0(id__)
								[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
										SKIP;
										exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
										State_supplyVoltCheck_s0(id__)
								[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
										SKIP;
										exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
										State_supplyVoltCheck_s0(id__)
							))
					within
						enter?x____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (State_supplyVoltCheck_s0_execute(id__,x____))
					
					CS_supplyVoltCheck_f0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0},
						y____ <- {SID_supplyVoltCheck_f0}
					|}
					
					
					supplyVoltCheck_f0_triggers = {|
					|}
					
					State_supplyVoltCheck_f0(id__) = let
						State_supplyVoltCheck_f0_execute(id__,o____) = SKIP; 
							entered!o____!SID_supplyVoltCheck_f0 ->
							terminate -> SKIP
					within
						enter?x____:diff(SIDS,{SID_supplyVoltCheck_f0})!SID_supplyVoltCheck_f0 -> (State_supplyVoltCheck_f0_execute(id__,x____))
					
					
					I_supplyVoltCheck_i0(id__) = let
						T_supplyVoltCheck_t0(id__) = internal__!TID_supplyVoltCheck_t0 -> enter!SID_supplyVoltCheck!SID_supplyVoltCheck_s0 -> entered!SID_supplyVoltCheck!SID_supplyVoltCheck_s0 ->
						SKIP
					within
						T_supplyVoltCheck_t0(id__)
					
					
					State_supplyVoltCheck_s0_R(id__) = 
						State_supplyVoltCheck_s0(id__)
							[|diff(int_int,supplyVoltCheck_s0_triggers)|]
						SKIP
							 		
					State_supplyVoltCheck_f0_R(id__) = 
						State_supplyVoltCheck_f0(id__)
							[|diff(int_int,supplyVoltCheck_f0_triggers)|]
						SKIP
							 		
						
					STM(id__) = (
						I_supplyVoltCheck_i0(id__)
							[|
								{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
									x____ <- diff(SIDS,{SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0}),
									y____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0}
							|}|]
						(
							State_supplyVoltCheck_s0_R(id__)
								[|inter(CS_supplyVoltCheck_s0_sync,CS_supplyVoltCheck_f0_sync)|]
							State_supplyVoltCheck_f0_R(id__)
						)
					)
					
					-- main process
					AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
				}
			exports
				Timed(OneStep) {
					-- the transition identifiers and memory transitions of an operation definition
					-- are exported here to allow for the renaming of the state machine to include
					-- the renaming of the events of the operation
					external prioritise
					transparent wbisim
					
					-- declaring identifiers of transitions
					datatype TIDS = NULLTRANSITION__
					              | TID_supplyVoltCheck_t0
					              | TID_supplyVoltCheck_t1
					              | TID_supplyVoltCheck_t2
					
					-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
					
					ITIDS = {
						TID_supplyVoltCheck_t1,	TID_supplyVoltCheck_t2
					}
					
					-- flow channels
					channel internal__ : TIDS
					channel enteredV, enterV, exitV, exitedV : SIDS
					channel enter, entered: SIDS.SIDS
					channel exit,exited: SIDS.SIDS
					channel terminate
					
					-- variable channels
					channel get_power, set_power, getV_power: Power
					channel get_setPoint, set_setPoint, getV_setPoint: core_real
					channel get_res, set_res, getV_res: core_boolean
					channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
					channel get_lim, set_lim, getV_lim: core_boolean
					channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
					channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
					channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
					channel get_overLimit, set_overLimit, getV_overLimit: core_real
					channel get_underLimit, set_underLimit, getV_underLimit: core_real
							
					-- shared variable channels
					channel set_EXT_setPoint: core_real
					channel set_EXT_res: core_boolean
					channel set_EXT_errorFlag: core_boolean
					channel set_EXT_lim: core_boolean
					channel set_EXT_supplyLim: core_boolean
					channel set_EXT_ActualHV: core_real
					channel set_EXT_errorAck: core_boolean
					channel set_EXT_overLimit: core_real
					channel set_EXT_underLimit: core_real
					
					-- local variable channels for defined operations that are required by the state machine
					
					-- declaring state machine events
					channel ext_setPoint__: TIDS.InOut.core_real
					channel ext_setPoint: InOut.core_real
					channel ext_pow24VStatus__: TIDS.InOut.Power
					channel ext_pow24VStatus: InOut.Power
					
					-- declare clocks
					datatype ClockSet = dummyC
					channel clockReset 		-- no clocks declared
						
					-- declare trigger deadlines channel
					channel deadline : TIDS.deadlineSignal
						
					-- compile clocks process
					
					-- set of strings that uniquely identify the waiting conditions, each of which is 
					-- used to synchronise with the Memory process to set the correspoding variable in
					-- the memory process.
					datatype setWC_identifierSet = dummyWC
					
					-- declaring getWC and setWC channel for updating memory variables related to clocks
					channel setWC : setWC_identifierSet.Bool
					channel getWC : setWC_identifierSet.Bool
					
					-- Set of pairs capturing waiting condition processes and their alphabet.
					-- It includes the corresponding set of the defined operations.
					WCset(id__) = Union({
						{
						}
						})
					
					-- Auxiliary function to rename the channel set for required clocks.
					
					-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
					-- It includes the corresponding set of the defined operations.
					WCsync = Union({
						{||}
						})
					-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
					-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
					WCresets = Union({
						{| | x <- SIDS |}
						})
					-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
					WCsets = Union({
						{|setWC|}
						})
					
					
					
					-- Clocks process
					Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
					
					-- collects all clockResets
					ClockResets = {|clockReset|}
					
					-- processes that read variables and offer transitions
					MemoryTransitions(id__,
						 power,
						 setPoint,
						 res,
						 errorFlag,
						 lim,
						 supplyLim,
						 ActualHV,
						 errorAck,
						 overLimit,
						 underLimit) = (
						internal__!TID_supplyVoltCheck_t0 -> SKIP
						[]
						ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power:{power|power <- Power, (power==Power_On)} -> SKIP
						[]
						ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power:{power|power <- Power, (power==Power_Off)} -> SKIP
					
						[]
							set_power?x__ -> SKIP
					 	)
					MemoryTransitions_supplyVoltCheck(id__) =
						(
						OP_supplyVoltCheck::getV_power?power ->	
						OP_supplyVoltCheck::getV_setPoint?setPoint ->	
						OP_supplyVoltCheck::getV_res?res ->	
						OP_supplyVoltCheck::getV_errorFlag?errorFlag ->	
						OP_supplyVoltCheck::getV_lim?lim ->	
						OP_supplyVoltCheck::getV_supplyLim?supplyLim ->	
						OP_supplyVoltCheck::getV_ActualHV?ActualHV ->	
						OP_supplyVoltCheck::getV_errorAck?errorAck ->	
						OP_supplyVoltCheck::getV_overLimit?overLimit ->	
						OP_supplyVoltCheck::getV_underLimit?underLimit ->
						 MemoryTransitions(id__,
						 	 power,
						 	 setPoint,
						 	 res,
						 	 errorFlag,
						 	 lim,
						 	 supplyLim,
						 	 ActualHV,
						 	 errorAck,
						 	 overLimit,
						 	 underLimit);
						 MemoryTransitions_supplyVoltCheck(id__)
						)
					
					-- synchronisation, hiding and process sets 
			
					
					MemoryVariablesProcesses_supplyVoltCheck = Union(
						{
							{
								Memory_power(Power_On)
							}
						}
					)
					
					MemoryVariablesSyncSet = Union({
						{|
							getV_power,
							set_power,
							setWC,
							ext_pow24VStatus__.TID_supplyVoltCheck_t1,
							ext_pow24VStatus__.TID_supplyVoltCheck_t2
						|}	
					})
					
					MemoryVariablesHideSet = Union({
						{|
							getV_power,
							getWC
						|}
					})
					MachineMemorySyncSet = Union({
						union(
							union(
								{|get_power,set_power|},
								{||}
							)
								
							,
							{|internal__.TID_supplyVoltCheck_t0,
							ext_pow24VStatus__.TID_supplyVoltCheck_t1,
							ext_pow24VStatus__.TID_supplyVoltCheck_t2|}
						),
						{|deadline|},
						WCresets
					})
					
					MachineMemoryHidingSet = Union({
						union(
							{|get_power,set_power|},
							{||}
						)
						,
						{|deadline|}
					})
					
					MachineInternalEvents = {|
						internal__
					|}
			
					-- individual memory processes
					Memory_power(x__) = ( 
						get_power!x__ -> Memory_power(x__)
						[]
						getV_power!x__ -> Memory_power(x__)
						[]
						set_power?x__ -> Memory_power(x__)
						[]
						ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power -> Memory_power(power)
						[]
						ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power -> Memory_power(power)
					)
					
					-- Memory cell processes
					Memory_opt_lim(x__) = ( 
						get_lim!x__ -> Memory_opt_lim(x__)
						[]
						set_lim?x__ -> Memory_opt_lim(x__)
						[]
						set_EXT_lim?x__ -> Memory_opt_lim(x__)
					)
					Memory_opt_power(x__) = ( 
						get_power!x__ -> Memory_opt_power(x__)
						[]
						set_power?x__ -> Memory_opt_power(x__)
					)
					Memory_opt_underLimit(x__) = ( 
						get_underLimit!x__ -> Memory_opt_underLimit(x__)
						[]
						set_underLimit?x__ -> Memory_opt_underLimit(x__)
						[]
						set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
					)
					Memory_opt_errorFlag(x__) = ( 
						get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
						[]
						set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
						[]
						set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					)
					Memory_opt_overLimit(x__) = ( 
						get_overLimit!x__ -> Memory_opt_overLimit(x__)
						[]
						set_overLimit?x__ -> Memory_opt_overLimit(x__)
						[]
						set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
					)
					Memory_opt_res(x__) = ( 
						get_res!x__ -> Memory_opt_res(x__)
						[]
						set_res?x__ -> Memory_opt_res(x__)
						[]
						set_EXT_res?x__ -> Memory_opt_res(x__)
					)
					Memory_opt_ActualHV(x__) = ( 
						get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
						[]
						set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						[]
						set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					)
					Memory_opt_supplyLim(x__) = ( 
						get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
						[]
						set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
						[]
						set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					)
					Memory_opt_errorAck(x__) = ( 
						get_errorAck!x__ -> Memory_opt_errorAck(x__)
						[]
						set_errorAck?x__ -> Memory_opt_errorAck(x__)
						[]
						set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
					)
					Memory_opt_setPoint(x__) = ( 
						get_setPoint!x__ -> Memory_opt_setPoint(x__)
						[]
						set_setPoint?x__ -> Memory_opt_setPoint(x__)
						[]
						set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
					)
			
					-- combined individual memory processes
					MemoryVariables = ||| P : MemoryVariablesProcesses_supplyVoltCheck @ P
				
					-- definition of the behaviour of state machines (default and optimised)
					D__(id__) = AUX(id__) \ internal_events
					O__(id__) = D__(id__)
				}
			endmodule
			module OP_checkLimits
				Timed(OneStep) {
							
					
					-- declaring identifiers of state and final states
					datatype SIDS = SID_checkLimits
					              | SID_checkLimits_s0
					              | SID_checkLimits_f0
					
					int_int = {|
						ext_setPoint__.TID_checkLimits_t1,
						ext_pow24VStatus__.TID_checkLimits_t1,
						internal__.TID_checkLimits_t1,
						ext_setPoint__.TID_checkLimits_t2,
						ext_pow24VStatus__.TID_checkLimits_t2,
						internal__.TID_checkLimits_t2
					|}
						
					
					internal_events = {|enter,entered,exit,exited,terminate|}
					
					-- declaring all states
					CS_checkLimits_s0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_checkLimits_s0,SID_checkLimits_f0},
						y____ <- {SID_checkLimits_s0}
					|}
					
					
					checkLimits_s0_triggers = {|
						internal__.TID_checkLimits_t2,
						internal__.TID_checkLimits_t1
					|}
					
					State_checkLimits_s0(id__) = let
						T_checkLimits_t1(id__) = internal__!TID_checkLimits_t1 ->  exit.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
											SKIP;exited.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
											true & (set_lim!false -> SKIP);enter!SID_checkLimits_s0!SID_checkLimits_f0 -> entered!SID_checkLimits_s0!SID_checkLimits_f0 ->
											State_checkLimits_s0(id__)
						T_checkLimits_t2(id__) = internal__!TID_checkLimits_t2 ->  exit.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
											SKIP;exited.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
											true & (set_lim!true -> SKIP);enter!SID_checkLimits_s0!SID_checkLimits_f0 -> entered!SID_checkLimits_s0!SID_checkLimits_f0 ->
											State_checkLimits_s0(id__)
						State_checkLimits_s0_execute(id__,o____) = SKIP; 
							entered!o____!SID_checkLimits_s0 ->
							(SKIP; STOP /\ (
								T_checkLimits_t1(id__)[]
								T_checkLimits_t2(id__)
								[]
								internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1}) -> exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
										SKIP;
										exited!y____!SID_checkLimits_s0 -> SKIP);
										State_checkLimits_s0(id__)
								[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
										SKIP;
										exited!y____!SID_checkLimits_s0 -> SKIP);
										State_checkLimits_s0(id__)
								[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
										SKIP;
										exited!y____!SID_checkLimits_s0 -> SKIP);
										State_checkLimits_s0(id__)
							))
					within
						enter?x____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (State_checkLimits_s0_execute(id__,x____))
					
					CS_checkLimits_f0_sync = {|
						enter.y____.x____, 
						entered.y____.x____, 
						exit.y____.x____, 
						exited.y____.x____,
						enter.x____.y____, 
						entered.x____.y____, 
						exit.x____.y____, 
						exited.x____.y____ |
						x____ <- {SID_checkLimits_s0,SID_checkLimits_f0},
						y____ <- {SID_checkLimits_f0}
					|}
					
					
					checkLimits_f0_triggers = {|
					|}
					
					State_checkLimits_f0(id__) = let
						State_checkLimits_f0_execute(id__,o____) = SKIP; 
							entered!o____!SID_checkLimits_f0 ->
							terminate -> SKIP
					within
						enter?x____:diff(SIDS,{SID_checkLimits_f0})!SID_checkLimits_f0 -> (State_checkLimits_f0_execute(id__,x____))
					
					
					I_checkLimits_i0(id__) = let
						T_checkLimits_t0(id__) = internal__!TID_checkLimits_t0 -> enter!SID_checkLimits!SID_checkLimits_s0 -> entered!SID_checkLimits!SID_checkLimits_s0 ->
						SKIP
					within
						T_checkLimits_t0(id__)
					
					
					State_checkLimits_s0_R(id__) = 
						State_checkLimits_s0(id__)
							[|diff(int_int,checkLimits_s0_triggers)|]
						SKIP
							 		
					State_checkLimits_f0_R(id__) = 
						State_checkLimits_f0(id__)
							[|diff(int_int,checkLimits_f0_triggers)|]
						SKIP
							 		
						
					STM(id__) = (
						I_checkLimits_i0(id__)
							[|
								{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
									x____ <- diff(SIDS,{SID_checkLimits_s0,SID_checkLimits_f0}),
									y____ <- {SID_checkLimits_s0,SID_checkLimits_f0}
							|}|]
						(
							State_checkLimits_s0_R(id__)
								[|inter(CS_checkLimits_s0_sync,CS_checkLimits_f0_sync)|]
							State_checkLimits_f0_R(id__)
						)
					)
					
					-- main process
					AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
				}
			exports
				Timed(OneStep) {
					-- the transition identifiers and memory transitions of an operation definition
					-- are exported here to allow for the renaming of the state machine to include
					-- the renaming of the events of the operation
					external prioritise
					transparent wbisim
					
					-- declaring identifiers of transitions
					datatype TIDS = NULLTRANSITION__
					              | TID_checkLimits_t0
					              | TID_checkLimits_t1
					              | TID_checkLimits_t2
					
					-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
					
					ITIDS = {
						TID_checkLimits_t1,	TID_checkLimits_t2
					}
					
					-- flow channels
					channel internal__ : TIDS
					channel enteredV, enterV, exitV, exitedV : SIDS
					channel enter, entered: SIDS.SIDS
					channel exit,exited: SIDS.SIDS
					channel terminate
					
					-- variable channels
					channel get_setPoint, set_setPoint, getV_setPoint: core_real
					channel get_res, set_res, getV_res: core_boolean
					channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
					channel get_lim, set_lim, getV_lim: core_boolean
					channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
					channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
					channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
					channel get_overLimit, set_overLimit, getV_overLimit: core_real
					channel get_underLimit, set_underLimit, getV_underLimit: core_real
							
					-- shared variable channels
					channel set_EXT_setPoint: core_real
					channel set_EXT_res: core_boolean
					channel set_EXT_errorFlag: core_boolean
					channel set_EXT_lim: core_boolean
					channel set_EXT_supplyLim: core_boolean
					channel set_EXT_ActualHV: core_real
					channel set_EXT_errorAck: core_boolean
					channel set_EXT_overLimit: core_real
					channel set_EXT_underLimit: core_real
					
					-- local variable channels for defined operations that are required by the state machine
					
					-- declaring state machine events
					channel ext_setPoint__: TIDS.InOut.core_real
					channel ext_setPoint: InOut.core_real
					channel ext_pow24VStatus__: TIDS.InOut.Power
					channel ext_pow24VStatus: InOut.Power
					
					-- declare clocks
					datatype ClockSet = dummyC
					channel clockReset 		-- no clocks declared
						
					-- declare trigger deadlines channel
					channel deadline : TIDS.deadlineSignal
						
					-- compile clocks process
					
					-- set of strings that uniquely identify the waiting conditions, each of which is 
					-- used to synchronise with the Memory process to set the correspoding variable in
					-- the memory process.
					datatype setWC_identifierSet = dummyWC
					
					-- declaring getWC and setWC channel for updating memory variables related to clocks
					channel setWC : setWC_identifierSet.Bool
					channel getWC : setWC_identifierSet.Bool
					
					-- Set of pairs capturing waiting condition processes and their alphabet.
					-- It includes the corresponding set of the defined operations.
					WCset(id__) = Union({
						{
						}
						})
					
					-- Auxiliary function to rename the channel set for required clocks.
					
					-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
					-- It includes the corresponding set of the defined operations.
					WCsync = Union({
						{||}
						})
					-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
					-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
					WCresets = Union({
						{| | x <- SIDS |}
						})
					-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
					WCsets = Union({
						{|setWC|}
						})
					
					
					
					-- Clocks process
					Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
					
					-- collects all clockResets
					ClockResets = {|clockReset|}
					
					-- processes that read variables and offer transitions
					MemoryTransitions(id__,
						 setPoint,
						 res,
						 errorFlag,
						 lim,
						 supplyLim,
						 ActualHV,
						 errorAck,
						 overLimit,
						 underLimit) = (
						internal__!TID_checkLimits_t0 -> SKIP
						[]
						(((ActualHV<=overLimit) and (ActualHV>=underLimit)))&internal__!TID_checkLimits_t1 -> SKIP
						[]
						(((ActualHV<underLimit) or (ActualHV>overLimit)))&internal__!TID_checkLimits_t2 -> SKIP
					 	)
					MemoryTransitions_checkLimits(id__) =
						(
						OP_checkLimits::getV_setPoint?setPoint ->	
						OP_checkLimits::getV_res?res ->	
						OP_checkLimits::getV_errorFlag?errorFlag ->	
						OP_checkLimits::getV_lim?lim ->	
						OP_checkLimits::getV_supplyLim?supplyLim ->	
						OP_checkLimits::getV_ActualHV?ActualHV ->	
						OP_checkLimits::getV_errorAck?errorAck ->	
						OP_checkLimits::getV_overLimit?overLimit ->	
						OP_checkLimits::getV_underLimit?underLimit ->
						 MemoryTransitions(id__,
						 	 setPoint,
						 	 res,
						 	 errorFlag,
						 	 lim,
						 	 supplyLim,
						 	 ActualHV,
						 	 errorAck,
						 	 overLimit,
						 	 underLimit);
						 MemoryTransitions_checkLimits(id__)
						)
					
					-- synchronisation, hiding and process sets 
			
					
					MemoryVariablesProcesses_checkLimits = Union(
						{
							{
							}
						}
					)
					
					MemoryVariablesSyncSet = Union({
						{|
							setWC
						|}	
					})
					
					MemoryVariablesHideSet = Union({
						{|
							getWC
						|}
					})
					MachineMemorySyncSet = Union({
						union(
							union(
								{||},
								{||}
							)
								
							,
							{|internal__.TID_checkLimits_t0,
							internal__.TID_checkLimits_t1,
							internal__.TID_checkLimits_t2|}
						),
						{|deadline|},
						WCresets
					})
					
					MachineMemoryHidingSet = Union({
						union(
							{||},
							{||}
						)
						,
						{|deadline|}
					})
					
					MachineInternalEvents = {|
						internal__
					|}
			
					-- individual memory processes
					
					-- Memory cell processes
					Memory_opt_setPoint(x__) = ( 
						get_setPoint!x__ -> Memory_opt_setPoint(x__)
						[]
						set_setPoint?x__ -> Memory_opt_setPoint(x__)
						[]
						set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
					)
					Memory_opt_ActualHV(x__) = ( 
						get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
						[]
						set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						[]
						set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					)
					Memory_opt_errorFlag(x__) = ( 
						get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
						[]
						set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
						[]
						set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					)
					Memory_opt_lim(x__) = ( 
						get_lim!x__ -> Memory_opt_lim(x__)
						[]
						set_lim?x__ -> Memory_opt_lim(x__)
						[]
						set_EXT_lim?x__ -> Memory_opt_lim(x__)
					)
					Memory_opt_overLimit(x__) = ( 
						get_overLimit!x__ -> Memory_opt_overLimit(x__)
						[]
						set_overLimit?x__ -> Memory_opt_overLimit(x__)
						[]
						set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
					)
					Memory_opt_underLimit(x__) = ( 
						get_underLimit!x__ -> Memory_opt_underLimit(x__)
						[]
						set_underLimit?x__ -> Memory_opt_underLimit(x__)
						[]
						set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
					)
					Memory_opt_res(x__) = ( 
						get_res!x__ -> Memory_opt_res(x__)
						[]
						set_res?x__ -> Memory_opt_res(x__)
						[]
						set_EXT_res?x__ -> Memory_opt_res(x__)
					)
					Memory_opt_supplyLim(x__) = ( 
						get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
						[]
						set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
						[]
						set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					)
					Memory_opt_errorAck(x__) = ( 
						get_errorAck!x__ -> Memory_opt_errorAck(x__)
						[]
						set_errorAck?x__ -> Memory_opt_errorAck(x__)
						[]
						set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
					)
			
					-- combined individual memory processes
					MemoryVariables = ||| P : MemoryVariablesProcesses_checkLimits @ P
				
					-- definition of the behaviour of state machines (default and optimised)
					D__(id__) = AUX(id__) \ internal_events
					O__(id__) = D__(id__)
				}
			endmodule
		
			Timed(OneStep) {
				-- declaring call and ret events for undefined operations
		
							
				-- declaring controller events
				channel currentState: InOut.State
				channel ext_setPoint: InOut.core_real
				channel ext_pow24VStatus: InOut.Power
				channel int_overLimit: InOut.core_real
				channel int_pwmSignal: InOut.Power
				channel int_underLimit: InOut.core_real
				channel int_DisableHV: InOut
				channel int_ActualHV: InOut.core_real
								
	
			
				-- declaring controller memory
				Memory(id__) = SKIP
				-- declaring controller termination channel
				channel terminate
				
				-- set of visible memory events
				visibleMemoryEvents = {||}
			
				D__(id__) = prioritise(wbisim(
					(
						stm_ref0::D__(id__)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::int_DisableHV <- int_DisableHV,
							stm_ref0::int_ActualHV <- int_ActualHV,
							stm_ref0::int_underLimit <- int_underLimit,
							stm_ref0::int_overLimit <- int_overLimit,
							stm_ref0::ext_setPoint <- ext_setPoint,
							stm_ref0::int_pwmSignal <- int_pwmSignal,
							stm_ref0::ext_pow24VStatus <- ext_pow24VStatus,
							stm_ref0::currentState <- currentState
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
				
				O__(id__) = D__(id__)
				
				-- VS version
				VS__(id__) = prioritise(wbisim(
					(
						stm_ref0::VS__(id__)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::int_DisableHV <- int_DisableHV,
							stm_ref0::int_ActualHV <- int_ActualHV,
							stm_ref0::int_underLimit <- int_underLimit,
							stm_ref0::int_overLimit <- int_overLimit,
							stm_ref0::ext_setPoint <- ext_setPoint,
							stm_ref0::int_pwmSignal <- int_pwmSignal,
							stm_ref0::ext_pow24VStatus <- ext_pow24VStatus,
							stm_ref0::currentState <- currentState
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
			
				HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
			}
		endmodule
		module ctrl_ref1
			Timed(OneStep) {
				shared_variable_events = {|
				|}		
			}	
		exports
			transparent diamond
			transparent sbisim
			transparent wbisim
			transparent chase
			
					module stm_ref0
					exports
						-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
						external prioritise
						transparent wbisim
						transparent dbisim
						transparent sbisim
					
						Timed(OneStep) {	
							-- flow channels
							channel internal__ : TIDS
							channel enteredV, enterV, exitV, exitedV : SIDS
							channel enter, entered: SIDS.SIDS
							channel exit,exited: SIDS.SIDS
							channel terminate
							
							-- variable channels
							channel get_overLimit, set_overLimit: core_real
							channel get_underLimit, set_underLimit: core_real
							channel get_ActualHV, set_ActualHV: core_real
							channel get_power, set_power: Power
									
							-- shared variable channels
							
							-- local variable channels for defined operations that are required by the state machine
							
							-- declaring state machine events
							channel int_overLimit__: TIDS.InOut.core_real
							channel int_overLimit: InOut.core_real
							channel int_underLimit__: TIDS.InOut.core_real
							channel int_underLimit: InOut.core_real
							channel int_DisableHV__: TIDS.InOut
							channel int_DisableHV: InOut
							channel int_ActualHV__: TIDS.InOut.core_real
							channel int_ActualHV: InOut.core_real
							channel ext_pow24VStatus__: TIDS.InOut.Power
							channel ext_pow24VStatus: InOut.Power
							
							-- declaring call and ret events for undefined operations
						
							-- Only the undefined operations are declared here.
							-- If the state machine is in isolation, all required operations will be undefined.
							-- If it is in the context of a controller, the required operations not provided by the
							-- controller will be declared here, and the defined operations will be defined in the
							-- context of the Controller module, and therefore within scope of the state machien module.
							
							
							-- definition of functions used to expose flow channels
							ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
											   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
											   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
											   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
												 
							ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
										[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							
							-- declaring identifiers of state and final states
							datatype SIDS = SID_Watchdog
							              | SID_Watchdog_s0
							              | SID_Watchdog_s0_f0
							              | SID_Watchdog_s0_Waiting
							              | SID_Watchdog_s0_PowerStatusRead
							              | SID_Watchdog_s0_ActualHVRead
							              | SID_Watchdog_s0_PowerAndActualHVRead
							
							-- declaring identifiers of transitions
							datatype TIDS = NULLTRANSITION__
							              | TID_Watchdog_s0_t0
							              | TID_Watchdog_s0_t1
							              | TID_Watchdog_s0_t3
							              | TID_Watchdog_s0_t2
							              | TID_Watchdog_s0_t4
							              | TID_Watchdog_s0_t5
							              | TID_Watchdog_s0_t6
							              | TID_Watchdog_s0_t7
							              | TID_Watchdog_s0_t8
							              | TID_Watchdog_s0_t9
							              | TID_Watchdog_s0_t10
							              | TID_Watchdog_t0
							              | TID_Watchdog_t1
							
							-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
							
							ITIDS = {
								TID_Watchdog_s0_t1,	TID_Watchdog_s0_t3,	TID_Watchdog_s0_t2,	TID_Watchdog_s0_t4,	TID_Watchdog_s0_t5,	TID_Watchdog_s0_t6,	TID_Watchdog_s0_t7,	TID_Watchdog_s0_t8,	TID_Watchdog_s0_t9,	TID_Watchdog_s0_t10,	TID_Watchdog_t1
							}
							
							int_int = {|
								int_overLimit__.TID_Watchdog_s0_t1,
								int_underLimit__.TID_Watchdog_s0_t1,
								int_DisableHV__.TID_Watchdog_s0_t1,
								int_ActualHV__.TID_Watchdog_s0_t1,
								ext_pow24VStatus__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t1,
								int_overLimit__.TID_Watchdog_s0_t3,
								int_underLimit__.TID_Watchdog_s0_t3,
								int_DisableHV__.TID_Watchdog_s0_t3,
								int_ActualHV__.TID_Watchdog_s0_t3,
								ext_pow24VStatus__.TID_Watchdog_s0_t3,
								internal__.TID_Watchdog_s0_t3,
								int_overLimit__.TID_Watchdog_s0_t2,
								int_underLimit__.TID_Watchdog_s0_t2,
								int_DisableHV__.TID_Watchdog_s0_t2,
								int_ActualHV__.TID_Watchdog_s0_t2,
								ext_pow24VStatus__.TID_Watchdog_s0_t2,
								internal__.TID_Watchdog_s0_t2,
								int_overLimit__.TID_Watchdog_s0_t4,
								int_underLimit__.TID_Watchdog_s0_t4,
								int_DisableHV__.TID_Watchdog_s0_t4,
								int_ActualHV__.TID_Watchdog_s0_t4,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								internal__.TID_Watchdog_s0_t4,
								int_overLimit__.TID_Watchdog_s0_t5,
								int_underLimit__.TID_Watchdog_s0_t5,
								int_DisableHV__.TID_Watchdog_s0_t5,
								int_ActualHV__.TID_Watchdog_s0_t5,
								ext_pow24VStatus__.TID_Watchdog_s0_t5,
								internal__.TID_Watchdog_s0_t5,
								int_overLimit__.TID_Watchdog_s0_t6,
								int_underLimit__.TID_Watchdog_s0_t6,
								int_DisableHV__.TID_Watchdog_s0_t6,
								int_ActualHV__.TID_Watchdog_s0_t6,
								ext_pow24VStatus__.TID_Watchdog_s0_t6,
								internal__.TID_Watchdog_s0_t6,
								int_overLimit__.TID_Watchdog_s0_t7,
								int_underLimit__.TID_Watchdog_s0_t7,
								int_DisableHV__.TID_Watchdog_s0_t7,
								int_ActualHV__.TID_Watchdog_s0_t7,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t7,
								int_overLimit__.TID_Watchdog_s0_t8,
								int_underLimit__.TID_Watchdog_s0_t8,
								int_DisableHV__.TID_Watchdog_s0_t8,
								int_ActualHV__.TID_Watchdog_s0_t8,
								ext_pow24VStatus__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t8,
								int_overLimit__.TID_Watchdog_s0_t9,
								int_underLimit__.TID_Watchdog_s0_t9,
								int_DisableHV__.TID_Watchdog_s0_t9,
								int_ActualHV__.TID_Watchdog_s0_t9,
								ext_pow24VStatus__.TID_Watchdog_s0_t9,
								internal__.TID_Watchdog_s0_t9,
								int_overLimit__.TID_Watchdog_s0_t10,
								int_underLimit__.TID_Watchdog_s0_t10,
								int_DisableHV__.TID_Watchdog_s0_t10,
								int_ActualHV__.TID_Watchdog_s0_t10,
								ext_pow24VStatus__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t10,
								int_overLimit__.TID_Watchdog_t1,
								int_underLimit__.TID_Watchdog_t1,
								int_DisableHV__.TID_Watchdog_t1,
								int_ActualHV__.TID_Watchdog_t1,
								ext_pow24VStatus__.TID_Watchdog_t1,
								internal__.TID_Watchdog_t1
							|}
								
							
							internal_events = {|enter,entered,exit,exited|}
							shared_variable_events = {|
							|}
									
							
							-- declaring all states
							CS_Watchdog_s0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0},
								y____ <- {SID_Watchdog_s0}
							|}
							
							Watchdog_s0_int_int = {|
								int_overLimit__.TID_Watchdog_s0_t1,
								int_underLimit__.TID_Watchdog_s0_t1,
								int_DisableHV__.TID_Watchdog_s0_t1,
								int_ActualHV__.TID_Watchdog_s0_t1,
								ext_pow24VStatus__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t1,
								int_overLimit__.TID_Watchdog_s0_t3,
								int_underLimit__.TID_Watchdog_s0_t3,
								int_DisableHV__.TID_Watchdog_s0_t3,
								int_ActualHV__.TID_Watchdog_s0_t3,
								ext_pow24VStatus__.TID_Watchdog_s0_t3,
								internal__.TID_Watchdog_s0_t3,
								int_overLimit__.TID_Watchdog_s0_t2,
								int_underLimit__.TID_Watchdog_s0_t2,
								int_DisableHV__.TID_Watchdog_s0_t2,
								int_ActualHV__.TID_Watchdog_s0_t2,
								ext_pow24VStatus__.TID_Watchdog_s0_t2,
								internal__.TID_Watchdog_s0_t2,
								int_overLimit__.TID_Watchdog_s0_t4,
								int_underLimit__.TID_Watchdog_s0_t4,
								int_DisableHV__.TID_Watchdog_s0_t4,
								int_ActualHV__.TID_Watchdog_s0_t4,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								internal__.TID_Watchdog_s0_t4,
								int_overLimit__.TID_Watchdog_s0_t5,
								int_underLimit__.TID_Watchdog_s0_t5,
								int_DisableHV__.TID_Watchdog_s0_t5,
								int_ActualHV__.TID_Watchdog_s0_t5,
								ext_pow24VStatus__.TID_Watchdog_s0_t5,
								internal__.TID_Watchdog_s0_t5,
								int_overLimit__.TID_Watchdog_s0_t6,
								int_underLimit__.TID_Watchdog_s0_t6,
								int_DisableHV__.TID_Watchdog_s0_t6,
								int_ActualHV__.TID_Watchdog_s0_t6,
								ext_pow24VStatus__.TID_Watchdog_s0_t6,
								internal__.TID_Watchdog_s0_t6,
								int_overLimit__.TID_Watchdog_s0_t7,
								int_underLimit__.TID_Watchdog_s0_t7,
								int_DisableHV__.TID_Watchdog_s0_t7,
								int_ActualHV__.TID_Watchdog_s0_t7,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t7,
								int_overLimit__.TID_Watchdog_s0_t8,
								int_underLimit__.TID_Watchdog_s0_t8,
								int_DisableHV__.TID_Watchdog_s0_t8,
								int_ActualHV__.TID_Watchdog_s0_t8,
								ext_pow24VStatus__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t8,
								int_overLimit__.TID_Watchdog_s0_t9,
								int_underLimit__.TID_Watchdog_s0_t9,
								int_DisableHV__.TID_Watchdog_s0_t9,
								int_ActualHV__.TID_Watchdog_s0_t9,
								ext_pow24VStatus__.TID_Watchdog_s0_t9,
								internal__.TID_Watchdog_s0_t9,
								int_overLimit__.TID_Watchdog_s0_t10,
								int_underLimit__.TID_Watchdog_s0_t10,
								int_DisableHV__.TID_Watchdog_s0_t10,
								int_ActualHV__.TID_Watchdog_s0_t10,
								ext_pow24VStatus__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t10
							|}
								
							
							Watchdog_s0_int_triggers = {|
								internal__.TID_Watchdog_s0_t0,
								internal__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t3,
								internal__.TID_Watchdog_s0_t2,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								int_ActualHV__.TID_Watchdog_s0_t5,
								int_ActualHV__.TID_Watchdog_s0_t6,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t9,
								internal__.TID_Watchdog_s0_t10
							|}
							
							State_Watchdog_s0_f0_R(id__) = 
								State_Watchdog_s0_f0(id__)
							 		[|diff(Watchdog_s0_int_int,Watchdog_s0_f0_triggers)|]
							 	SKIP
							 		
							State_Watchdog_s0_Waiting_R(id__) = 
								State_Watchdog_s0_Waiting(id__)
							 		[|diff(Watchdog_s0_int_int,Watchdog_s0_Waiting_triggers)|]
							 	SKIP
							 		
							State_Watchdog_s0_PowerStatusRead_R(id__) = 
								State_Watchdog_s0_PowerStatusRead(id__)
							 		[|diff(Watchdog_s0_int_int,Watchdog_s0_PowerStatusRead_triggers)|]
							 	SKIP
							 		
							State_Watchdog_s0_ActualHVRead_R(id__) = 
								State_Watchdog_s0_ActualHVRead(id__)
							 		[|diff(Watchdog_s0_int_int,Watchdog_s0_ActualHVRead_triggers)|]
							 	SKIP
							 		
							State_Watchdog_s0_PowerAndActualHVRead_R(id__) = 
								State_Watchdog_s0_PowerAndActualHVRead(id__)
							 		[|diff(Watchdog_s0_int_int,Watchdog_s0_PowerAndActualHVRead_triggers)|]
							 	SKIP
							 		
							State_Watchdog_s0(id__) = (
								State_Watchdog_s0_aux(id__)
									[|
										union(
											diff(int_int, Watchdog_s0_int_triggers),
											{|enter.x____.y____,
											  entered.x____.y____,
											  exit.x____.y____,
											  exited.x____.y____ |
											  x____ <- diff(SIDS,{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead}),
											  y____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead}
										    |}
										)
									|]
								(
									State_Watchdog_s0_f0_R(id__)
										[|inter(CS_Watchdog_s0_f0_sync,union(union(union(CS_Watchdog_s0_Waiting_sync,CS_Watchdog_s0_PowerStatusRead_sync),CS_Watchdog_s0_ActualHVRead_sync),CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
									(
										State_Watchdog_s0_Waiting_R(id__)
											[|inter(CS_Watchdog_s0_Waiting_sync,union(union(CS_Watchdog_s0_PowerStatusRead_sync,CS_Watchdog_s0_ActualHVRead_sync),CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
										(
											State_Watchdog_s0_PowerStatusRead_R(id__)
												[|inter(CS_Watchdog_s0_PowerStatusRead_sync,union(CS_Watchdog_s0_ActualHVRead_sync,CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
											(
												State_Watchdog_s0_ActualHVRead_R(id__)
													[|inter(CS_Watchdog_s0_ActualHVRead_sync,CS_Watchdog_s0_PowerAndActualHVRead_sync)|]
												State_Watchdog_s0_PowerAndActualHVRead_R(id__)
											)
										)
									)
								)
							)
							
							Watchdog_s0_triggers = {|
								internal__.TID_Watchdog_t1,
								internal__.TID_Watchdog_s0_t0,
								internal__.TID_Watchdog_s0_t1,
								int_ActualHV__.TID_Watchdog_s0_t6,
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t8,
								int_ActualHV__.TID_Watchdog_s0_t5,
								internal__.TID_Watchdog_s0_t2,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								internal__.TID_Watchdog_s0_t9,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t3
							|}
							
							State_Watchdog_s0_aux(id__) = let
								T_Watchdog_t1(id__) = internal__!TID_Watchdog_t1 ->  exit.SID_Watchdog_s0.SID_Watchdog_s0 -> SKIP;
													exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
															SKIP;
													SKIP;exited.SID_Watchdog_s0.SID_Watchdog_s0 -> SKIP;
													enter!SID_Watchdog_s0!SID_Watchdog_s0 -> State_Watchdog_s0_aux_execute(id__,SID_Watchdog_s0)
								State_Watchdog_s0_aux_execute(id__,o____) = SKIP; 
								I_Watchdog_s0_i0(id__);
									entered!o____!SID_Watchdog_s0 ->
									(SKIP; STOP /\ (
										T_Watchdog_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;
												exited!y____!SID_Watchdog_s0 -> SKIP);
												State_Watchdog_s0_aux(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (State_Watchdog_s0_aux_execute(id__,x____))
							
							CS_Watchdog_s0_f0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
								y____ <- {SID_Watchdog_s0_f0}
							|}
							
							
							Watchdog_s0_f0_triggers = {|
							|}
							
							State_Watchdog_s0_f0(id__) = let
								State_Watchdog_s0_f0_execute(id__,o____) = SKIP; 
									entered!o____!SID_Watchdog_s0_f0 ->
									(SKIP; STOP /\ (
										internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_f0 -> SKIP);
												State_Watchdog_s0_f0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (State_Watchdog_s0_f0_execute(id__,x____))
							
							CS_Watchdog_s0_Waiting_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
								y____ <- {SID_Watchdog_s0_Waiting}
							|}
							
							
							Watchdog_s0_Waiting_triggers = {|
								int_ActualHV__.TID_Watchdog_s0_t6,
								internal__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t8,
								int_ActualHV__.TID_Watchdog_s0_t5,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								internal__.TID_Watchdog_s0_t2,
								internal__.TID_Watchdog_s0_t9,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t3
							|}
							
							State_Watchdog_s0_Waiting(id__) = let
								T_Watchdog_s0_t4(id__) = ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> set_power!power ->  (exit.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
													SKIP;exited.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
													enter!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_PowerStatusRead -> entered!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_PowerStatusRead ->
													State_Watchdog_s0_Waiting(id__)
								)
								T_Watchdog_s0_t5(id__) = int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> set_ActualHV!ActualHV ->  (exit.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
													SKIP;exited.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
													enter!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_ActualHVRead -> entered!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_ActualHVRead ->
													State_Watchdog_s0_Waiting(id__)
								)
								State_Watchdog_s0_Waiting_execute(id__,o____) = SKIP; 
									entered!o____!SID_Watchdog_s0_Waiting ->
									(SKIP; STOP /\ (
										T_Watchdog_s0_t4(id__)[]
										T_Watchdog_s0_t5(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
												State_Watchdog_s0_Waiting(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (State_Watchdog_s0_Waiting_execute(id__,x____))
							
							CS_Watchdog_s0_PowerStatusRead_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
								y____ <- {SID_Watchdog_s0_PowerStatusRead}
							|}
							
							
							Watchdog_s0_PowerStatusRead_triggers = {|
								int_ActualHV__.TID_Watchdog_s0_t6,
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t2,
								internal__.TID_Watchdog_s0_t9
							|}
							
							State_Watchdog_s0_PowerStatusRead(id__) = let
								T_Watchdog_s0_t2(id__) = internal__!TID_Watchdog_s0_t2 ->  exit.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_PowerStatusRead(id__)
								T_Watchdog_s0_t6(id__) = int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> set_ActualHV!ActualHV ->  (exit.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
													enter!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_PowerAndActualHVRead -> entered!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_PowerAndActualHVRead ->
													State_Watchdog_s0_PowerStatusRead(id__)
								)
								State_Watchdog_s0_PowerStatusRead_execute(id__,o____) = SKIP; 
									entered!o____!SID_Watchdog_s0_PowerStatusRead ->
									(SKIP; STOP /\ (
										T_Watchdog_s0_t2(id__)[]
										T_Watchdog_s0_t6(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
												State_Watchdog_s0_PowerStatusRead(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (State_Watchdog_s0_PowerStatusRead_execute(id__,x____))
							
							CS_Watchdog_s0_ActualHVRead_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
								y____ <- {SID_Watchdog_s0_ActualHVRead}
							|}
							
							
							Watchdog_s0_ActualHVRead_triggers = {|
								internal__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t9,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t3
							|}
							
							State_Watchdog_s0_ActualHVRead(id__) = let
								T_Watchdog_s0_t1(id__) = internal__!TID_Watchdog_s0_t1 ->  exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_ActualHVRead(id__)
								T_Watchdog_s0_t3(id__) = internal__!TID_Watchdog_s0_t3 ->  exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_ActualHVRead(id__)
								T_Watchdog_s0_t7(id__) = ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> set_power!power ->  (exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
													enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_PowerAndActualHVRead -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_PowerAndActualHVRead ->
													State_Watchdog_s0_ActualHVRead(id__)
								)
								State_Watchdog_s0_ActualHVRead_execute(id__,o____) = SKIP; 
									entered!o____!SID_Watchdog_s0_ActualHVRead ->
									(SKIP; STOP /\ (
										T_Watchdog_s0_t1(id__)[]
										T_Watchdog_s0_t3(id__)[]
										T_Watchdog_s0_t7(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
												State_Watchdog_s0_ActualHVRead(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (State_Watchdog_s0_ActualHVRead_execute(id__,x____))
							
							CS_Watchdog_s0_PowerAndActualHVRead_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
								y____ <- {SID_Watchdog_s0_PowerAndActualHVRead}
							|}
							
							
							Watchdog_s0_PowerAndActualHVRead_triggers = {|
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t9
							|}
							
							State_Watchdog_s0_PowerAndActualHVRead(id__) = let
								T_Watchdog_s0_t8(id__) = internal__!TID_Watchdog_s0_t8 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_PowerAndActualHVRead(id__)
								T_Watchdog_s0_t9(id__) = internal__!TID_Watchdog_s0_t9 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_PowerAndActualHVRead(id__)
								T_Watchdog_s0_t10(id__) = internal__!TID_Watchdog_s0_t10 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
													true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
													State_Watchdog_s0_PowerAndActualHVRead(id__)
								State_Watchdog_s0_PowerAndActualHVRead_execute(id__,o____) = SKIP; 
									entered!o____!SID_Watchdog_s0_PowerAndActualHVRead ->
									(SKIP; STOP /\ (
										T_Watchdog_s0_t8(id__)[]
										T_Watchdog_s0_t9(id__)[]
										T_Watchdog_s0_t10(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
										[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
										[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
										[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
												SKIP;
												exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
												State_Watchdog_s0_PowerAndActualHVRead(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (State_Watchdog_s0_PowerAndActualHVRead_execute(id__,x____))
							
							
							I_Watchdog_i0(id__) = let
								T_Watchdog_t0(id__) = internal__!TID_Watchdog_t0 -> true&(int_overLimit.in?overLimit -> set_overLimit!overLimit -> SKIP);true&(int_underLimit.in?underLimit -> set_underLimit!underLimit -> SKIP);enter!SID_Watchdog!SID_Watchdog_s0 -> entered!SID_Watchdog!SID_Watchdog_s0 ->
								SKIP
							within
								T_Watchdog_t0(id__)
							
							I_Watchdog_s0_i0(id__) = let
								T_Watchdog_s0_t0(id__) = internal__!TID_Watchdog_s0_t0 -> enter!SID_Watchdog_s0!SID_Watchdog_s0_Waiting -> entered!SID_Watchdog_s0!SID_Watchdog_s0_Waiting ->
								SKIP
							within
								T_Watchdog_s0_t0(id__)
							
							
							State_Watchdog_s0_R(id__) = 
								State_Watchdog_s0(id__)
									[|diff(int_int,Watchdog_s0_triggers)|]
								SKIP
									 		
								
							STM(id__) = (
								I_Watchdog_i0(id__)
									[|
										{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
											x____ <- diff(SIDS,{SID_Watchdog_s0}),
											y____ <- {SID_Watchdog_s0}
									|}|]
								State_Watchdog_s0_R(id__)
							)
							
							-- optimized memory process
							channel getV_overLimit: core_real
							channel getV_underLimit: core_real
							channel getV_ActualHV: core_real
							channel getV_power: Power
							
							-- individual memory processes
							Memory_overLimit(x__) = ( 
								get_overLimit!x__ -> Memory_overLimit(x__)
								[]
								getV_overLimit!x__ -> Memory_overLimit(x__)
								[]
								set_overLimit?x__ -> Memory_overLimit(x__)
							)
							Memory_underLimit(x__) = ( 
								get_underLimit!x__ -> Memory_underLimit(x__)
								[]
								getV_underLimit!x__ -> Memory_underLimit(x__)
								[]
								set_underLimit?x__ -> Memory_underLimit(x__)
							)
							Memory_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								getV_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_ActualHV(x__)
								[]
								int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> Memory_ActualHV(ActualHV)
								[]
								int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> Memory_ActualHV(ActualHV)
							)
							Memory_power(x__) = ( 
								get_power!x__ -> Memory_power(x__)
								[]
								getV_power!x__ -> Memory_power(x__)
								[]
								set_power?x__ -> Memory_power(x__)
								[]
								ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> Memory_power(power)
								[]
								ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> Memory_power(power)
							)
							Memory_WC_TID_Watchdog_t1_0(x__) = (
								getWC.WC_TID_Watchdog_t1_0_ID!x__ -> Memory_WC_TID_Watchdog_t1_0(x__)
								[]
								setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Memory_WC_TID_Watchdog_t1_0(x__)
							)
							
							-- processes that read variables and offer transitions
							MemoryTransitions(id__,
								 overLimit,
								 underLimit,
								 ActualHV,
								 power,
								 WC_TID_Watchdog_t1_0) = (
								internal__!TID_Watchdog_s0_t0 -> SKIP
								[]
								((ActualHV>overLimit))&internal__!TID_Watchdog_s0_t1 -> SKIP
								[]
								((ActualHV<underLimit))&internal__!TID_Watchdog_s0_t3 -> SKIP
								[]
								((power==Power_Off))&internal__!TID_Watchdog_s0_t2 -> SKIP
								[]
								ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> SKIP
								[]
								int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> SKIP
								[]
								int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> SKIP
								[]
								ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> SKIP
								[]
								((ActualHV<underLimit))&internal__!TID_Watchdog_s0_t8 -> SKIP
								[]
								((ActualHV>overLimit))&internal__!TID_Watchdog_s0_t9 -> SKIP
								[]
								((power==Power_Off))&internal__!TID_Watchdog_s0_t10 -> SKIP
								[]
								internal__!TID_Watchdog_t0 -> SKIP
								[]
								(WC_TID_Watchdog_t1_0)&internal__!TID_Watchdog_t1 -> SKIP
							
								[]
									set_overLimit?x__ -> SKIP
								[]
								set_underLimit?x__ -> SKIP
								[]
								set_ActualHV?x__ -> SKIP
								[]
								set_power?x__ -> SKIP
							
								[]
									setWC.WC_TID_Watchdog_t1_0_ID?x__ -> SKIP
							 	)
							MemoryTransitions_Watchdog(id__) =
								(
								getV_overLimit?overLimit ->	
								getV_underLimit?underLimit ->	
								getV_ActualHV?ActualHV ->	
								getV_power?power ->	
								getWC.WC_TID_Watchdog_t1_0_ID?WC_TID_Watchdog_t1_0 ->
								 MemoryTransitions(id__,
								 	 overLimit,
								 	 underLimit,
								 	 ActualHV,
								 	 power,
								 	 WC_TID_Watchdog_t1_0);
								 MemoryTransitions_Watchdog(id__)
								)
							
							-- synchronisation, hiding and process sets 
							MemoryVariablesProcesses_Watchdog = Union(
								{
									{
										Memory_overLimit(0),
										Memory_underLimit(0),
										Memory_ActualHV(0),
										Memory_power(Power_On),
										Memory_WC_TID_Watchdog_t1_0(false)
									}
								}
							)
							
							MemoryVariablesSyncSet = Union({
								{|
									int_ActualHV__.TID_Watchdog_s0_t6,
									getV_power,
									set_overLimit,
									set_ActualHV,
									ext_pow24VStatus__.TID_Watchdog_s0_t7,
									ext_pow24VStatus__.TID_Watchdog_s0_t4,
									int_ActualHV__.TID_Watchdog_s0_t5,
									set_power,
									setWC,
									setWC.WC_TID_Watchdog_t1_0_ID,
									getWC.WC_TID_Watchdog_t1_0_ID,
									set_underLimit,
									getV_underLimit,
									getV_overLimit,
									getV_ActualHV
								|}	
							})
							
							MemoryVariablesHideSet = Union({
								{|
									getV_power,
									getWC,
									getV_underLimit,
									getV_overLimit,
									getV_ActualHV
								|}
							})
							
							-- combined individual memory processes
							MemoryVariables = ||| P : MemoryVariablesProcesses_Watchdog @ P
							
							-- complete memory process
							MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_Watchdog(id__)) \ MemoryVariablesHideSet
							
							-- optimised memory
							-- Sets of named elements identified according to transition conditions:
							-- {}
							-- {underLimit,ActualHV}
							-- {power}
							-- {WC_TID_Watchdog_t1_0}
							-- {ActualHV,overLimit}
							-- Summary of all identified named elements:
							-- {
							-- underLimit
							-- power
							-- ActualHV
							-- WC_TID_Watchdog_t1_0
							-- overLimit
							-- }
							
							-- Allocation plan:
							-- 0:{}
							--	=> {
							--		TID_Watchdog_s0_t7,
							--		TID_Watchdog_s0_t4,
							--		TID_Watchdog_t0,
							--		TID_Watchdog_s0_t5,
							--		TID_Watchdog_s0_t6,
							--		TID_Watchdog_s0_t0}
							-- 3:{underLimit,ActualHV}
							--	=> {
							--		TID_Watchdog_s0_t3,
							--		TID_Watchdog_s0_t8}
							-- 1:{power}
							--	=> {
							--		TID_Watchdog_s0_t2,
							--		TID_Watchdog_s0_t10}
							-- 2:{WC_TID_Watchdog_t1_0}
							--	=> {
							--		TID_Watchdog_t1}
							-- 4:{ActualHV,overLimit}
							--	=> {
							--		TID_Watchdog_s0_t1,
							--		TID_Watchdog_s0_t9}
							
							-- Memory transition processes
							MemoryTransitions_opt_0(id__) =
							(
								let
									Update = Current(id__)
									Current(id__)
									 	   = 
									 	   ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> Update
									 	   []
									 	   ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> Update
									 	   []
									 	   internal__!TID_Watchdog_t0 -> Update
									 	   []
									 	   int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> Update
									 	   []
									 	   int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> Update
									 	   []
									 	   internal__!TID_Watchdog_s0_t0 -> Update
								within
									Update
							)
							MemoryTransitions_opt_3(id__) =
							(
								let
									Update = 
									get_underLimit?underLimit ->
									get_ActualHV?ActualHV ->
									Current(id__,
										 underLimit,
										 ActualHV)
									Current(id__,
										 underLimit,
										 ActualHV)
									 	   = 
									 	   ((ActualHV<underLimit))&(internal__!TID_Watchdog_s0_t3 -> Update)
									 	   []
									 	   ((ActualHV<underLimit))&(internal__!TID_Watchdog_s0_t8 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_underLimit?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_ActualHV?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_1(id__) =
							(
								let
									Update = 
									get_power?power ->
									Current(id__,
										 power)
									Current(id__,
										 power)
									 	   = 
									 	   ((power==Power_Off))&(internal__!TID_Watchdog_s0_t2 -> Update)
									 	   []
									 	   ((power==Power_Off))&(internal__!TID_Watchdog_s0_t10 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_power?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_2(id__) =
							(
								let
									Update = 
									getWC.WC_TID_Watchdog_t1_0_ID?WC_TID_Watchdog_t1_0 ->
									Current(id__,
										 WC_TID_Watchdog_t1_0)
									Current(id__,
										 WC_TID_Watchdog_t1_0)
									 	   = 
									 	   (WC_TID_Watchdog_t1_0)&(internal__!TID_Watchdog_t1 -> Update)
									 	   	 
									 	   	 []
									 	   	 setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Update
								within
									Update
							)
							MemoryTransitions_opt_4(id__) =
							(
								let
									Update = 
									get_ActualHV?ActualHV ->
									get_overLimit?overLimit ->
									Current(id__,
										 ActualHV,
										 overLimit)
									Current(id__,
										 ActualHV,
										 overLimit)
									 	   = 
									 	   ((ActualHV>overLimit))&(internal__!TID_Watchdog_s0_t1 -> Update)
									 	   []
									 	   ((ActualHV>overLimit))&(internal__!TID_Watchdog_s0_t9 -> Update)
									 	   	 
									 	   	 []
									 	   	 set_ActualHV?x__ -> Update
									 	   	 []
									 	   	 
									 	   	 set_overLimit?x__ -> Update
								within
									Update
							)
							
							-- Memory cell processes
							Memory_opt_underLimit(x__) = ( 
								get_underLimit!x__ -> Memory_opt_underLimit(x__)
								[]
								set_underLimit?x__ -> Memory_opt_underLimit(x__)
							)
							Memory_opt_power(x__) = ( 
								get_power!x__ -> Memory_opt_power(x__)
								[]
								set_power?x__ -> Memory_opt_power(x__)
							)
							Memory_opt_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
							)
							Memory_opt_WC_TID_Watchdog_t1_0(x__) = ( 
								getWC.WC_TID_Watchdog_t1_0_ID!x__ -> Memory_opt_WC_TID_Watchdog_t1_0(x__)
								[]
								setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Memory_opt_WC_TID_Watchdog_t1_0(x__)
							)
							Memory_opt_overLimit(x__) = ( 
								get_overLimit!x__ -> Memory_opt_overLimit(x__)
								[]
								set_overLimit?x__ -> Memory_opt_overLimit(x__)
							)
							
							-- Composition of memory, StateMachine and Memory transition processes
							
							MemorySTM_opt(id__) =
								dbisim(
								  sbisim(Memory_opt_underLimit(0)
								      	[| {|get_underLimit,set_underLimit|} |] 
								      	dbisim(
								      	  sbisim(Memory_opt_ActualHV(0)
								      	      	[| {|set_ActualHV,get_ActualHV|} |] 
								      	      	sbisim(	
								      	      	  dbisim(
								      	      	    sbisim(dbisim(
								      	      	      sbisim(Memory_opt_power(Power_On)
								      	      	          	[| {|get_power,set_power|} |] 
								      	      	          	sbisim(	
								      	      	          	  dbisim(
								      	      	          	    sbisim(dbisim(
								      	      	          	      sbisim(Memory_opt_WC_TID_Watchdog_t1_0(false)
								      	      	          	          	[| {|setWC.WC_TID_Watchdog_t1_0_ID,getWC.WC_TID_Watchdog_t1_0_ID|} |] 
								      	      	          	          	sbisim(	
								      	      	          	          	  dbisim(
								      	      	          	          	    sbisim(dbisim(
								      	      	          	          	      sbisim(Memory_opt_overLimit(0)
								      	      	          	          	          	[| {|set_overLimit,get_overLimit|} |] 
								      	      	          	          	          	sbisim(	
								      	      	          	          	          	  dbisim(
								      	      	          	          	          	    sbisim(sbisim(	
								      	      	          	          	          	      dbisim(
								      	      	          	          	          	        sbisim(STM_core(id__)
								      	      	          	          	          	          	  [| {|int_ActualHV__.TID_Watchdog_s0_t6,ext_pow24VStatus__.TID_Watchdog_s0_t7,internal__.TID_Watchdog_s0_t0,ext_pow24VStatus__.TID_Watchdog_s0_t4,internal__.TID_Watchdog_t0,int_ActualHV__.TID_Watchdog_s0_t5|} |]
								      	      	          	          	          	          	  MemoryTransitions_opt_0(id__)
								      	      	          	          	          	          	  )\{|internal__.TID_Watchdog_s0_t0|})
								      	      	          	          	          	          )
								      	      	          	          	          	      	  [| {|internal__.TID_Watchdog_s0_t1,set_ActualHV,set_overLimit,internal__.TID_Watchdog_s0_t9|} |]
								      	      	          	          	          	      	  MemoryTransitions_opt_4(id__)
								      	      	          	          	          	      	  )\{||})
								      	      	          	          	          	      )
								      	      	          	          	          	) \ {|set_overLimit,get_overLimit|}
								      	      	          	          	          )
								      	      	          	          	      	  [| {|internal__.TID_Watchdog_t1,setWC.WC_TID_Watchdog_t1_0_ID|} |]
								      	      	          	          	      	  MemoryTransitions_opt_2(id__)
								      	      	          	          	      	  )\{||})
								      	      	          	          	      )
								      	      	          	          	) \ {|setWC.WC_TID_Watchdog_t1_0_ID,getWC.WC_TID_Watchdog_t1_0_ID|}
								      	      	          	          )
								      	      	          	      	  [| {|internal__.TID_Watchdog_s0_t2,set_power,internal__.TID_Watchdog_s0_t10|} |]
								      	      	          	      	  MemoryTransitions_opt_1(id__)
								      	      	          	      	  )\{||})
								      	      	          	      )
								      	      	          	) \ {|get_power,set_power|}
								      	      	          )
								      	      	      	  [| {|set_ActualHV,internal__.TID_Watchdog_s0_t8,set_underLimit,internal__.TID_Watchdog_s0_t3|} |]
								      	      	      	  MemoryTransitions_opt_3(id__)
								      	      	      	  )\{||})
								      	      	      )
								      	      	) \ {|set_ActualHV,get_ActualHV|}
								      	      )
								      	) \ {|get_underLimit,set_underLimit|}
								      )
							
							-- main process
							
							MachineMemorySyncSet = Union({
								union(
									union(
										{|get_overLimit,set_overLimit,
										get_underLimit,set_underLimit,
										get_ActualHV,set_ActualHV,
										get_power,set_power|},
										{||}
									)
										
									,
									{|internal__.TID_Watchdog_s0_t0,
									internal__.TID_Watchdog_s0_t1,
									internal__.TID_Watchdog_s0_t3,
									internal__.TID_Watchdog_s0_t2,
									ext_pow24VStatus__.TID_Watchdog_s0_t4,
									int_ActualHV__.TID_Watchdog_s0_t5,
									int_ActualHV__.TID_Watchdog_s0_t6,
									ext_pow24VStatus__.TID_Watchdog_s0_t7,
									internal__.TID_Watchdog_s0_t8,
									internal__.TID_Watchdog_s0_t9,
									internal__.TID_Watchdog_s0_t10,
									internal__.TID_Watchdog_t0,
									internal__.TID_Watchdog_t1|}
								),
								{|deadline|},
								WCresets
							})
							
							MachineMemoryHidingSet = Union({
								union(
									{|get_overLimit,set_overLimit,
									get_underLimit,set_underLimit,
									get_ActualHV,set_ActualHV,
									get_power,set_power|},
									{||}
								)
								,
								{|deadline|}
							})
							
							MachineInternalEvents = {|
								internal__
							|}
						
							-- main process
							AUX(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								(
									(MemoryN(id__))
										[| union(WCsets,WCsync) |]
									Clocks(id__)
								)\WCsets
							)
							[[
								int_overLimit__.x____ <- int_overLimit,
								int_underLimit__.x____ <- int_underLimit,
								int_DisableHV__.x____ <- int_DisableHV,
								int_ActualHV__.x____ <- int_ActualHV,
								ext_pow24VStatus__.x____ <- ext_pow24VStatus
								| x____ <- TIDS
							]]
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP\MachineInternalEvents)
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							STM_core(id__) = 
								dbisim(
									sbisim(
											(STM(id__)
											[| union(WCsync,WCresets) |]
											Clocks(id__))\WCresets
										  )
									  )
							
							AUX_opt(id__) = 
								prioritise(
									(MemorySTM_opt(id__)
									)[[
										int_overLimit__.x____ <- int_overLimit,
										int_underLimit__.x____ <- int_underLimit,
										int_DisableHV__.x____ <- int_DisableHV,
										int_ActualHV__.x____ <- int_ActualHV,
										ext_pow24VStatus__.x____ <- ext_pow24VStatus
										| x____ <- TIDS
									]]
								[|{|terminate|}|>SKIP\MachineInternalEvents
								,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							internal_(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
							)
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP)
							,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
							-- declare clocks
							datatype ClockSet = dummyC
							channel clockReset 				-- no clocks declared
							
							-- declare trigger deadlines channel
							channel deadline : TIDS.deadlineSignal
							
							-- compile clocks process
							
							-- set of strings that uniquely identify the waiting conditions, each of which is 
							-- used to synchronise with the Memory process to set the correspoding variable in
							-- the memory process.
							datatype setWC_identifierSet = dummyWC
							                             | WC_TID_Watchdog_t1_0_ID
							
							-- declaring getWC and setWC channel for updating memory variables related to clocks
							channel setWC : setWC_identifierSet.Bool
							channel getWC : setWC_identifierSet.Bool
							
							-- Set of pairs capturing waiting condition processes and their alphabet.
							-- It includes the corresponding set of the defined operations.
							WCset(id__) = Union({
								{
								({|internal__.TID_Watchdog_t1,setWC.WC_TID_Watchdog_t1_0_ID,entered.x.SID_Watchdog_s0 | x <- SIDS|},P_WC_TID_Watchdog_t1_0(id__))
								}
								})
							
							-- Auxiliary function to rename the channel set for required clocks.
							
							-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
							-- It includes the corresponding set of the defined operations.
							WCsync = Union({
								{|internal__.TID_Watchdog_t1|}
								})
							-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
							-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
							WCresets = Union({
								{|entered.x.SID_Watchdog_s0 | x <- SIDS |}
								})
							-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
							WCsets = Union({
								{|setWC|}
								})
							
							P_WC_TID_Watchdog_t1_0_reset(id__) = entered?x.SID_Watchdog_s0 -> setWC.WC_TID_Watchdog_t1_0_ID.false -> P_WC_TID_Watchdog_t1_0_monitor(id__)
							
							P_WC_TID_Watchdog_t1_0_monitor(id__) = (TimedInterrupt(RUN({|internal__.TID_Watchdog_t1,tock|}),10) ; setWC.WC_TID_Watchdog_t1_0_ID.true -> RUN({|internal__.TID_Watchdog_t1,tock|})) /\ P_WC_TID_Watchdog_t1_0_reset(id__)
							
							P_WC_TID_Watchdog_t1_0(id__) = setWC.WC_TID_Watchdog_t1_0_ID.false -> P_WC_TID_Watchdog_t1_0_monitor(id__)
							
							-- Clocks process
							Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
			
							-- collects all clockResets including those of operations
							ClockResets = Union({
								{|clockReset|}
												})
							
							-- With no internal events visible
							Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
							
							D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
							
							O__(id__) = D__(id__)
							
							-- With enter/entered/exit/exited events visible
							FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
							
							-- With enterV/enteredV/exitV/exitedV events visible
							VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
							
							-- With clock resets visible
							FVS_C__(id__) = AUX(id__)
						}
					endmodule
		
		
			Timed(OneStep) {
				-- declaring call and ret events for undefined operations
		
							
				-- declaring controller events
				channel ext_pow24VStatus: InOut.Power
				channel int_overLimit: InOut.core_real
				channel int_underLimit: InOut.core_real
				channel int_DisableHV: InOut
				channel int_ActualHV: InOut.core_real
								
	
			
				-- declaring controller memory
				Memory(id__) = SKIP
				-- declaring controller termination channel
				channel terminate
				
				-- set of visible memory events
				visibleMemoryEvents = {||}
			
				D__(id__) = prioritise(wbisim(
					(
						stm_ref0::D__(id__)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::int_ActualHV <- int_ActualHV,
							stm_ref0::int_DisableHV <- int_DisableHV,
							stm_ref0::int_underLimit <- int_underLimit,
							stm_ref0::int_overLimit <- int_overLimit,
							stm_ref0::ext_pow24VStatus <- ext_pow24VStatus
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
				
				O__(id__) = D__(id__)
				
				-- VS version
				VS__(id__) = prioritise(wbisim(
					(
						stm_ref0::VS__(id__)[[
							stm_ref0::terminate <- terminate,
							stm_ref0::int_ActualHV <- int_ActualHV,
							stm_ref0::int_DisableHV <- int_DisableHV,
							stm_ref0::int_underLimit <- int_underLimit,
							stm_ref0::int_overLimit <- int_overLimit,
							stm_ref0::ext_pow24VStatus <- ext_pow24VStatus
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
			
				HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
			}
		endmodule
		module ctrl_ref2
			Timed(OneStep) {
				shared_variable_events = {|
				|}		
			}	
		exports
			transparent diamond
			transparent sbisim
			transparent wbisim
			transparent chase
			
					module stm0
					exports
						-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
						external prioritise
						transparent wbisim
						transparent dbisim
						transparent sbisim
					
						Timed(OneStep) {	
							-- flow channels
							channel internal__ : TIDS
							channel enteredV, enterV, exitV, exitedV : SIDS
							channel enter, entered: SIDS.SIDS
							channel exit,exited: SIDS.SIDS
							channel terminate
							
							-- variable channels
							channel get_power, set_power: Power
									
							-- shared variable channels
							
							-- local variable channels for defined operations that are required by the state machine
							
							-- declaring state machine events
							channel ext_pow24VStatus__: TIDS.InOut.Power
							channel ext_pow24VStatus: InOut.Power
							channel ext_pow24_1__: TIDS.InOut.Power
							channel ext_pow24_1: InOut.Power
							channel ext_pow24_2__: TIDS.InOut.Power
							channel ext_pow24_2: InOut.Power
							
							-- declaring call and ret events for undefined operations
						
							-- Only the undefined operations are declared here.
							-- If the state machine is in isolation, all required operations will be undefined.
							-- If it is in the context of a controller, the required operations not provided by the
							-- controller will be declared here, and the defined operations will be defined in the
							-- context of the Controller module, and therefore within scope of the state machien module.
							
							
							-- definition of functions used to expose flow channels
							ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
											   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
											   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
											   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
												 
							ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
										[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							
							-- declaring identifiers of state and final states
							datatype SIDS = SID_stm0
							              | SID_stm0_s0
							
							-- declaring identifiers of transitions
							datatype TIDS = NULLTRANSITION__
							              | TID_stm0_t0
							              | TID_stm0_t1
							
							-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
							
							ITIDS = {
								TID_stm0_t1
							}
							
							int_int = {|
								ext_pow24VStatus__.TID_stm0_t1,
								ext_pow24_1__.TID_stm0_t1,
								ext_pow24_2__.TID_stm0_t1,
								internal__.TID_stm0_t1
							|}
								
							
							internal_events = {|enter,entered,exit,exited|}
							shared_variable_events = {|
							|}
									
							
							-- declaring all states
							CS_stm0_s0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_stm0_s0},
								y____ <- {SID_stm0_s0}
							|}
							
							
							stm0_s0_triggers = {|
								internal__.TID_stm0_t1
							|}
							
							State_stm0_s0(id__) = let
								T_stm0_t1(id__) = internal__!TID_stm0_t1 ->  exit.SID_stm0_s0.SID_stm0_s0 -> SKIP;
													SKIP;exited.SID_stm0_s0.SID_stm0_s0 -> SKIP;
													get_power?power -> true&(ext_pow24_1.out!power -> SKIP);get_power?power -> true&(ext_pow24_2.out!power -> SKIP);enter!SID_stm0_s0!SID_stm0_s0 -> State_stm0_s0_execute(id__,SID_stm0_s0)
								State_stm0_s0_execute(id__,o____) = true&(ext_pow24VStatus.in?power -> set_power!power -> SKIP); 
									entered!o____!SID_stm0_s0 ->
									(SKIP; STOP /\ (
										T_stm0_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1}) -> exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] ext_pow24_1__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] ext_pow24_2__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (State_stm0_s0_execute(id__,x____))
							
							
							I_stm0_i0(id__) = let
								T_stm0_t0(id__) = internal__!TID_stm0_t0 -> enter!SID_stm0!SID_stm0_s0 -> entered!SID_stm0!SID_stm0_s0 ->
								SKIP
							within
								T_stm0_t0(id__)
							
							
							State_stm0_s0_R(id__) = 
								State_stm0_s0(id__)
									[|diff(int_int,stm0_s0_triggers)|]
								SKIP
									 		
								
							STM(id__) = (
								I_stm0_i0(id__)
									[|
										{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
											x____ <- diff(SIDS,{SID_stm0_s0}),
											y____ <- {SID_stm0_s0}
									|}|]
								State_stm0_s0_R(id__)
							)
							
							-- optimized memory process
							channel getV_power: Power
							
							-- individual memory processes
							Memory_power(x__) = ( 
								get_power!x__ -> Memory_power(x__)
								[]
								getV_power!x__ -> Memory_power(x__)
								[]
								set_power?x__ -> Memory_power(x__)
							)
							
							-- processes that read variables and offer transitions
							MemoryTransitions(id__,
								 power) = (
								internal__!TID_stm0_t0 -> SKIP
								[]
								internal__!TID_stm0_t1 -> SKIP
							
								[]
									set_power?x__ -> SKIP
							 	)
							MemoryTransitions_stm0(id__) =
								(
								getV_power?power ->
								 MemoryTransitions(id__,
								 	 power);
								 MemoryTransitions_stm0(id__)
								)
							
							-- synchronisation, hiding and process sets 
							MemoryVariablesProcesses_stm0 = Union(
								{
									{
										Memory_power(Power_On)
									}
								}
							)
							
							MemoryVariablesSyncSet = Union({
								{|
									getV_power,
									set_power,
									setWC
								|}	
							})
							
							MemoryVariablesHideSet = Union({
								{|
									getV_power,
									getWC
								|}
							})
							
							-- combined individual memory processes
							MemoryVariables = ||| P : MemoryVariablesProcesses_stm0 @ P
							
							-- complete memory process
							MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_stm0(id__)) \ MemoryVariablesHideSet
							
							-- optimised memory
							-- Sets of named elements identified according to transition conditions:
							-- {}
							-- Summary of all identified named elements:
							-- {
							-- power
							-- }
							
							-- Allocation plan:
							-- 0:{}
							--	=> {
							--		TID_stm0_t1,
							--		TID_stm0_t0}
							
							-- Memory transition processes
							MemoryTransitions_opt_0(id__) =
							(
								let
									Update = Current(id__)
									Current(id__)
									 	   = 
									 	   internal__!TID_stm0_t1 -> Update
									 	   []
									 	   internal__!TID_stm0_t0 -> Update
								within
									Update
							)
							
							-- Memory cell processes
							Memory_opt_power(x__) = ( 
								get_power!x__ -> Memory_opt_power(x__)
								[]
								set_power?x__ -> Memory_opt_power(x__)
							)
							
							-- Composition of memory, StateMachine and Memory transition processes
							
							MemorySTM_opt(id__) =
								sbisim(	
								  dbisim(
								    sbisim(dbisim(sbisim(Memory_opt_power(Power_On)
								          	[| {|get_power,set_power|} |] 
								          	STM_core(id__)
								          	)\ {|get_power,set_power|}
								          )
								      	  [| {|internal__.TID_stm0_t0,internal__.TID_stm0_t1|} |]
								      	  MemoryTransitions_opt_0(id__)
								      	  )\{|internal__.TID_stm0_t0|})
								      )
							
							-- main process
							
							MachineMemorySyncSet = Union({
								union(
									union(
										{|get_power,set_power|},
										{||}
									)
										
									,
									{|internal__.TID_stm0_t0,
									internal__.TID_stm0_t1|}
								),
								{|deadline|},
								WCresets
							})
							
							MachineMemoryHidingSet = Union({
								union(
									{|get_power,set_power|},
									{||}
								)
								,
								{|deadline|}
							})
							
							MachineInternalEvents = {|
								internal__
							|}
						
							-- main process
							AUX(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								(
									(MemoryN(id__))
										[| union(WCsets,WCsync) |]
									Clocks(id__)
								)\WCsets
							)
							[[
								ext_pow24VStatus__.x____ <- ext_pow24VStatus,
								ext_pow24_1__.x____ <- ext_pow24_1,
								ext_pow24_2__.x____ <- ext_pow24_2
								| x____ <- TIDS
							]]
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP\MachineInternalEvents)
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							STM_core(id__) = 
								dbisim(
									sbisim(
											(STM(id__)
											[| union(WCsync,WCresets) |]
											Clocks(id__))\WCresets
										  )
									  )
							
							AUX_opt(id__) = 
								prioritise(
									(MemorySTM_opt(id__)
									)[[
										ext_pow24VStatus__.x____ <- ext_pow24VStatus,
										ext_pow24_1__.x____ <- ext_pow24_1,
										ext_pow24_2__.x____ <- ext_pow24_2
										| x____ <- TIDS
									]]
								[|{|terminate|}|>SKIP\MachineInternalEvents
								,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							internal_(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
							)
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP)
							,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
							-- declare clocks
							datatype ClockSet = dummyC
							channel clockReset 				-- no clocks declared
							
							-- declare trigger deadlines channel
							channel deadline : TIDS.deadlineSignal
							
							-- compile clocks process
							
							-- set of strings that uniquely identify the waiting conditions, each of which is 
							-- used to synchronise with the Memory process to set the correspoding variable in
							-- the memory process.
							datatype setWC_identifierSet = dummyWC
							
							-- declaring getWC and setWC channel for updating memory variables related to clocks
							channel setWC : setWC_identifierSet.Bool
							channel getWC : setWC_identifierSet.Bool
							
							-- Set of pairs capturing waiting condition processes and their alphabet.
							-- It includes the corresponding set of the defined operations.
							WCset(id__) = Union({
								{
								}
								})
							
							-- Auxiliary function to rename the channel set for required clocks.
							
							-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
							-- It includes the corresponding set of the defined operations.
							WCsync = Union({
								{||}
								})
							-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
							-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
							WCresets = Union({
								{| | x <- SIDS |}
								})
							-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
							WCsets = Union({
								{|setWC|}
								})
							
							
							
							-- Clocks process
							Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
			
							-- collects all clockResets including those of operations
							ClockResets = Union({
								{|clockReset|}
												})
							
							-- With no internal events visible
							Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
							
							D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
							
							O__(id__) = D__(id__)
							
							-- With enter/entered/exit/exited events visible
							FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
							
							-- With enterV/enteredV/exitV/exitedV events visible
							VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
							
							-- With clock resets visible
							FVS_C__(id__) = AUX(id__)
						}
					endmodule
		
		
			Timed(OneStep) {
				-- declaring call and ret events for undefined operations
		
							
				-- declaring controller events
				channel ext_pow24VStatus: InOut.Power
				channel ext_pow24_1: InOut.Power
				channel ext_pow24_2: InOut.Power
								
	
			
				-- declaring controller memory
				Memory(id__) = SKIP
				-- declaring controller termination channel
				channel terminate
				
				-- set of visible memory events
				visibleMemoryEvents = {||}
			
				D__(id__) = prioritise(wbisim(
					(
						stm0::D__(id__)[[
							stm0::terminate <- terminate,
							stm0::ext_pow24VStatus <- ext_pow24VStatus,
							stm0::ext_pow24_1 <- ext_pow24_1,
							stm0::ext_pow24_2 <- ext_pow24_2
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
				
				O__(id__) = D__(id__)
				
				-- VS version
				VS__(id__) = prioritise(wbisim(
					(
						stm0::VS__(id__)[[
							stm0::terminate <- terminate,
							stm0::ext_pow24VStatus <- ext_pow24VStatus,
							stm0::ext_pow24_1 <- ext_pow24_1,
							stm0::ext_pow24_2 <- ext_pow24_2
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
			
				HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
			}
		endmodule
		module ctrl_ref3
			Timed(OneStep) {
				shared_variable_events = {|
				|}		
			}	
		exports
			transparent diamond
			transparent sbisim
			transparent wbisim
			transparent chase
			
					module stm0
					exports
						-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
						external prioritise
						transparent wbisim
						transparent dbisim
						transparent sbisim
					
						Timed(OneStep) {	
							-- flow channels
							channel internal__ : TIDS
							channel enteredV, enterV, exitV, exitedV : SIDS
							channel enter, entered: SIDS.SIDS
							channel exit,exited: SIDS.SIDS
							channel terminate
							
							-- variable channels
							channel get_ActualHV, set_ActualHV: core_real
									
							-- shared variable channels
							
							-- local variable channels for defined operations that are required by the state machine
							
							-- declaring state machine events
							channel int_ActualHV__: TIDS.InOut.core_real
							channel int_ActualHV: InOut.core_real
							channel ActualHV_1__: TIDS.InOut.core_real
							channel ActualHV_1: InOut.core_real
							channel ActualHV_2__: TIDS.InOut.core_real
							channel ActualHV_2: InOut.core_real
							
							-- declaring call and ret events for undefined operations
						
							-- Only the undefined operations are declared here.
							-- If the state machine is in isolation, all required operations will be undefined.
							-- If it is in the context of a controller, the required operations not provided by the
							-- controller will be declared here, and the defined operations will be defined in the
							-- context of the Controller module, and therefore within scope of the state machien module.
							
							
							-- definition of functions used to expose flow channels
							ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
											   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
											   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
											   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
												 
							ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
										[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
										[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
							
							-- declaring identifiers of state and final states
							datatype SIDS = SID_stm0
							              | SID_stm0_s0
							
							-- declaring identifiers of transitions
							datatype TIDS = NULLTRANSITION__
							              | TID_stm0_t0
							              | TID_stm0_t1
							
							-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
							
							ITIDS = {
								TID_stm0_t1
							}
							
							int_int = {|
								int_ActualHV__.TID_stm0_t1,
								ActualHV_1__.TID_stm0_t1,
								ActualHV_2__.TID_stm0_t1,
								internal__.TID_stm0_t1
							|}
								
							
							internal_events = {|enter,entered,exit,exited|}
							shared_variable_events = {|
							|}
									
							
							-- declaring all states
							CS_stm0_s0_sync = {|
								enter.y____.x____, 
								entered.y____.x____, 
								exit.y____.x____, 
								exited.y____.x____,
								enter.x____.y____, 
								entered.x____.y____, 
								exit.x____.y____, 
								exited.x____.y____ |
								x____ <- {SID_stm0_s0},
								y____ <- {SID_stm0_s0}
							|}
							
							
							stm0_s0_triggers = {|
								internal__.TID_stm0_t1
							|}
							
							State_stm0_s0(id__) = let
								T_stm0_t1(id__) = internal__!TID_stm0_t1 ->  exit.SID_stm0_s0.SID_stm0_s0 -> SKIP;
													SKIP;exited.SID_stm0_s0.SID_stm0_s0 -> SKIP;
													get_ActualHV?ActualHV -> true&(ActualHV_1.out!ActualHV -> SKIP);get_ActualHV?ActualHV -> true&(ActualHV_2.out!ActualHV -> SKIP);enter!SID_stm0_s0!SID_stm0_s0 -> State_stm0_s0_execute(id__,SID_stm0_s0)
								State_stm0_s0_execute(id__,o____) = true&(int_ActualHV.in?ActualHV -> set_ActualHV!ActualHV -> SKIP); 
									entered!o____!SID_stm0_s0 ->
									(SKIP; STOP /\ (
										T_stm0_t1(id__)
										[]
										internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1}) -> exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] ActualHV_1__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
										[] ActualHV_2__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
												SKIP;
												exited!y____!SID_stm0_s0 -> SKIP);
												State_stm0_s0(id__)
									))
							within
								enter?x____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (State_stm0_s0_execute(id__,x____))
							
							
							I_stm0_i0(id__) = let
								T_stm0_t0(id__) = internal__!TID_stm0_t0 -> enter!SID_stm0!SID_stm0_s0 -> entered!SID_stm0!SID_stm0_s0 ->
								SKIP
							within
								T_stm0_t0(id__)
							
							
							State_stm0_s0_R(id__) = 
								State_stm0_s0(id__)
									[|diff(int_int,stm0_s0_triggers)|]
								SKIP
									 		
								
							STM(id__) = (
								I_stm0_i0(id__)
									[|
										{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
											x____ <- diff(SIDS,{SID_stm0_s0}),
											y____ <- {SID_stm0_s0}
									|}|]
								State_stm0_s0_R(id__)
							)
							
							-- optimized memory process
							channel getV_ActualHV: core_real
							
							-- individual memory processes
							Memory_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								getV_ActualHV!x__ -> Memory_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_ActualHV(x__)
							)
							
							-- processes that read variables and offer transitions
							MemoryTransitions(id__,
								 ActualHV) = (
								internal__!TID_stm0_t0 -> SKIP
								[]
								internal__!TID_stm0_t1 -> SKIP
							
								[]
									set_ActualHV?x__ -> SKIP
							 	)
							MemoryTransitions_stm0(id__) =
								(
								getV_ActualHV?ActualHV ->
								 MemoryTransitions(id__,
								 	 ActualHV);
								 MemoryTransitions_stm0(id__)
								)
							
							-- synchronisation, hiding and process sets 
							MemoryVariablesProcesses_stm0 = Union(
								{
									{
										Memory_ActualHV(0)
									}
								}
							)
							
							MemoryVariablesSyncSet = Union({
								{|
									set_ActualHV,
									setWC,
									getV_ActualHV
								|}	
							})
							
							MemoryVariablesHideSet = Union({
								{|
									getWC,
									getV_ActualHV
								|}
							})
							
							-- combined individual memory processes
							MemoryVariables = ||| P : MemoryVariablesProcesses_stm0 @ P
							
							-- complete memory process
							MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_stm0(id__)) \ MemoryVariablesHideSet
							
							-- optimised memory
							-- Sets of named elements identified according to transition conditions:
							-- {}
							-- Summary of all identified named elements:
							-- {
							-- ActualHV
							-- }
							
							-- Allocation plan:
							-- 0:{}
							--	=> {
							--		TID_stm0_t1,
							--		TID_stm0_t0}
							
							-- Memory transition processes
							MemoryTransitions_opt_0(id__) =
							(
								let
									Update = Current(id__)
									Current(id__)
									 	   = 
									 	   internal__!TID_stm0_t1 -> Update
									 	   []
									 	   internal__!TID_stm0_t0 -> Update
								within
									Update
							)
							
							-- Memory cell processes
							Memory_opt_ActualHV(x__) = ( 
								get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
								[]
								set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
							)
							
							-- Composition of memory, StateMachine and Memory transition processes
							
							MemorySTM_opt(id__) =
								sbisim(	
								  dbisim(
								    sbisim(dbisim(sbisim(Memory_opt_ActualHV(0)
								          	[| {|set_ActualHV,get_ActualHV|} |] 
								          	STM_core(id__)
								          	)\ {|set_ActualHV,get_ActualHV|}
								          )
								      	  [| {|internal__.TID_stm0_t0,internal__.TID_stm0_t1|} |]
								      	  MemoryTransitions_opt_0(id__)
								      	  )\{|internal__.TID_stm0_t0|})
								      )
							
							-- main process
							
							MachineMemorySyncSet = Union({
								union(
									union(
										{|get_ActualHV,set_ActualHV|},
										{||}
									)
										
									,
									{|internal__.TID_stm0_t0,
									internal__.TID_stm0_t1|}
								),
								{|deadline|},
								WCresets
							})
							
							MachineMemoryHidingSet = Union({
								union(
									{|get_ActualHV,set_ActualHV|},
									{||}
								)
								,
								{|deadline|}
							})
							
							MachineInternalEvents = {|
								internal__
							|}
						
							-- main process
							AUX(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								(
									(MemoryN(id__))
										[| union(WCsets,WCsync) |]
									Clocks(id__)
								)\WCsets
							)
							[[
								int_ActualHV__.x____ <- int_ActualHV,
								ActualHV_1__.x____ <- ActualHV_1,
								ActualHV_2__.x____ <- ActualHV_2
								| x____ <- TIDS
							]]
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP\MachineInternalEvents)
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							STM_core(id__) = 
								dbisim(
									sbisim(
											(STM(id__)
											[| union(WCsync,WCresets) |]
											Clocks(id__))\WCresets
										  )
									  )
							
							AUX_opt(id__) = 
								prioritise(
									(MemorySTM_opt(id__)
									)[[
										int_ActualHV__.x____ <- int_ActualHV,
										ActualHV_1__.x____ <- ActualHV_1,
										ActualHV_2__.x____ <- ActualHV_2
										| x____ <- TIDS
									]]
								[|{|terminate|}|>SKIP\MachineInternalEvents
								,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
							
							internal_(id__) = prioritise((((
								wbisim(STM(id__))
									[|MachineMemorySyncSet|]
								((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
							)
							\MachineMemoryHidingSet)
							[|{|terminate|}|>SKIP)
							,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
							-- declare clocks
							datatype ClockSet = dummyC
							channel clockReset 				-- no clocks declared
							
							-- declare trigger deadlines channel
							channel deadline : TIDS.deadlineSignal
							
							-- compile clocks process
							
							-- set of strings that uniquely identify the waiting conditions, each of which is 
							-- used to synchronise with the Memory process to set the correspoding variable in
							-- the memory process.
							datatype setWC_identifierSet = dummyWC
							
							-- declaring getWC and setWC channel for updating memory variables related to clocks
							channel setWC : setWC_identifierSet.Bool
							channel getWC : setWC_identifierSet.Bool
							
							-- Set of pairs capturing waiting condition processes and their alphabet.
							-- It includes the corresponding set of the defined operations.
							WCset(id__) = Union({
								{
								}
								})
							
							-- Auxiliary function to rename the channel set for required clocks.
							
							-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
							-- It includes the corresponding set of the defined operations.
							WCsync = Union({
								{||}
								})
							-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
							-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
							WCresets = Union({
								{| | x <- SIDS |}
								})
							-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
							WCsets = Union({
								{|setWC|}
								})
							
							
							
							-- Clocks process
							Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
			
							-- collects all clockResets including those of operations
							ClockResets = Union({
								{|clockReset|}
												})
							
							-- With no internal events visible
							Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
							
							D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
							
							O__(id__) = D__(id__)
							
							-- With enter/entered/exit/exited events visible
							FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
							
							-- With enterV/enteredV/exitV/exitedV events visible
							VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
							
							-- With clock resets visible
							FVS_C__(id__) = AUX(id__)
						}
					endmodule
		
		
			Timed(OneStep) {
				-- declaring call and ret events for undefined operations
		
							
				-- declaring controller events
				channel int_ActualHV: InOut.core_real
				channel ActualHV_1: InOut.core_real
				channel ActualHV_2: InOut.core_real
								
	
			
				-- declaring controller memory
				Memory(id__) = SKIP
				-- declaring controller termination channel
				channel terminate
				
				-- set of visible memory events
				visibleMemoryEvents = {||}
			
				D__(id__) = prioritise(wbisim(
					(
						stm0::D__(id__)[[
							stm0::terminate <- terminate,
							stm0::int_ActualHV <- int_ActualHV,
							stm0::ActualHV_1 <- ActualHV_1,
							stm0::ActualHV_2 <- ActualHV_2
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
				
				O__(id__) = D__(id__)
				
				-- VS version
				VS__(id__) = prioritise(wbisim(
					(
						stm0::VS__(id__)[[
							stm0::terminate <- terminate,
							stm0::int_ActualHV <- int_ActualHV,
							stm0::ActualHV_1 <- ActualHV_1,
							stm0::ActualHV_2 <- ActualHV_2
						]]
					)
						[|
							union(
								{|
								|},
								{|
								|}
							)
						|]
					Memory(id__)
				)
				\ union(
					{|
					|},
					{|
					|}
				)
				[|{|terminate|}|>SKIP,
				<union(visibleMemoryEvents,{terminate}),{tock}>)
			
				HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
			}
		endmodule
	
	Timed(OneStep) {
			
		-- declaring module memory
		Memory(id__) = SKIP
		
		visibleMemoryEvents = {||}
		
		D__(id__) = prioritise(
			(let
				Buffer0(<v>) = 
					ctrl_ref1::int_DisableHV.out -> Buffer0(<1>) 
					[]
					ctrl_ref0::int_DisableHV.in -> Buffer0(<>)
				Buffer0(<>) = ctrl_ref1::int_DisableHV.out -> Buffer0(<1>)
				Buffer1(<v>) = 
					ctrl_ref0::int_underLimit.out?x -> Buffer1(<x>)
					[]
					ctrl_ref1::int_underLimit.in!v -> Buffer1(<>)
				Buffer1(<>) = ctrl_ref0::int_underLimit.out?x -> Buffer1(<x>)
				Buffer2(<v>) = 
					ctrl_ref0::int_overLimit.out?x -> Buffer2(<x>)
					[]
					ctrl_ref1::int_overLimit.in!v -> Buffer2(<>)
				Buffer2(<>) = ctrl_ref0::int_overLimit.out?x -> Buffer2(<x>)
				Buffer3(<v>) = 
					ctrl_ref0::int_ActualHV.out?x -> Buffer3(<x>)
					[]
					ctrl_ref3::int_ActualHV.in!v -> Buffer3(<>)
				Buffer3(<>) = ctrl_ref0::int_ActualHV.out?x -> Buffer3(<x>)
				Buffer4(<v>) = 
					ctrl_ref3::ActualHV_1.out?x -> Buffer4(<x>)
					[]
					ctrl_ref1::int_ActualHV.in!v -> Buffer4(<>)
				Buffer4(<>) = ctrl_ref3::ActualHV_1.out?x -> Buffer4(<x>)
				Buffer5(<v>) = 
					ctrl_ref2::ext_pow24_2.out?x -> Buffer5(<x>)
					[]
					ctrl_ref1::ext_pow24VStatus.in!v -> Buffer5(<>)
				Buffer5(<>) = ctrl_ref2::ext_pow24_2.out?x -> Buffer5(<x>)
				Buffer6(<v>) = 
					ctrl_ref2::ext_pow24_1.out?x -> Buffer6(<x>)
					[]
					ctrl_ref0::ext_pow24VStatus.in!v -> Buffer6(<>)
				Buffer6(<>) = ctrl_ref2::ext_pow24_1.out?x -> Buffer6(<x>)
				
			within
				(
					(
						(Buffer0(<>)|||
						Buffer1(<>)|||
						Buffer2(<>)|||
						Buffer3(<>)|||
						Buffer4(<>)|||
						Buffer5(<>)|||
						Buffer6(<>)
						)
							[|{|ctrl_ref0::int_DisableHV,ctrl_ref1::int_DisableHV,ctrl_ref1::int_underLimit,ctrl_ref0::int_underLimit,ctrl_ref1::int_overLimit,ctrl_ref0::int_overLimit,ctrl_ref3::int_ActualHV,ctrl_ref0::int_ActualHV,ctrl_ref1::int_ActualHV,ctrl_ref3::ActualHV_1,ctrl_ref1::ext_pow24VStatus,ctrl_ref2::ext_pow24_2,ctrl_ref0::ext_pow24VStatus,ctrl_ref2::ext_pow24_1|}|]
						(
							(
								(
									ctrl_ref0::D__(id__)[[
										ctrl_ref0::terminate <- terminate,
										ctrl_ref0::ext_setPoint <- ext_setPoint,
										ctrl_ref0::int_pwmSignal <- int_pwmSignal,
										ctrl_ref0::currentState <- currentState
									]]
								)
									[|{|terminate|}|]
								(
									(
										ctrl_ref1::D__(id__)[[
											ctrl_ref1::terminate <- terminate
										]]
									)
										[|{|terminate|}|]
									(
										(
											ctrl_ref2::D__(id__)[[
												ctrl_ref2::terminate <- terminate,
												ctrl_ref2::ext_pow24VStatus <- ext_pow24VStatus
											]]
										)
											[|{|terminate|}|]
										(
											ctrl_ref3::D__(id__)[[
												ctrl_ref3::terminate <- terminate,
												ctrl_ref3::ActualHV_2 <- int_ActualHV
											]]
										)
									)
									\
									diff(
										{|terminate|},
										{|terminate|}
									)
								)
								\
								diff(
									{|terminate|},
									{|terminate|}
								)
							)
							\
							diff(
								{|terminate|},
								{|terminate|}
							)
								[|
									union(
										{|
										|},
										{|
										|}
									)
								|]
							Memory(id__)
						)
					)
					\ Union({
						{|
							ctrl_ref0::int_DisableHV,
							ctrl_ref1::int_DisableHV,
							ctrl_ref1::int_underLimit,
							ctrl_ref0::int_underLimit,
							ctrl_ref1::int_overLimit,
							ctrl_ref0::int_overLimit,
							ctrl_ref3::int_ActualHV,
							ctrl_ref0::int_ActualHV,
							ctrl_ref1::int_ActualHV,
							ctrl_ref3::ActualHV_1,
							ctrl_ref1::ext_pow24VStatus,
							ctrl_ref2::ext_pow24_2,
							ctrl_ref0::ext_pow24VStatus,
							ctrl_ref2::ext_pow24_1
						|},
						{|
						|},
						{|
						|}
					})
					[|{|terminate|}|>SKIP
				)\{|terminate|}
			),
			<visibleMemoryEvents,{tock}>
		)
		
		O__(id__) = D__(id__)
		
		-- visible state equivalent
		VS__(id__) = prioritise(
			(let
				Buffer0(<v>) = 
					ctrl_ref1::int_DisableHV.out -> Buffer0(<1>) 
					[]
					ctrl_ref0::int_DisableHV.in -> Buffer0(<>)
				Buffer0(<>) = ctrl_ref1::int_DisableHV.out -> Buffer0(<1>)
				Buffer1(<v>) = 
					ctrl_ref0::int_underLimit.out?x -> Buffer1(<x>)
					[]
					ctrl_ref1::int_underLimit.in!v -> Buffer1(<>)
				Buffer1(<>) = ctrl_ref0::int_underLimit.out?x -> Buffer1(<x>)
				Buffer2(<v>) = 
					ctrl_ref0::int_overLimit.out?x -> Buffer2(<x>)
					[]
					ctrl_ref1::int_overLimit.in!v -> Buffer2(<>)
				Buffer2(<>) = ctrl_ref0::int_overLimit.out?x -> Buffer2(<x>)
				Buffer3(<v>) = 
					ctrl_ref0::int_ActualHV.out?x -> Buffer3(<x>)
					[]
					ctrl_ref3::int_ActualHV.in!v -> Buffer3(<>)
				Buffer3(<>) = ctrl_ref0::int_ActualHV.out?x -> Buffer3(<x>)
				Buffer4(<v>) = 
					ctrl_ref3::ActualHV_1.out?x -> Buffer4(<x>)
					[]
					ctrl_ref1::int_ActualHV.in!v -> Buffer4(<>)
				Buffer4(<>) = ctrl_ref3::ActualHV_1.out?x -> Buffer4(<x>)
				Buffer5(<v>) = 
					ctrl_ref2::ext_pow24_2.out?x -> Buffer5(<x>)
					[]
					ctrl_ref1::ext_pow24VStatus.in!v -> Buffer5(<>)
				Buffer5(<>) = ctrl_ref2::ext_pow24_2.out?x -> Buffer5(<x>)
				Buffer6(<v>) = 
					ctrl_ref2::ext_pow24_1.out?x -> Buffer6(<x>)
					[]
					ctrl_ref0::ext_pow24VStatus.in!v -> Buffer6(<>)
				Buffer6(<>) = ctrl_ref2::ext_pow24_1.out?x -> Buffer6(<x>)
				
			within
				(
					(
						(Buffer0(<>)|||
						Buffer1(<>)|||
						Buffer2(<>)|||
						Buffer3(<>)|||
						Buffer4(<>)|||
						Buffer5(<>)|||
						Buffer6(<>)
						)
							[|{|ctrl_ref0::int_DisableHV,ctrl_ref1::int_DisableHV,ctrl_ref1::int_underLimit,ctrl_ref0::int_underLimit,ctrl_ref1::int_overLimit,ctrl_ref0::int_overLimit,ctrl_ref3::int_ActualHV,ctrl_ref0::int_ActualHV,ctrl_ref1::int_ActualHV,ctrl_ref3::ActualHV_1,ctrl_ref1::ext_pow24VStatus,ctrl_ref2::ext_pow24_2,ctrl_ref0::ext_pow24VStatus,ctrl_ref2::ext_pow24_1|}|]
						(
							(
								(
									ctrl_ref0::VS__(id__)[[
										ctrl_ref0::terminate <- terminate,
										ctrl_ref0::ext_setPoint <- ext_setPoint,
										ctrl_ref0::int_pwmSignal <- int_pwmSignal,
										ctrl_ref0::currentState <- currentState
									]]
								)
									[|{|terminate|}|]
								(
									(
										ctrl_ref1::VS__(id__)[[
											ctrl_ref1::terminate <- terminate
										]]
									)
										[|{|terminate|}|]
									(
										(
											ctrl_ref2::VS__(id__)[[
												ctrl_ref2::terminate <- terminate,
												ctrl_ref2::ext_pow24VStatus <- ext_pow24VStatus
											]]
										)
											[|{|terminate|}|]
										(
											ctrl_ref3::VS__(id__)[[
												ctrl_ref3::terminate <- terminate,
												ctrl_ref3::ActualHV_2 <- int_ActualHV
											]]
										)
									)
									\
									diff(
										{|terminate|},
										{|terminate|}
									)
								)
								\
								diff(
									{|terminate|},
									{|terminate|}
								)
							)
							\
							diff(
								{|terminate|},
								{|terminate|}
							)
								[|
									union(
										{|
										|},
										{|
										|}
									)
								|]
							Memory(id__)
						)
					)
					\ Union({
						{|
							ctrl_ref0::int_DisableHV,
							ctrl_ref1::int_DisableHV,
							ctrl_ref1::int_underLimit,
							ctrl_ref0::int_underLimit,
							ctrl_ref1::int_overLimit,
							ctrl_ref0::int_overLimit,
							ctrl_ref3::int_ActualHV,
							ctrl_ref0::int_ActualHV,
							ctrl_ref1::int_ActualHV,
							ctrl_ref3::ActualHV_1,
							ctrl_ref1::ext_pow24VStatus,
							ctrl_ref2::ext_pow24_2,
							ctrl_ref0::ext_pow24VStatus,
							ctrl_ref2::ext_pow24_1
						|},
						{|
						|},
						{|
						|}
					})							
					[|{|terminate|}|>SKIP
				)\{|terminate|}
			)
			,<visibleMemoryEvents,{tock}>
		)
	}
endmodule

	module ctrl0
		Timed(OneStep) {
			shared_variable_events = {|
			|}		
		}	
	exports
		transparent diamond
		transparent sbisim
		transparent wbisim
		transparent chase
		
				module stm_ref0
				exports
					-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
					external prioritise
					transparent wbisim
					transparent dbisim
					transparent sbisim
				
					Timed(OneStep) {	
						-- flow channels
						channel internal__ : TIDS
						channel enteredV, enterV, exitV, exitedV : SIDS
						channel enter, entered: SIDS.SIDS
						channel exit,exited: SIDS.SIDS
						channel terminate
						
						-- variable channels
						channel get_power, set_power: Power
						channel get_setPoint, set_setPoint: core_real
						channel get_res, set_res: core_boolean
						channel get_errorFlag, set_errorFlag: core_boolean
						channel get_lim, set_lim: core_boolean
						channel get_supplyLim, set_supplyLim: core_boolean
						channel get_ActualHV, set_ActualHV: core_real
						channel get_errorAck, set_errorAck: core_boolean
						channel get_overLimit, set_overLimit: core_real
						channel get_underLimit, set_underLimit: core_real
								
						-- shared variable channels
						
						-- local variable channels for defined operations that are required by the state machine
						channel get_disableHV_arg, set_disableHV_arg: core_boolean
						channel get_supplyVoltCheck_power, set_supplyVoltCheck_power: Power
						
						-- declaring state machine events
						channel currentState__: TIDS.InOut.State
						channel currentState: InOut.State
						channel ext_setPoint__: TIDS.InOut.core_real
						channel ext_setPoint: InOut.core_real
						channel ext_pow24VStatus__: TIDS.InOut.Power
						channel ext_pow24VStatus: InOut.Power
						channel int_overLimit__: TIDS.InOut.core_real
						channel int_overLimit: InOut.core_real
						channel int_pwmSignal__: TIDS.InOut.Power
						channel int_pwmSignal: InOut.Power
						channel int_underLimit__: TIDS.InOut.core_real
						channel int_underLimit: InOut.core_real
						channel int_DisableHV__: TIDS.InOut
						channel int_DisableHV: InOut
						channel int_ActualHV__: TIDS.InOut.core_real
						channel int_ActualHV: InOut.core_real
						
						-- declaring call and ret events for undefined operations
					
						-- Only the undefined operations are declared here.
						-- If the state machine is in isolation, all required operations will be undefined.
						-- If it is in the context of a controller, the required operations not provided by the
						-- controller will be declared here, and the defined operations will be defined in the
						-- context of the Controller module, and therefore within scope of the state machien module.
						
						CALL__disableHV(id__,
									arg) = (
						OP_disableHV::set_arg!arg -> 
						OP_disableHV::D__(id__))
						[[
							OP_disableHV::int_pwmSignal <- int_pwmSignal
						]]
						[[
							OP_disableHV::get_setPoint <- get_setPoint,
							OP_disableHV::set_setPoint <- set_setPoint,
							OP_disableHV::get_res <- get_res,
							OP_disableHV::set_res <- set_res,
							OP_disableHV::get_errorFlag <- get_errorFlag,
							OP_disableHV::set_errorFlag <- set_errorFlag,
							OP_disableHV::get_lim <- get_lim,
							OP_disableHV::set_lim <- set_lim,
							OP_disableHV::get_supplyLim <- get_supplyLim,
							OP_disableHV::set_supplyLim <- set_supplyLim,
							OP_disableHV::get_ActualHV <- get_ActualHV,
							OP_disableHV::set_ActualHV <- set_ActualHV,
							OP_disableHV::get_errorAck <- get_errorAck,
							OP_disableHV::set_errorAck <- set_errorAck,
							OP_disableHV::get_overLimit <- get_overLimit,
							OP_disableHV::set_overLimit <- set_overLimit,
							OP_disableHV::get_underLimit <- get_underLimit,
							OP_disableHV::set_underLimit <- set_underLimit
						]]
						CALL__supplyVoltCheck(id__) = (
						OP_supplyVoltCheck::D__(id__))
						[[
							OP_supplyVoltCheck::ext_setPoint <- ext_setPoint,
							OP_supplyVoltCheck::ext_pow24VStatus <- ext_pow24VStatus
						]]
						[[
							OP_supplyVoltCheck::get_setPoint <- get_setPoint,
							OP_supplyVoltCheck::set_setPoint <- set_setPoint,
							OP_supplyVoltCheck::get_res <- get_res,
							OP_supplyVoltCheck::set_res <- set_res,
							OP_supplyVoltCheck::get_errorFlag <- get_errorFlag,
							OP_supplyVoltCheck::set_errorFlag <- set_errorFlag,
							OP_supplyVoltCheck::get_lim <- get_lim,
							OP_supplyVoltCheck::set_lim <- set_lim,
							OP_supplyVoltCheck::get_supplyLim <- get_supplyLim,
							OP_supplyVoltCheck::set_supplyLim <- set_supplyLim,
							OP_supplyVoltCheck::get_ActualHV <- get_ActualHV,
							OP_supplyVoltCheck::set_ActualHV <- set_ActualHV,
							OP_supplyVoltCheck::get_errorAck <- get_errorAck,
							OP_supplyVoltCheck::set_errorAck <- set_errorAck,
							OP_supplyVoltCheck::get_overLimit <- get_overLimit,
							OP_supplyVoltCheck::set_overLimit <- set_overLimit,
							OP_supplyVoltCheck::get_underLimit <- get_underLimit,
							OP_supplyVoltCheck::set_underLimit <- set_underLimit
						]]
						CALL__checkLimits(id__) = (
						OP_checkLimits::D__(id__))
						[[
							OP_checkLimits::ext_setPoint <- ext_setPoint,
							OP_checkLimits::ext_pow24VStatus <- ext_pow24VStatus
						]]
						[[
							OP_checkLimits::get_setPoint <- get_setPoint,
							OP_checkLimits::set_setPoint <- set_setPoint,
							OP_checkLimits::get_res <- get_res,
							OP_checkLimits::set_res <- set_res,
							OP_checkLimits::get_errorFlag <- get_errorFlag,
							OP_checkLimits::set_errorFlag <- set_errorFlag,
							OP_checkLimits::get_lim <- get_lim,
							OP_checkLimits::set_lim <- set_lim,
							OP_checkLimits::get_supplyLim <- get_supplyLim,
							OP_checkLimits::set_supplyLim <- set_supplyLim,
							OP_checkLimits::get_ActualHV <- get_ActualHV,
							OP_checkLimits::set_ActualHV <- set_ActualHV,
							OP_checkLimits::get_errorAck <- get_errorAck,
							OP_checkLimits::set_errorAck <- set_errorAck,
							OP_checkLimits::get_overLimit <- get_overLimit,
							OP_checkLimits::set_overLimit <- set_overLimit,
							OP_checkLimits::get_underLimit <- get_underLimit,
							OP_checkLimits::set_underLimit <- set_underLimit
						]]
						
						-- definition of functions used to expose flow channels
						ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
										   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
										   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
										   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
											 
						ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
									[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						
						-- declaring identifiers of state and final states
						datatype SIDS = SID_State_machine
						              | SID_State_machine_Ramping
						              | SID_State_machine_Init
						              | SID_State_machine_Init_si0
						              | SID_State_machine_Wait24Vpower
						              | SID_State_machine_Wait24Vpower_si0
						              | SID_State_machine_Wait24Vpower_s1
						              | SID_State_machine_ClosedLoop
						              | SID_State_machine_ClosedLoop_s1
						              | SID_State_machine_ClosedLoop_s2
						              | SID_State_machine_ClosedLoop_s2_s0
						              | SID_State_machine_ClosedLoop_s2_s1
						              | SID_State_machine_ClosedLoop_s3
						              | SID_State_machine_ClosedLoop_s4
						              | SID_State_machine_ErrorMode
						              | SID_State_machine_ErrorMode_f0
						              | SID_State_machine_ErrorMode_s1
						              | SID_State_machine_ErrorMode_s2
						
						-- declaring identifiers of transitions
						datatype TIDS = NULLTRANSITION__
						              | TID_State_machine_Init_t0
						              | TID_State_machine_Wait24Vpower_t0
						              | TID_State_machine_Wait24Vpower_t1
						              | TID_State_machine_ClosedLoop_s2_t0
						              | TID_State_machine_ClosedLoop_s2_t1
						              | TID_State_machine_ClosedLoop_s2_t5
						              | TID_State_machine_ClosedLoop_s2_t2
						              | TID_State_machine_ClosedLoop_t1
						              | TID_State_machine_ClosedLoop_t2
						              | TID_State_machine_ClosedLoop_t3
						              | TID_State_machine_ClosedLoop_t4
						              | TID_State_machine_ClosedLoop_t5
						              | TID_State_machine_ClosedLoop_t0
						              | TID_State_machine_ErrorMode_t0
						              | TID_State_machine_ErrorMode_t2
						              | TID_State_machine_ErrorMode_t4
						              | TID_State_machine_ErrorMode_t5
						              | TID_State_machine_ErrorMode_t1
						              | TID_State_machine_t0
						              | TID_State_machine_t1
						              | TID_State_machine_t2
						              | TID_State_machine_t3
						              | TID_State_machine_t4
						              | TID_State_machine_t5
						              | TID_State_machine_t6
						              | TID_State_machine_t8
						              | TID_State_machine_t11
						              | TID_State_machine_t7
						
						-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
						
						ITIDS = {
							TID_State_machine_Wait24Vpower_t1,	TID_State_machine_ClosedLoop_s2_t1,	TID_State_machine_ClosedLoop_s2_t2,	TID_State_machine_ClosedLoop_t1,	TID_State_machine_ClosedLoop_t2,	TID_State_machine_ClosedLoop_t3,	TID_State_machine_ClosedLoop_t4,	TID_State_machine_ClosedLoop_t5,	TID_State_machine_ErrorMode_t0,	TID_State_machine_ErrorMode_t4,	TID_State_machine_t0,	TID_State_machine_t1,	TID_State_machine_t2,	TID_State_machine_t3,	TID_State_machine_t4,	TID_State_machine_t6,	TID_State_machine_t8,	TID_State_machine_t11
						}
						
						int_int = {|
							currentState__.TID_State_machine_Wait24Vpower_t1,
							ext_setPoint__.TID_State_machine_Wait24Vpower_t1,
							ext_pow24VStatus__.TID_State_machine_Wait24Vpower_t1,
							int_overLimit__.TID_State_machine_Wait24Vpower_t1,
							int_pwmSignal__.TID_State_machine_Wait24Vpower_t1,
							int_underLimit__.TID_State_machine_Wait24Vpower_t1,
							int_DisableHV__.TID_State_machine_Wait24Vpower_t1,
							int_ActualHV__.TID_State_machine_Wait24Vpower_t1,
							internal__.TID_State_machine_Wait24Vpower_t1,
							currentState__.TID_State_machine_ClosedLoop_s2_t1,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							currentState__.TID_State_machine_ClosedLoop_s2_t2,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t2,
							currentState__.TID_State_machine_ClosedLoop_t1,
							ext_setPoint__.TID_State_machine_ClosedLoop_t1,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t1,
							int_overLimit__.TID_State_machine_ClosedLoop_t1,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t1,
							int_underLimit__.TID_State_machine_ClosedLoop_t1,
							int_DisableHV__.TID_State_machine_ClosedLoop_t1,
							int_ActualHV__.TID_State_machine_ClosedLoop_t1,
							internal__.TID_State_machine_ClosedLoop_t1,
							currentState__.TID_State_machine_ClosedLoop_t2,
							ext_setPoint__.TID_State_machine_ClosedLoop_t2,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t2,
							int_overLimit__.TID_State_machine_ClosedLoop_t2,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t2,
							int_underLimit__.TID_State_machine_ClosedLoop_t2,
							int_DisableHV__.TID_State_machine_ClosedLoop_t2,
							int_ActualHV__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_t2,
							currentState__.TID_State_machine_ClosedLoop_t3,
							ext_setPoint__.TID_State_machine_ClosedLoop_t3,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t3,
							int_overLimit__.TID_State_machine_ClosedLoop_t3,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t3,
							int_underLimit__.TID_State_machine_ClosedLoop_t3,
							int_DisableHV__.TID_State_machine_ClosedLoop_t3,
							int_ActualHV__.TID_State_machine_ClosedLoop_t3,
							internal__.TID_State_machine_ClosedLoop_t3,
							currentState__.TID_State_machine_ClosedLoop_t4,
							ext_setPoint__.TID_State_machine_ClosedLoop_t4,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t4,
							int_overLimit__.TID_State_machine_ClosedLoop_t4,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t4,
							int_underLimit__.TID_State_machine_ClosedLoop_t4,
							int_DisableHV__.TID_State_machine_ClosedLoop_t4,
							int_ActualHV__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_t4,
							currentState__.TID_State_machine_ClosedLoop_t5,
							ext_setPoint__.TID_State_machine_ClosedLoop_t5,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t5,
							int_overLimit__.TID_State_machine_ClosedLoop_t5,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t5,
							int_underLimit__.TID_State_machine_ClosedLoop_t5,
							int_DisableHV__.TID_State_machine_ClosedLoop_t5,
							int_ActualHV__.TID_State_machine_ClosedLoop_t5,
							internal__.TID_State_machine_ClosedLoop_t5,
							currentState__.TID_State_machine_ErrorMode_t0,
							ext_setPoint__.TID_State_machine_ErrorMode_t0,
							ext_pow24VStatus__.TID_State_machine_ErrorMode_t0,
							int_overLimit__.TID_State_machine_ErrorMode_t0,
							int_pwmSignal__.TID_State_machine_ErrorMode_t0,
							int_underLimit__.TID_State_machine_ErrorMode_t0,
							int_DisableHV__.TID_State_machine_ErrorMode_t0,
							int_ActualHV__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t0,
							currentState__.TID_State_machine_ErrorMode_t4,
							ext_setPoint__.TID_State_machine_ErrorMode_t4,
							ext_pow24VStatus__.TID_State_machine_ErrorMode_t4,
							int_overLimit__.TID_State_machine_ErrorMode_t4,
							int_pwmSignal__.TID_State_machine_ErrorMode_t4,
							int_underLimit__.TID_State_machine_ErrorMode_t4,
							int_DisableHV__.TID_State_machine_ErrorMode_t4,
							int_ActualHV__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t4,
							currentState__.TID_State_machine_t0,
							ext_setPoint__.TID_State_machine_t0,
							ext_pow24VStatus__.TID_State_machine_t0,
							int_overLimit__.TID_State_machine_t0,
							int_pwmSignal__.TID_State_machine_t0,
							int_underLimit__.TID_State_machine_t0,
							int_DisableHV__.TID_State_machine_t0,
							int_ActualHV__.TID_State_machine_t0,
							internal__.TID_State_machine_t0,
							currentState__.TID_State_machine_t1,
							ext_setPoint__.TID_State_machine_t1,
							ext_pow24VStatus__.TID_State_machine_t1,
							int_overLimit__.TID_State_machine_t1,
							int_pwmSignal__.TID_State_machine_t1,
							int_underLimit__.TID_State_machine_t1,
							int_DisableHV__.TID_State_machine_t1,
							int_ActualHV__.TID_State_machine_t1,
							internal__.TID_State_machine_t1,
							currentState__.TID_State_machine_t2,
							ext_setPoint__.TID_State_machine_t2,
							ext_pow24VStatus__.TID_State_machine_t2,
							int_overLimit__.TID_State_machine_t2,
							int_pwmSignal__.TID_State_machine_t2,
							int_underLimit__.TID_State_machine_t2,
							int_DisableHV__.TID_State_machine_t2,
							int_ActualHV__.TID_State_machine_t2,
							internal__.TID_State_machine_t2,
							currentState__.TID_State_machine_t3,
							ext_setPoint__.TID_State_machine_t3,
							ext_pow24VStatus__.TID_State_machine_t3,
							int_overLimit__.TID_State_machine_t3,
							int_pwmSignal__.TID_State_machine_t3,
							int_underLimit__.TID_State_machine_t3,
							int_DisableHV__.TID_State_machine_t3,
							int_ActualHV__.TID_State_machine_t3,
							internal__.TID_State_machine_t3,
							currentState__.TID_State_machine_t4,
							ext_setPoint__.TID_State_machine_t4,
							ext_pow24VStatus__.TID_State_machine_t4,
							int_overLimit__.TID_State_machine_t4,
							int_pwmSignal__.TID_State_machine_t4,
							int_underLimit__.TID_State_machine_t4,
							int_DisableHV__.TID_State_machine_t4,
							int_ActualHV__.TID_State_machine_t4,
							internal__.TID_State_machine_t4,
							currentState__.TID_State_machine_t6,
							ext_setPoint__.TID_State_machine_t6,
							ext_pow24VStatus__.TID_State_machine_t6,
							int_overLimit__.TID_State_machine_t6,
							int_pwmSignal__.TID_State_machine_t6,
							int_underLimit__.TID_State_machine_t6,
							int_DisableHV__.TID_State_machine_t6,
							int_ActualHV__.TID_State_machine_t6,
							internal__.TID_State_machine_t6,
							currentState__.TID_State_machine_t8,
							ext_setPoint__.TID_State_machine_t8,
							ext_pow24VStatus__.TID_State_machine_t8,
							int_overLimit__.TID_State_machine_t8,
							int_pwmSignal__.TID_State_machine_t8,
							int_underLimit__.TID_State_machine_t8,
							int_DisableHV__.TID_State_machine_t8,
							int_ActualHV__.TID_State_machine_t8,
							internal__.TID_State_machine_t8,
							currentState__.TID_State_machine_t11,
							ext_setPoint__.TID_State_machine_t11,
							ext_pow24VStatus__.TID_State_machine_t11,
							int_overLimit__.TID_State_machine_t11,
							int_pwmSignal__.TID_State_machine_t11,
							int_underLimit__.TID_State_machine_t11,
							int_DisableHV__.TID_State_machine_t11,
							int_ActualHV__.TID_State_machine_t11,
							internal__.TID_State_machine_t11
						|}
							
						
						internal_events = {|enter,entered,exit,exited|}
						shared_variable_events = {|
						|}
								
						
						-- declaring all states
						CS_State_machine_Ramping_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
							y____ <- {SID_State_machine_Ramping}
						|}
						
						
						State_machine_Ramping_triggers = {|
							int_DisableHV__.TID_State_machine_t8,
							internal__.TID_State_machine_t3,
							internal__.TID_State_machine_t7,
							int_DisableHV__.TID_State_machine_t11,
							internal__.TID_State_machine_t2,
							internal__.TID_State_machine_t4,
							internal__.TID_State_machine_t6,
							internal__.TID_State_machine_t1,
							internal__.TID_State_machine_t0
						|}
						
						State_State_machine_Ramping(id__) = let
							T_State_machine_t0(id__) = internal__!TID_State_machine_t0 ->  exit.SID_State_machine_Ramping.SID_State_machine_Ramping -> SKIP;
												SKIP;exited.SID_State_machine_Ramping.SID_State_machine_Ramping -> SKIP;
												enter!SID_State_machine_Ramping!SID_State_machine_Init -> entered!SID_State_machine_Ramping!SID_State_machine_Init ->
												State_State_machine_Ramping(id__)
							State_State_machine_Ramping_execute(id__,o____) = true&(currentState.out!State_Ramp -> SKIP); 
								entered!o____!SID_State_machine_Ramping ->
								(SKIP; STOP /\ (
									T_State_machine_t0(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0}) -> exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1,TID_State_machine_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (
											SKIP;
											exited!y____!SID_State_machine_Ramping -> SKIP);
											State_State_machine_Ramping(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Ramping})!SID_State_machine_Ramping -> (State_State_machine_Ramping_execute(id__,x____))
						
						CS_State_machine_Init_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
							y____ <- {SID_State_machine_Init}
						|}
						
						State_machine_Init_int_int = {|
						|}
							
						
						State_machine_Init_int_triggers = {|
							internal__.TID_State_machine_Init_t0
						|}
						
						State_State_machine_Init_si0_R(id__) = 
							State_State_machine_Init_si0(id__)
						 		[|diff(State_machine_Init_int_int,State_machine_Init_si0_triggers)|]
						 	SKIP
						 		
						State_State_machine_Init(id__) = (
							State_State_machine_Init_aux(id__)
								[|
									union(
										diff(int_int, State_machine_Init_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_State_machine_Init_si0}),
										  y____ <- {SID_State_machine_Init_si0}
									    |}
									)
								|]
							State_State_machine_Init_si0_R(id__)
						)
						
						State_machine_Init_triggers = {|
							int_DisableHV__.TID_State_machine_t8,
							internal__.TID_State_machine_t3,
							internal__.TID_State_machine_t7,
							internal__.TID_State_machine_Init_t0,
							int_DisableHV__.TID_State_machine_t11,
							internal__.TID_State_machine_t2,
							internal__.TID_State_machine_t4,
							internal__.TID_State_machine_t6,
							internal__.TID_State_machine_t1
						|}
						
						State_State_machine_Init_aux(id__) = let
							T_State_machine_t1(id__) = internal__!TID_State_machine_t1 ->  exit.SID_State_machine_Init.SID_State_machine_Init -> SKIP;
												exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_Init.SID_State_machine_Init -> SKIP;
												enter!SID_State_machine_Init!SID_State_machine_Wait24Vpower -> entered!SID_State_machine_Init!SID_State_machine_Wait24Vpower ->
												State_State_machine_Init_aux(id__)
							State_State_machine_Init_aux_execute(id__,o____) = true&(currentState.out!State_Init -> SKIP);true&CALL__disableHV(
										id__,
										false
									); 
							I_State_machine_Init_i0(id__);
								entered!o____!SID_State_machine_Init ->
								(SKIP; STOP /\ (
									T_State_machine_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Init_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (
											exit!SID_State_machine_Init?z____:{SID_State_machine_Init_si0} -> exited!SID_State_machine_Init!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Init -> SKIP);
											State_State_machine_Init_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Init})!SID_State_machine_Init -> (State_State_machine_Init_aux_execute(id__,x____))
						
						CS_State_machine_Init_si0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Init_si0},
							y____ <- {SID_State_machine_Init_si0}
						|}
						
						
						State_machine_Init_si0_triggers = {|
						|}
						
						State_State_machine_Init_si0(id__) = let
							State_State_machine_Init_si0_execute(id__,o____) = get_setPoint?setPoint -> true & (set_overLimit!overLimitF(Plus(setPoint, 2, core_real)) -> SKIP);get_setPoint?setPoint -> true & (set_underLimit!underLimitF(Minus(setPoint, 2, core_real)) -> SKIP);get_underLimit?underLimit -> true&(int_underLimit.out!underLimit -> SKIP);get_overLimit?overLimit -> true&(int_overLimit.out!overLimit -> SKIP); 
								entered!o____!SID_State_machine_Init_si0 ->
								(SKIP; STOP /\ (
									internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Init_si0 -> SKIP);
											State_State_machine_Init_si0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Init_si0})!SID_State_machine_Init_si0 -> (State_State_machine_Init_si0_execute(id__,x____))
						
						CS_State_machine_Wait24Vpower_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
							y____ <- {SID_State_machine_Wait24Vpower}
						|}
						
						State_machine_Wait24Vpower_int_int = {|
							currentState__.TID_State_machine_Wait24Vpower_t1,
							ext_setPoint__.TID_State_machine_Wait24Vpower_t1,
							ext_pow24VStatus__.TID_State_machine_Wait24Vpower_t1,
							int_overLimit__.TID_State_machine_Wait24Vpower_t1,
							int_pwmSignal__.TID_State_machine_Wait24Vpower_t1,
							int_underLimit__.TID_State_machine_Wait24Vpower_t1,
							int_DisableHV__.TID_State_machine_Wait24Vpower_t1,
							int_ActualHV__.TID_State_machine_Wait24Vpower_t1,
							internal__.TID_State_machine_Wait24Vpower_t1
						|}
							
						
						State_machine_Wait24Vpower_int_triggers = {|
							internal__.TID_State_machine_Wait24Vpower_t0,
							internal__.TID_State_machine_Wait24Vpower_t1
						|}
						
						State_State_machine_Wait24Vpower_si0_R(id__) = 
							State_State_machine_Wait24Vpower_si0(id__)
						 		[|diff(State_machine_Wait24Vpower_int_int,State_machine_Wait24Vpower_si0_triggers)|]
						 	SKIP
						 		
						State_State_machine_Wait24Vpower_s1_R(id__) = 
							State_State_machine_Wait24Vpower_s1(id__)
						 		[|diff(State_machine_Wait24Vpower_int_int,State_machine_Wait24Vpower_s1_triggers)|]
						 	SKIP
						 		
						State_State_machine_Wait24Vpower(id__) = (
							State_State_machine_Wait24Vpower_aux(id__)
								[|
									union(
										diff(int_int, State_machine_Wait24Vpower_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1}),
										  y____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1}
									    |}
									)
								|]
							(
								State_State_machine_Wait24Vpower_si0_R(id__)
									[|inter(CS_State_machine_Wait24Vpower_si0_sync,CS_State_machine_Wait24Vpower_s1_sync)|]
								State_State_machine_Wait24Vpower_s1_R(id__)
							)
						)
						
						State_machine_Wait24Vpower_triggers = {|
							int_DisableHV__.TID_State_machine_t8,
							internal__.TID_State_machine_t3,
							internal__.TID_State_machine_t7,
							internal__.TID_State_machine_Wait24Vpower_t1,
							internal__.TID_State_machine_Wait24Vpower_t0,
							int_DisableHV__.TID_State_machine_t11,
							internal__.TID_State_machine_t2,
							internal__.TID_State_machine_t4,
							internal__.TID_State_machine_t6
						|}
						
						State_State_machine_Wait24Vpower_aux(id__) = let
							T_State_machine_t2(id__) = internal__!TID_State_machine_t2 ->  exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												true & (set_res!false -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode ->
												State_State_machine_Wait24Vpower_aux(id__)
							T_State_machine_t3(id__) = internal__!TID_State_machine_t3 ->  exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												enter!SID_State_machine_Wait24Vpower!SID_State_machine_ClosedLoop -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ClosedLoop ->
												State_State_machine_Wait24Vpower_aux(id__)
							T_State_machine_t8(id__) = int_DisableHV__!TID_State_machine_t8.in ->  (exit.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_Wait24Vpower.SID_State_machine_Wait24Vpower -> SKIP;
												J_State_machine_j0(id__))
							J_State_machine_j0(id__) = (
										(internal__!TID_State_machine_t7 -> true&CALL__disableHV(
													id__,
													true
												);true & (set_res!false -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_ErrorMode ->
										State_State_machine_Wait24Vpower_aux(id__)
										)
										)
							State_State_machine_Wait24Vpower_aux_execute(id__,o____) = true&(currentState.out!State_Wait24Vpower -> SKIP);true&CALL__disableHV(
										id__,
										false
									); 
							I_State_machine_Wait24Vpower_i0(id__);
								entered!o____!SID_State_machine_Wait24Vpower ->
								(SKIP; STOP /\ (
									T_State_machine_t2(id__)[]
									T_State_machine_t3(id__)[]
									T_State_machine_t8(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_Wait24Vpower_t1,TID_State_machine_Wait24Vpower_t0,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (
											exit!SID_State_machine_Wait24Vpower?z____:{SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1} -> exited!SID_State_machine_Wait24Vpower!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower -> SKIP);
											State_State_machine_Wait24Vpower_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower})!SID_State_machine_Wait24Vpower -> (State_State_machine_Wait24Vpower_aux_execute(id__,x____))
						
						CS_State_machine_Wait24Vpower_si0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1},
							y____ <- {SID_State_machine_Wait24Vpower_si0}
						|}
						
						
						State_machine_Wait24Vpower_si0_triggers = {|
							internal__.TID_State_machine_Wait24Vpower_t1
						|}
						
						State_State_machine_Wait24Vpower_si0(id__) = let
							T_State_machine_Wait24Vpower_t1(id__) = internal__!TID_State_machine_Wait24Vpower_t1 ->  exit.SID_State_machine_Wait24Vpower_si0.SID_State_machine_Wait24Vpower_si0 -> SKIP;
												SKIP;exited.SID_State_machine_Wait24Vpower_si0.SID_State_machine_Wait24Vpower_si0 -> SKIP;
												enter!SID_State_machine_Wait24Vpower_si0!SID_State_machine_Wait24Vpower_s1 -> entered!SID_State_machine_Wait24Vpower_si0!SID_State_machine_Wait24Vpower_s1 ->
												State_State_machine_Wait24Vpower_si0(id__)
							State_State_machine_Wait24Vpower_si0_execute(id__,o____) = true&CALL__supplyVoltCheck(
										id__
									); 
								entered!o____!SID_State_machine_Wait24Vpower_si0 ->
								(SKIP; STOP /\ (
									T_State_machine_Wait24Vpower_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_Wait24Vpower_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_si0 -> SKIP);
											State_State_machine_Wait24Vpower_si0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower_si0})!SID_State_machine_Wait24Vpower_si0 -> (State_State_machine_Wait24Vpower_si0_execute(id__,x____))
						
						CS_State_machine_Wait24Vpower_s1_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Wait24Vpower_si0,SID_State_machine_Wait24Vpower_s1},
							y____ <- {SID_State_machine_Wait24Vpower_s1}
						|}
						
						
						State_machine_Wait24Vpower_s1_triggers = {|
						|}
						
						State_State_machine_Wait24Vpower_s1(id__) = let
							State_State_machine_Wait24Vpower_s1_execute(id__,o____) = true&CALL__disableHV(
										id__,
										true
									); 
								entered!o____!SID_State_machine_Wait24Vpower_s1 ->
								(SKIP; STOP /\ (
									internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_Wait24Vpower_s1 -> SKIP);
											State_State_machine_Wait24Vpower_s1(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_Wait24Vpower_s1})!SID_State_machine_Wait24Vpower_s1 -> (State_State_machine_Wait24Vpower_s1_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
							y____ <- {SID_State_machine_ClosedLoop}
						|}
						
						State_machine_ClosedLoop_int_int = {|
							currentState__.TID_State_machine_ClosedLoop_s2_t1,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							currentState__.TID_State_machine_ClosedLoop_s2_t2,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t2,
							currentState__.TID_State_machine_ClosedLoop_t1,
							ext_setPoint__.TID_State_machine_ClosedLoop_t1,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t1,
							int_overLimit__.TID_State_machine_ClosedLoop_t1,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t1,
							int_underLimit__.TID_State_machine_ClosedLoop_t1,
							int_DisableHV__.TID_State_machine_ClosedLoop_t1,
							int_ActualHV__.TID_State_machine_ClosedLoop_t1,
							internal__.TID_State_machine_ClosedLoop_t1,
							currentState__.TID_State_machine_ClosedLoop_t2,
							ext_setPoint__.TID_State_machine_ClosedLoop_t2,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t2,
							int_overLimit__.TID_State_machine_ClosedLoop_t2,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t2,
							int_underLimit__.TID_State_machine_ClosedLoop_t2,
							int_DisableHV__.TID_State_machine_ClosedLoop_t2,
							int_ActualHV__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_t2,
							currentState__.TID_State_machine_ClosedLoop_t3,
							ext_setPoint__.TID_State_machine_ClosedLoop_t3,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t3,
							int_overLimit__.TID_State_machine_ClosedLoop_t3,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t3,
							int_underLimit__.TID_State_machine_ClosedLoop_t3,
							int_DisableHV__.TID_State_machine_ClosedLoop_t3,
							int_ActualHV__.TID_State_machine_ClosedLoop_t3,
							internal__.TID_State_machine_ClosedLoop_t3,
							currentState__.TID_State_machine_ClosedLoop_t4,
							ext_setPoint__.TID_State_machine_ClosedLoop_t4,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t4,
							int_overLimit__.TID_State_machine_ClosedLoop_t4,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t4,
							int_underLimit__.TID_State_machine_ClosedLoop_t4,
							int_DisableHV__.TID_State_machine_ClosedLoop_t4,
							int_ActualHV__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_t4,
							currentState__.TID_State_machine_ClosedLoop_t5,
							ext_setPoint__.TID_State_machine_ClosedLoop_t5,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_t5,
							int_overLimit__.TID_State_machine_ClosedLoop_t5,
							int_pwmSignal__.TID_State_machine_ClosedLoop_t5,
							int_underLimit__.TID_State_machine_ClosedLoop_t5,
							int_DisableHV__.TID_State_machine_ClosedLoop_t5,
							int_ActualHV__.TID_State_machine_ClosedLoop_t5,
							internal__.TID_State_machine_ClosedLoop_t5
						|}
							
						
						State_machine_ClosedLoop_int_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t0,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_ClosedLoop_t1,
							internal__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_t3,
							internal__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_t5,
							internal__.TID_State_machine_ClosedLoop_t0
						|}
						
						State_State_machine_ClosedLoop_s1_R(id__) = 
							State_State_machine_ClosedLoop_s1(id__)
						 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s1_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop_s2_R(id__) = 
							State_State_machine_ClosedLoop_s2(id__)
						 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s2_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop_s3_R(id__) = 
							State_State_machine_ClosedLoop_s3(id__)
						 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s3_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop_s4_R(id__) = 
							State_State_machine_ClosedLoop_s4(id__)
						 		[|diff(State_machine_ClosedLoop_int_int,State_machine_ClosedLoop_s4_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop(id__) = (
							State_State_machine_ClosedLoop_aux(id__)
								[|
									union(
										diff(int_int, State_machine_ClosedLoop_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4}),
										  y____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4}
									    |}
									)
								|]
							(
								State_State_machine_ClosedLoop_s1_R(id__)
									[|inter(CS_State_machine_ClosedLoop_s1_sync,union(union(CS_State_machine_ClosedLoop_s2_sync,CS_State_machine_ClosedLoop_s3_sync),CS_State_machine_ClosedLoop_s4_sync))|]
								(
									State_State_machine_ClosedLoop_s2_R(id__)
										[|inter(CS_State_machine_ClosedLoop_s2_sync,union(CS_State_machine_ClosedLoop_s3_sync,CS_State_machine_ClosedLoop_s4_sync))|]
									(
										State_State_machine_ClosedLoop_s3_R(id__)
											[|inter(CS_State_machine_ClosedLoop_s3_sync,CS_State_machine_ClosedLoop_s4_sync)|]
										State_State_machine_ClosedLoop_s4_R(id__)
									)
								)
							)
						)
						
						State_machine_ClosedLoop_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t0,
							internal__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_t7,
							int_DisableHV__.TID_State_machine_t11,
							internal__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							int_DisableHV__.TID_State_machine_t8,
							internal__.TID_State_machine_ClosedLoop_t3,
							internal__.TID_State_machine_t3,
							internal__.TID_State_machine_ClosedLoop_t1,
							internal__.TID_State_machine_t4,
							internal__.TID_State_machine_t2,
							internal__.TID_State_machine_ClosedLoop_t0,
							internal__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_t6,
							internal__.TID_State_machine_ClosedLoop_t5
						|}
						
						State_State_machine_ClosedLoop_aux(id__) = let
							T_State_machine_t4(id__) = internal__!TID_State_machine_t4 ->  exit.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
												true & (set_res!false -> SKIP);enter!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode ->
												State_State_machine_ClosedLoop_aux(id__)
							T_State_machine_t11(id__) = int_DisableHV__!TID_State_machine_t11.in ->  (exit.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
												exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop.SID_State_machine_ClosedLoop -> SKIP;
												J_State_machine_j0(id__))
							J_State_machine_j0(id__) = (
										(internal__!TID_State_machine_t7 -> true&CALL__disableHV(
													id__,
													true
												);true & (set_res!false -> SKIP);enter!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ErrorMode ->
										State_State_machine_ClosedLoop_aux(id__)
										)
										)
							State_State_machine_ClosedLoop_aux_execute(id__,o____) = true&(currentState.out!State_ClosedLoop -> SKIP); 
							I_State_machine_ClosedLoop_i0(id__);
								entered!o____!SID_State_machine_ClosedLoop ->
								(SKIP; STOP /\ (
									T_State_machine_t4(id__)[]
									T_State_machine_t11(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_t8,TID_State_machine_ClosedLoop_t3,TID_State_machine_t3,TID_State_machine_ClosedLoop_t1,TID_State_machine_t4,TID_State_machine_t2,TID_State_machine_ClosedLoop_t0,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_t6,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (
											exit!SID_State_machine_ClosedLoop?z____:{SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4} -> exited!SID_State_machine_ClosedLoop!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop -> SKIP);
											State_State_machine_ClosedLoop_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop})!SID_State_machine_ClosedLoop -> (State_State_machine_ClosedLoop_aux_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s1_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
							y____ <- {SID_State_machine_ClosedLoop_s1}
						|}
						
						
						State_machine_ClosedLoop_s1_triggers = {|
						|}
						
						State_State_machine_ClosedLoop_s1(id__) = let
							State_State_machine_ClosedLoop_s1_execute(id__,o____) = true & (set_lim!false -> SKIP);true&CALL__disableHV(
										id__,
										true
									); 
								entered!o____!SID_State_machine_ClosedLoop_s1 ->
								(SKIP; STOP /\ (
									internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s1 -> SKIP);
											State_State_machine_ClosedLoop_s1(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s1})!SID_State_machine_ClosedLoop_s1 -> (State_State_machine_ClosedLoop_s1_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s2_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
							y____ <- {SID_State_machine_ClosedLoop_s2}
						|}
						
						State_machine_ClosedLoop_s2_int_int = {|
							currentState__.TID_State_machine_ClosedLoop_s2_t1,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t1,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t1,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t1,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t1,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t1,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							currentState__.TID_State_machine_ClosedLoop_s2_t2,
							ext_setPoint__.TID_State_machine_ClosedLoop_s2_t2,
							ext_pow24VStatus__.TID_State_machine_ClosedLoop_s2_t2,
							int_overLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_pwmSignal__.TID_State_machine_ClosedLoop_s2_t2,
							int_underLimit__.TID_State_machine_ClosedLoop_s2_t2,
							int_DisableHV__.TID_State_machine_ClosedLoop_s2_t2,
							int_ActualHV__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t2
						|}
							
						
						State_machine_ClosedLoop_s2_int_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t0,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_ClosedLoop_s2_t2
						|}
						
						State_State_machine_ClosedLoop_s2_s0_R(id__) = 
							State_State_machine_ClosedLoop_s2_s0(id__)
						 		[|diff(State_machine_ClosedLoop_s2_int_int,State_machine_ClosedLoop_s2_s0_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop_s2_s1_R(id__) = 
							State_State_machine_ClosedLoop_s2_s1(id__)
						 		[|diff(State_machine_ClosedLoop_s2_int_int,State_machine_ClosedLoop_s2_s1_triggers)|]
						 	SKIP
						 		
						State_State_machine_ClosedLoop_s2(id__) = (
							State_State_machine_ClosedLoop_s2_aux(id__)
								[|
									union(
										diff(int_int, State_machine_ClosedLoop_s2_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1}),
										  y____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1}
									    |}
									)
								|]
							(
								State_State_machine_ClosedLoop_s2_s0_R(id__)
									[|inter(CS_State_machine_ClosedLoop_s2_s0_sync,CS_State_machine_ClosedLoop_s2_s1_sync)|]
								State_State_machine_ClosedLoop_s2_s1_R(id__)
							)
						)
						
						State_machine_ClosedLoop_s2_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t0,
							internal__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t2
						|}
						
						State_State_machine_ClosedLoop_s2_aux(id__) = let
							T_State_machine_ClosedLoop_t2(id__) = internal__!TID_State_machine_ClosedLoop_t2 ->  exit.SID_State_machine_ClosedLoop_s2.SID_State_machine_ClosedLoop_s2 -> SKIP;
												exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s2.SID_State_machine_ClosedLoop_s2 -> SKIP;
												enter!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s1 ->
												State_State_machine_ClosedLoop_s2_aux(id__)
							State_State_machine_ClosedLoop_s2_aux_execute(id__,o____) = SKIP; 
							I_State_machine_ClosedLoop_s2_i0(id__);
								entered!o____!SID_State_machine_ClosedLoop_s2 ->
								(SKIP; STOP /\ (
									T_State_machine_ClosedLoop_t2(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t0,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (
											exit!SID_State_machine_ClosedLoop_s2?z____:{SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1} -> exited!SID_State_machine_ClosedLoop_s2!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2 -> SKIP);
											State_State_machine_ClosedLoop_s2_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2})!SID_State_machine_ClosedLoop_s2 -> (State_State_machine_ClosedLoop_s2_aux_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s2_s0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1},
							y____ <- {SID_State_machine_ClosedLoop_s2_s0}
						|}
						
						
						State_machine_ClosedLoop_s2_s0_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_s2_t2
						|}
						
						State_State_machine_ClosedLoop_s2_s0(id__) = let
							T_State_machine_ClosedLoop_s2_t1(id__) = internal__!TID_State_machine_ClosedLoop_s2_t1 ->  exit.SID_State_machine_ClosedLoop_s2_s0.SID_State_machine_ClosedLoop_s2_s0 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s2_s0.SID_State_machine_ClosedLoop_s2_s0 -> SKIP;
												enter!SID_State_machine_ClosedLoop_s2_s0!SID_State_machine_ClosedLoop_s2_s1 -> entered!SID_State_machine_ClosedLoop_s2_s0!SID_State_machine_ClosedLoop_s2_s1 ->
												State_State_machine_ClosedLoop_s2_s0(id__)
							State_State_machine_ClosedLoop_s2_s0_execute(id__,o____) = true&CALL__checkLimits(
										id__
									); 
								entered!o____!SID_State_machine_ClosedLoop_s2_s0 ->
								(SKIP; STOP /\ (
									T_State_machine_ClosedLoop_s2_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t1,TID_State_machine_ClosedLoop_s2_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s0 -> SKIP);
											State_State_machine_ClosedLoop_s2_s0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s0})!SID_State_machine_ClosedLoop_s2_s0 -> (State_State_machine_ClosedLoop_s2_s0_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s2_s1_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s2_s0,SID_State_machine_ClosedLoop_s2_s1},
							y____ <- {SID_State_machine_ClosedLoop_s2_s1}
						|}
						
						
						State_machine_ClosedLoop_s2_s1_triggers = {|
							internal__.TID_State_machine_ClosedLoop_s2_t5,
							internal__.TID_State_machine_ClosedLoop_s2_t2,
							internal__.TID_State_machine_ClosedLoop_s2_t1
						|}
						
						State_State_machine_ClosedLoop_s2_s1(id__) = let
							T_State_machine_ClosedLoop_s2_t2(id__) = internal__!TID_State_machine_ClosedLoop_s2_t2 ->  exit.SID_State_machine_ClosedLoop_s2_s1.SID_State_machine_ClosedLoop_s2_s1 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s2_s1.SID_State_machine_ClosedLoop_s2_s1 -> SKIP;
												get_setPoint?setPoint -> true & (set_ActualHV!setPoint -> SKIP);J_State_machine_ClosedLoop_s2_j0(id__)
							J_State_machine_ClosedLoop_s2_j0(id__) = (
										(internal__!TID_State_machine_ClosedLoop_s2_t5 -> get_ActualHV?ActualHV -> true&(int_ActualHV.out!ActualHV -> SKIP);enter!SID_State_machine_ClosedLoop_s2_s1!SID_State_machine_ClosedLoop_s2_s0 -> entered!SID_State_machine_ClosedLoop_s2_s1!SID_State_machine_ClosedLoop_s2_s0 ->
										State_State_machine_ClosedLoop_s2_s1(id__)
										)
										)
							State_State_machine_ClosedLoop_s2_s1_execute(id__,o____) = true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP); 
								entered!o____!SID_State_machine_ClosedLoop_s2_s1 ->
								(SKIP; STOP /\ (
									T_State_machine_ClosedLoop_s2_t2(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_s2_t5,TID_State_machine_ClosedLoop_s2_t2,TID_State_machine_ClosedLoop_s2_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s2_s1 -> SKIP);
											State_State_machine_ClosedLoop_s2_s1(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s2_s1})!SID_State_machine_ClosedLoop_s2_s1 -> (State_State_machine_ClosedLoop_s2_s1_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s3_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
							y____ <- {SID_State_machine_ClosedLoop_s3}
						|}
						
						
						State_machine_ClosedLoop_s3_triggers = {|
							internal__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_t5
						|}
						
						State_State_machine_ClosedLoop_s3(id__) = let
							T_State_machine_ClosedLoop_t4(id__) = internal__!TID_State_machine_ClosedLoop_t4 ->  exit.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
												enter!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s2 -> entered!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s2 ->
												State_State_machine_ClosedLoop_s3(id__)
							T_State_machine_ClosedLoop_t5(id__) = internal__!TID_State_machine_ClosedLoop_t5 ->  exit.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s3.SID_State_machine_ClosedLoop_s3 -> SKIP;
												enter!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s3!SID_State_machine_ClosedLoop_s1 ->
												State_State_machine_ClosedLoop_s3(id__)
							State_State_machine_ClosedLoop_s3_execute(id__,o____) = true&CALL__checkLimits(
										id__
									); 
								entered!o____!SID_State_machine_ClosedLoop_s3 ->
								(SKIP; STOP /\ (
									T_State_machine_ClosedLoop_t4(id__)[]
									T_State_machine_ClosedLoop_t5(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s3 -> SKIP);
											State_State_machine_ClosedLoop_s3(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s3})!SID_State_machine_ClosedLoop_s3 -> (State_State_machine_ClosedLoop_s3_execute(id__,x____))
						
						CS_State_machine_ClosedLoop_s4_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ClosedLoop_s1,SID_State_machine_ClosedLoop_s2,SID_State_machine_ClosedLoop_s3,SID_State_machine_ClosedLoop_s4},
							y____ <- {SID_State_machine_ClosedLoop_s4}
						|}
						
						
						State_machine_ClosedLoop_s4_triggers = {|
							internal__.TID_State_machine_ClosedLoop_t3,
							internal__.TID_State_machine_ClosedLoop_t2,
							internal__.TID_State_machine_ClosedLoop_t1,
							internal__.TID_State_machine_ClosedLoop_t4,
							internal__.TID_State_machine_ClosedLoop_t5
						|}
						
						State_State_machine_ClosedLoop_s4(id__) = let
							T_State_machine_ClosedLoop_t1(id__) = internal__!TID_State_machine_ClosedLoop_t1 ->  exit.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
												enter!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s1 -> entered!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s1 ->
												State_State_machine_ClosedLoop_s4(id__)
							T_State_machine_ClosedLoop_t3(id__) = internal__!TID_State_machine_ClosedLoop_t3 ->  exit.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
												SKIP;exited.SID_State_machine_ClosedLoop_s4.SID_State_machine_ClosedLoop_s4 -> SKIP;
												true&(int_pwmSignal.out!Power_On -> SKIP);enter!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s3 -> entered!SID_State_machine_ClosedLoop_s4!SID_State_machine_ClosedLoop_s3 ->
												State_State_machine_ClosedLoop_s4(id__)
							State_State_machine_ClosedLoop_s4_execute(id__,o____) = true&CALL__supplyVoltCheck(
										id__
									); 
								entered!o____!SID_State_machine_ClosedLoop_s4 ->
								(SKIP; STOP /\ (
									T_State_machine_ClosedLoop_t1(id__)[]
									T_State_machine_ClosedLoop_t3(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5}) -> exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ClosedLoop_t3,TID_State_machine_ClosedLoop_t2,TID_State_machine_ClosedLoop_t1,TID_State_machine_ClosedLoop_t4,TID_State_machine_ClosedLoop_t5})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (
											SKIP;
											exited!y____!SID_State_machine_ClosedLoop_s4 -> SKIP);
											State_State_machine_ClosedLoop_s4(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ClosedLoop_s4})!SID_State_machine_ClosedLoop_s4 -> (State_State_machine_ClosedLoop_s4_execute(id__,x____))
						
						CS_State_machine_ErrorMode_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode},
							y____ <- {SID_State_machine_ErrorMode}
						|}
						
						State_machine_ErrorMode_int_int = {|
							currentState__.TID_State_machine_ErrorMode_t0,
							ext_setPoint__.TID_State_machine_ErrorMode_t0,
							ext_pow24VStatus__.TID_State_machine_ErrorMode_t0,
							int_overLimit__.TID_State_machine_ErrorMode_t0,
							int_pwmSignal__.TID_State_machine_ErrorMode_t0,
							int_underLimit__.TID_State_machine_ErrorMode_t0,
							int_DisableHV__.TID_State_machine_ErrorMode_t0,
							int_ActualHV__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t0,
							currentState__.TID_State_machine_ErrorMode_t4,
							ext_setPoint__.TID_State_machine_ErrorMode_t4,
							ext_pow24VStatus__.TID_State_machine_ErrorMode_t4,
							int_overLimit__.TID_State_machine_ErrorMode_t4,
							int_pwmSignal__.TID_State_machine_ErrorMode_t4,
							int_underLimit__.TID_State_machine_ErrorMode_t4,
							int_DisableHV__.TID_State_machine_ErrorMode_t4,
							int_ActualHV__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t4
						|}
							
						
						State_machine_ErrorMode_int_triggers = {|
							internal__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t2,
							internal__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t5,
							internal__.TID_State_machine_ErrorMode_t1
						|}
						
						State_State_machine_ErrorMode_f0_R(id__) = 
							State_State_machine_ErrorMode_f0(id__)
						 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_f0_triggers)|]
						 	SKIP
						 		
						State_State_machine_ErrorMode_s1_R(id__) = 
							State_State_machine_ErrorMode_s1(id__)
						 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_s1_triggers)|]
						 	SKIP
						 		
						State_State_machine_ErrorMode_s2_R(id__) = 
							State_State_machine_ErrorMode_s2(id__)
						 		[|diff(State_machine_ErrorMode_int_int,State_machine_ErrorMode_s2_triggers)|]
						 	SKIP
						 		
						State_State_machine_ErrorMode(id__) = (
							State_State_machine_ErrorMode_aux(id__)
								[|
									union(
										diff(int_int, State_machine_ErrorMode_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2}),
										  y____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2}
									    |}
									)
								|]
							(
								State_State_machine_ErrorMode_f0_R(id__)
									[|inter(CS_State_machine_ErrorMode_f0_sync,union(CS_State_machine_ErrorMode_s1_sync,CS_State_machine_ErrorMode_s2_sync))|]
								(
									State_State_machine_ErrorMode_s1_R(id__)
										[|inter(CS_State_machine_ErrorMode_s1_sync,CS_State_machine_ErrorMode_s2_sync)|]
									State_State_machine_ErrorMode_s2_R(id__)
								)
							)
						)
						
						State_machine_ErrorMode_triggers = {|
							int_DisableHV__.TID_State_machine_t8,
							internal__.TID_State_machine_t3,
							internal__.TID_State_machine_t7,
							int_DisableHV__.TID_State_machine_t11,
							internal__.TID_State_machine_t2,
							internal__.TID_State_machine_t4,
							internal__.TID_State_machine_t6,
							internal__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t5,
							internal__.TID_State_machine_ErrorMode_t1,
							internal__.TID_State_machine_ErrorMode_t2
						|}
						
						State_State_machine_ErrorMode_aux(id__) = let
							T_State_machine_t6(id__) = internal__!TID_State_machine_t6 ->  exit.SID_State_machine_ErrorMode.SID_State_machine_ErrorMode -> SKIP;
												exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
														SKIP;
												SKIP;exited.SID_State_machine_ErrorMode.SID_State_machine_ErrorMode -> SKIP;
												enter!SID_State_machine_ErrorMode!SID_State_machine_Wait24Vpower -> entered!SID_State_machine_ErrorMode!SID_State_machine_Wait24Vpower ->
												State_State_machine_ErrorMode_aux(id__)
							State_State_machine_ErrorMode_aux_execute(id__,o____) = true&(currentState.out!State_ErrorMode -> SKIP);true&CALL__disableHV(
										id__,
										false
									); 
							I_State_machine_ErrorMode_i0(id__);
								entered!o____!SID_State_machine_ErrorMode ->
								(SKIP; STOP /\ (
									T_State_machine_t6(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_t8,TID_State_machine_t3,TID_State_machine_t7,TID_State_machine_t11,TID_State_machine_t2,TID_State_machine_t4,TID_State_machine_t6,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1,TID_State_machine_ErrorMode_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (
											exit!SID_State_machine_ErrorMode?z____:{SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2} -> exited!SID_State_machine_ErrorMode!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_State_machine_ErrorMode -> SKIP);
											State_State_machine_ErrorMode_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ErrorMode})!SID_State_machine_ErrorMode -> (State_State_machine_ErrorMode_aux_execute(id__,x____))
						
						CS_State_machine_ErrorMode_f0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
							y____ <- {SID_State_machine_ErrorMode_f0}
						|}
						
						
						State_machine_ErrorMode_f0_triggers = {|
						|}
						
						State_State_machine_ErrorMode_f0(id__) = let
							State_State_machine_ErrorMode_f0_execute(id__,o____) = SKIP; 
								entered!o____!SID_State_machine_ErrorMode_f0 ->
								(SKIP; STOP /\ (
									internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_f0 -> SKIP);
											State_State_machine_ErrorMode_f0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_f0})!SID_State_machine_ErrorMode_f0 -> (State_State_machine_ErrorMode_f0_execute(id__,x____))
						
						CS_State_machine_ErrorMode_s1_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
							y____ <- {SID_State_machine_ErrorMode_s1}
						|}
						
						
						State_machine_ErrorMode_s1_triggers = {|
							internal__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t5,
							internal__.TID_State_machine_ErrorMode_t1
						|}
						
						State_State_machine_ErrorMode_s1(id__) = let
							T_State_machine_ErrorMode_t0(id__) = internal__!TID_State_machine_ErrorMode_t0 ->  exit.SID_State_machine_ErrorMode_s1.SID_State_machine_ErrorMode_s1 -> SKIP;
												SKIP;exited.SID_State_machine_ErrorMode_s1.SID_State_machine_ErrorMode_s1 -> SKIP;
												get_setPoint?setPoint -> true&(ext_setPoint.out!setPoint -> SKIP);enter!SID_State_machine_ErrorMode_s1!SID_State_machine_ErrorMode_s2 -> entered!SID_State_machine_ErrorMode_s1!SID_State_machine_ErrorMode_s2 ->
												State_State_machine_ErrorMode_s1(id__)
							State_State_machine_ErrorMode_s1_execute(id__,o____) = true & (set_setPoint!0 -> SKIP); 
								entered!o____!SID_State_machine_ErrorMode_s1 ->
								(SKIP; STOP /\ (
									T_State_machine_ErrorMode_t0(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s1 -> SKIP);
											State_State_machine_ErrorMode_s1(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_s1})!SID_State_machine_ErrorMode_s1 -> (State_State_machine_ErrorMode_s1_execute(id__,x____))
						
						CS_State_machine_ErrorMode_s2_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_State_machine_ErrorMode_f0,SID_State_machine_ErrorMode_s1,SID_State_machine_ErrorMode_s2},
							y____ <- {SID_State_machine_ErrorMode_s2}
						|}
						
						
						State_machine_ErrorMode_s2_triggers = {|
							internal__.TID_State_machine_ErrorMode_t4,
							internal__.TID_State_machine_ErrorMode_t5,
							internal__.TID_State_machine_ErrorMode_t0,
							internal__.TID_State_machine_ErrorMode_t1
						|}
						
						State_State_machine_ErrorMode_s2(id__) = let
							T_State_machine_ErrorMode_t4(id__) = internal__!TID_State_machine_ErrorMode_t4 ->  exit.SID_State_machine_ErrorMode_s2.SID_State_machine_ErrorMode_s2 -> SKIP;
												SKIP;exited.SID_State_machine_ErrorMode_s2.SID_State_machine_ErrorMode_s2 -> SKIP;
												get_ActualHV?ActualHV -> true&(int_ActualHV.out!ActualHV -> SKIP);J_State_machine_ErrorMode_j0(id__)
							J_State_machine_ErrorMode_j0(id__) = (
										(internal__!TID_State_machine_ErrorMode_t5 -> true & (set_errorAck!true -> SKIP);enter!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_f0 -> entered!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_f0 ->
										State_State_machine_ErrorMode_s2(id__)
										)[]
										(internal__!TID_State_machine_ErrorMode_t1 -> enter!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_s1 -> entered!SID_State_machine_ErrorMode_s2!SID_State_machine_ErrorMode_s1 ->
										State_State_machine_ErrorMode_s2(id__)
										)
										)
							State_State_machine_ErrorMode_s2_execute(id__,o____) = true & (set_ActualHV!0 -> SKIP); 
								entered!o____!SID_State_machine_ErrorMode_s2 ->
								(SKIP; STOP /\ (
									T_State_machine_ErrorMode_t4(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1}) -> exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] currentState__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_State_machine_ErrorMode_t4,TID_State_machine_ErrorMode_t5,TID_State_machine_ErrorMode_t0,TID_State_machine_ErrorMode_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (
											SKIP;
											exited!y____!SID_State_machine_ErrorMode_s2 -> SKIP);
											State_State_machine_ErrorMode_s2(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_State_machine_ErrorMode_s2})!SID_State_machine_ErrorMode_s2 -> (State_State_machine_ErrorMode_s2_execute(id__,x____))
						
						
						I_State_machine_Init_i0(id__) = let
							T_State_machine_Init_t0(id__) = internal__!TID_State_machine_Init_t0 -> true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP);enter!SID_State_machine_Init!SID_State_machine_Init_si0 -> entered!SID_State_machine_Init!SID_State_machine_Init_si0 ->
							SKIP
						within
							T_State_machine_Init_t0(id__)
						
						I_State_machine_Wait24Vpower_i0(id__) = let
							T_State_machine_Wait24Vpower_t0(id__) = internal__!TID_State_machine_Wait24Vpower_t0 -> true&(ext_setPoint.in?setPoint -> set_setPoint!setPoint -> SKIP);enter!SID_State_machine_Wait24Vpower!SID_State_machine_Wait24Vpower_si0 -> entered!SID_State_machine_Wait24Vpower!SID_State_machine_Wait24Vpower_si0 ->
							SKIP
						within
							T_State_machine_Wait24Vpower_t0(id__)
						
						I_State_machine_ClosedLoop_i0(id__) = let
							T_State_machine_ClosedLoop_t0(id__) = internal__!TID_State_machine_ClosedLoop_t0 -> enter!SID_State_machine_ClosedLoop!SID_State_machine_ClosedLoop_s4 -> entered!SID_State_machine_ClosedLoop!SID_State_machine_ClosedLoop_s4 ->
							SKIP
						within
							T_State_machine_ClosedLoop_t0(id__)
						
						I_State_machine_ClosedLoop_s2_i0(id__) = let
							T_State_machine_ClosedLoop_s2_t0(id__) = internal__!TID_State_machine_ClosedLoop_s2_t0 -> enter!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s2_s1 -> entered!SID_State_machine_ClosedLoop_s2!SID_State_machine_ClosedLoop_s2_s1 ->
							SKIP
						within
							T_State_machine_ClosedLoop_s2_t0(id__)
						
						I_State_machine_ErrorMode_i0(id__) = let
							T_State_machine_ErrorMode_t2(id__) = internal__!TID_State_machine_ErrorMode_t2 -> true & (set_errorAck!false -> SKIP);enter!SID_State_machine_ErrorMode!SID_State_machine_ErrorMode_s1 -> entered!SID_State_machine_ErrorMode!SID_State_machine_ErrorMode_s1 ->
							SKIP
						within
							T_State_machine_ErrorMode_t2(id__)
						
						I_State_machine_i0(id__) = let
							T_State_machine_t5(id__) = internal__!TID_State_machine_t5 -> enter!SID_State_machine!SID_State_machine_Ramping -> entered!SID_State_machine!SID_State_machine_Ramping ->
							SKIP
						within
							T_State_machine_t5(id__)
						
						
						State_State_machine_Ramping_R(id__) = 
							State_State_machine_Ramping(id__)
								[|diff(int_int,State_machine_Ramping_triggers)|]
							SKIP
								 		
						State_State_machine_Init_R(id__) = 
							State_State_machine_Init(id__)
								[|diff(int_int,State_machine_Init_triggers)|]
							SKIP
								 		
						State_State_machine_Wait24Vpower_R(id__) = 
							State_State_machine_Wait24Vpower(id__)
								[|diff(int_int,State_machine_Wait24Vpower_triggers)|]
							SKIP
								 		
						State_State_machine_ClosedLoop_R(id__) = 
							State_State_machine_ClosedLoop(id__)
								[|diff(int_int,State_machine_ClosedLoop_triggers)|]
							SKIP
								 		
						State_State_machine_ErrorMode_R(id__) = 
							State_State_machine_ErrorMode(id__)
								[|diff(int_int,State_machine_ErrorMode_triggers)|]
							SKIP
								 		
							
						STM(id__) = (
							I_State_machine_i0(id__)
								[|
									{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
										x____ <- diff(SIDS,{SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode}),
										y____ <- {SID_State_machine_Ramping,SID_State_machine_Init,SID_State_machine_Wait24Vpower,SID_State_machine_ClosedLoop,SID_State_machine_ErrorMode}
								|}|]
							(
								State_State_machine_Ramping_R(id__)
									[|inter(CS_State_machine_Ramping_sync,union(union(union(CS_State_machine_Init_sync,CS_State_machine_Wait24Vpower_sync),CS_State_machine_ClosedLoop_sync),CS_State_machine_ErrorMode_sync))|]
								(
									State_State_machine_Init_R(id__)
										[|inter(CS_State_machine_Init_sync,union(union(CS_State_machine_Wait24Vpower_sync,CS_State_machine_ClosedLoop_sync),CS_State_machine_ErrorMode_sync))|]
									(
										State_State_machine_Wait24Vpower_R(id__)
											[|inter(CS_State_machine_Wait24Vpower_sync,union(CS_State_machine_ClosedLoop_sync,CS_State_machine_ErrorMode_sync))|]
										(
											State_State_machine_ClosedLoop_R(id__)
												[|inter(CS_State_machine_ClosedLoop_sync,CS_State_machine_ErrorMode_sync)|]
											State_State_machine_ErrorMode_R(id__)
										)
									)
								)
							)
						)
						
						-- optimized memory process
						channel getV_power: Power
						channel getV_setPoint: core_real
						channel getV_res: core_boolean
						channel getV_errorFlag: core_boolean
						channel getV_lim: core_boolean
						channel getV_supplyLim: core_boolean
						channel getV_ActualHV: core_real
						channel getV_errorAck: core_boolean
						channel getV_overLimit: core_real
						channel getV_underLimit: core_real
						
						-- individual memory processes
						Memory_power(x__) = ( 
							get_power!x__ -> Memory_power(x__)
							[]
							getV_power!x__ -> Memory_power(x__)
							[]
							set_power?x__ -> Memory_power(x__)
						)
						Memory_setPoint(x__) = ( 
							get_setPoint!x__ -> Memory_setPoint(x__)
							[]
							getV_setPoint!x__ -> Memory_setPoint(x__)
							[]
							set_setPoint?x__ -> Memory_setPoint(x__)
						)
						Memory_res(x__) = ( 
							get_res!x__ -> Memory_res(x__)
							[]
							getV_res!x__ -> Memory_res(x__)
							[]
							set_res?x__ -> Memory_res(x__)
						)
						Memory_errorFlag(x__) = ( 
							get_errorFlag!x__ -> Memory_errorFlag(x__)
							[]
							getV_errorFlag!x__ -> Memory_errorFlag(x__)
							[]
							set_errorFlag?x__ -> Memory_errorFlag(x__)
						)
						Memory_lim(x__) = ( 
							get_lim!x__ -> Memory_lim(x__)
							[]
							getV_lim!x__ -> Memory_lim(x__)
							[]
							set_lim?x__ -> Memory_lim(x__)
						)
						Memory_supplyLim(x__) = ( 
							get_supplyLim!x__ -> Memory_supplyLim(x__)
							[]
							getV_supplyLim!x__ -> Memory_supplyLim(x__)
							[]
							set_supplyLim?x__ -> Memory_supplyLim(x__)
						)
						Memory_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							getV_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_ActualHV(x__)
						)
						Memory_errorAck(x__) = ( 
							get_errorAck!x__ -> Memory_errorAck(x__)
							[]
							getV_errorAck!x__ -> Memory_errorAck(x__)
							[]
							set_errorAck?x__ -> Memory_errorAck(x__)
						)
						Memory_overLimit(x__) = ( 
							get_overLimit!x__ -> Memory_overLimit(x__)
							[]
							getV_overLimit!x__ -> Memory_overLimit(x__)
							[]
							set_overLimit?x__ -> Memory_overLimit(x__)
						)
						Memory_underLimit(x__) = ( 
							get_underLimit!x__ -> Memory_underLimit(x__)
							[]
							getV_underLimit!x__ -> Memory_underLimit(x__)
							[]
							set_underLimit?x__ -> Memory_underLimit(x__)
						)
						Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__) = (
							getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID!x__ -> Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__)
							[]
							setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Memory_WC_TID_State_machine_ClosedLoop_t4_0(x__)
						)
						Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__) = (
							getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID!x__ -> Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
							[]
							setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
						)
						Memory_WC_TID_State_machine_t0_0(x__) = (
							getWC.WC_TID_State_machine_t0_0_ID!x__ -> Memory_WC_TID_State_machine_t0_0(x__)
							[]
							setWC.WC_TID_State_machine_t0_0_ID?x__ -> Memory_WC_TID_State_machine_t0_0(x__)
						)
						
						-- processes that read variables and offer transitions
						MemoryTransitions(id__,
							 power,
							 setPoint,
							 res,
							 errorFlag,
							 lim,
							 supplyLim,
							 ActualHV,
							 errorAck,
							 overLimit,
							 underLimit,
							 WC_TID_State_machine_ClosedLoop_t4_0,
							 WC_TID_State_machine_ClosedLoop_s2_t1_0,
							 WC_TID_State_machine_t0_0,
							 disableHV_arg,
							 supplyVoltCheck_power) = (
							internal__!TID_State_machine_Init_t0 -> SKIP
							[]
							internal__!TID_State_machine_Wait24Vpower_t0 -> SKIP
							[]
							(((setPoint!=0) or (lim==true)))&internal__!TID_State_machine_Wait24Vpower_t1 -> SKIP
							[]
							internal__!TID_State_machine_ClosedLoop_s2_t0 -> SKIP
							[]
							(WC_TID_State_machine_ClosedLoop_s2_t1_0)&internal__!TID_State_machine_ClosedLoop_s2_t1 -> SKIP
							[]
							internal__!TID_State_machine_ClosedLoop_s2_t5 -> SKIP
							[]
							internal__!TID_State_machine_ClosedLoop_s2_t2 -> SKIP
							[]
							((lim==true))&internal__!TID_State_machine_ClosedLoop_t1 -> SKIP
							[]
							((lim==true))&internal__!TID_State_machine_ClosedLoop_t2 -> SKIP
							[]
							((lim==false))&internal__!TID_State_machine_ClosedLoop_t3 -> SKIP
							[]
							(((lim==false) and WC_TID_State_machine_ClosedLoop_t4_0))&internal__!TID_State_machine_ClosedLoop_t4 -> SKIP
							[]
							((lim==true))&internal__!TID_State_machine_ClosedLoop_t5 -> SKIP
							[]
							internal__!TID_State_machine_ClosedLoop_t0 -> SKIP
							[]
							internal__!TID_State_machine_ErrorMode_t0 -> SKIP
							[]
							internal__!TID_State_machine_ErrorMode_t2 -> SKIP
							[]
							internal__!TID_State_machine_ErrorMode_t4 -> SKIP
							[]
							(((setPoint==0) and (ActualHV==0)))&internal__!TID_State_machine_ErrorMode_t5 -> SKIP
							[]
							(((setPoint!=0) or (ActualHV!=0)))&internal__!TID_State_machine_ErrorMode_t1 -> SKIP
							[]
							(WC_TID_State_machine_t0_0)&internal__!TID_State_machine_t0 -> SKIP
							[]
							internal__!TID_State_machine_t1 -> SKIP
							[]
							((res==true))&internal__!TID_State_machine_t2 -> SKIP
							[]
							((((setPoint==0) and (lim==false)) and (res==false)))&internal__!TID_State_machine_t3 -> SKIP
							[]
							((res==true))&internal__!TID_State_machine_t4 -> SKIP
							[]
							internal__!TID_State_machine_t5 -> SKIP
							[]
							(errorAck)&internal__!TID_State_machine_t6 -> SKIP
							[]
							int_DisableHV__!TID_State_machine_t8.in -> SKIP
							[]
							int_DisableHV__!TID_State_machine_t11.in -> SKIP
							[]
							internal__!TID_State_machine_t7 -> SKIP
						
							[]
								OP_disableHV::MemoryTransitions(id__,
								 disableHV_arg,
								 setPoint,
								 res,
								 errorFlag,
								 lim,
								 supplyLim,
								 ActualHV,
								 errorAck,
								 overLimit,
								 underLimit)
							[]		 		OP_supplyVoltCheck::MemoryTransitions(id__,
								 supplyVoltCheck_power,
								 setPoint,
								 res,
								 errorFlag,
								 lim,
								 supplyLim,
								 ActualHV,
								 errorAck,
								 overLimit,
								 underLimit)
							[]		 		OP_checkLimits::MemoryTransitions(id__,
								 setPoint,
								 res,
								 errorFlag,
								 lim,
								 supplyLim,
								 ActualHV,
								 errorAck,
								 overLimit,
								 underLimit)		 	
						
							[]
								set_power?x__ -> SKIP
							[]
							set_setPoint?x__ -> SKIP
							[]
							set_res?x__ -> SKIP
							[]
							set_errorFlag?x__ -> SKIP
							[]
							set_lim?x__ -> SKIP
							[]
							set_supplyLim?x__ -> SKIP
							[]
							set_ActualHV?x__ -> SKIP
							[]
							set_errorAck?x__ -> SKIP
							[]
							set_overLimit?x__ -> SKIP
							[]
							set_underLimit?x__ -> SKIP
						
							[]
								setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> SKIP
							[]
							setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> SKIP
							[]
							setWC.WC_TID_State_machine_t0_0_ID?x__ -> SKIP
						 	)
						MemoryTransitions_State_machine(id__) =
							(
							getV_power?power ->	
							getV_setPoint?setPoint ->	
							getV_res?res ->	
							getV_errorFlag?errorFlag ->	
							getV_lim?lim ->	
							getV_supplyLim?supplyLim ->	
							getV_ActualHV?ActualHV ->	
							getV_errorAck?errorAck ->	
							getV_overLimit?overLimit ->	
							getV_underLimit?underLimit ->	
							getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?WC_TID_State_machine_ClosedLoop_t4_0 ->	
							getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?WC_TID_State_machine_ClosedLoop_s2_t1_0 ->	
							getWC.WC_TID_State_machine_t0_0_ID?WC_TID_State_machine_t0_0 ->	
							OP_disableHV::getV_arg?disableHV_arg ->	
							OP_supplyVoltCheck::getV_power?supplyVoltCheck_power ->
							 MemoryTransitions(id__,
							 	 power,
							 	 setPoint,
							 	 res,
							 	 errorFlag,
							 	 lim,
							 	 supplyLim,
							 	 ActualHV,
							 	 errorAck,
							 	 overLimit,
							 	 underLimit,
							 	 WC_TID_State_machine_ClosedLoop_t4_0,
							 	 WC_TID_State_machine_ClosedLoop_s2_t1_0,
							 	 WC_TID_State_machine_t0_0,
							 	 disableHV_arg,
							 	 supplyVoltCheck_power);
							 MemoryTransitions_State_machine(id__)
							)
						
						-- synchronisation, hiding and process sets 
						MemoryVariablesProcesses_State_machine = Union(
							{
								OP_disableHV::MemoryVariablesProcesses_disableHV,
								OP_supplyVoltCheck::MemoryVariablesProcesses_supplyVoltCheck,
								OP_checkLimits::MemoryVariablesProcesses_checkLimits,
								{
									Memory_power(Power_On),
									Memory_setPoint(0),
									Memory_res(false),
									Memory_errorFlag(true),
									Memory_lim(false),
									Memory_supplyLim(false),
									Memory_ActualHV(0),
									Memory_errorAck(false),
									Memory_overLimit(0),
									Memory_underLimit(0),
									Memory_WC_TID_State_machine_ClosedLoop_t4_0(false),
									Memory_WC_TID_State_machine_ClosedLoop_s2_t1_0(false),
									Memory_WC_TID_State_machine_t0_0(false)
								}
							}
						)
						
						MemoryVariablesSyncSet = Union({
							OP_disableHV::MemoryVariablesSyncSet,
							OP_supplyVoltCheck::MemoryVariablesSyncSet,
							OP_checkLimits::MemoryVariablesSyncSet,
							{|
								set_ActualHV,
								setWC.WC_TID_State_machine_t0_0_ID,
								set_errorFlag,
								getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,
								getV_supplyLim,
								set_power,
								getV_errorFlag,
								set_res,
								getV_lim,
								getWC.WC_TID_State_machine_t0_0_ID,
								set_underLimit,
								getV_ActualHV,
								getV_power,
								set_overLimit,
								set_lim,
								getV_setPoint,
								getV_res,
								setWC,
								getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,
								set_errorAck,
								set_setPoint,
								getV_errorAck,
								setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,
								set_supplyLim,
								getV_underLimit,
								setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,
								getV_overLimit
							|}	
						})
						
						MemoryVariablesHideSet = Union({
							OP_disableHV::MemoryVariablesHideSet,
							OP_supplyVoltCheck::MemoryVariablesHideSet,
							OP_checkLimits::MemoryVariablesHideSet,
							{|
								getV_power,
								getV_errorAck,
								getV_setPoint,
								getV_res,
								getV_lim,
								getV_supplyLim,
								getWC,
								getV_errorFlag,
								getV_underLimit,
								getV_ActualHV,
								getV_overLimit
							|}
						})
						
						-- combined individual memory processes
						MemoryVariables = ||| P : MemoryVariablesProcesses_State_machine @ P
						
						-- complete memory process
						MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_State_machine(id__)) \ MemoryVariablesHideSet
						
						-- optimised memory
						-- Sets of named elements identified according to transition conditions:
						-- {}
						-- {res,lim,setPoint}
						-- {WC_TID_State_machine_t0_0}
						-- {WC_TID_State_machine_ClosedLoop_s2_t1_0}
						-- {overLimit,ActualHV,underLimit}
						-- {ActualHV,setPoint}
						-- {OP_disableHV::arg}
						-- {errorAck}
						-- {WC_TID_State_machine_ClosedLoop_t4_0,lim}
						-- Summary of all identified named elements:
						-- {
						-- OP_supplyVoltCheck::power
						-- overLimit
						-- WC_TID_State_machine_t0_0
						-- WC_TID_State_machine_ClosedLoop_s2_t1_0
						-- setPoint
						-- OP_disableHV::arg
						-- res
						-- errorFlag
						-- WC_TID_State_machine_ClosedLoop_t4_0
						-- ActualHV
						-- underLimit
						-- lim
						-- power
						-- supplyLim
						-- errorAck
						-- }
						
						-- Allocation plan:
						-- 0:{}
						--	=> {
						--		TID_State_machine_ClosedLoop_s2_t2,
						--		TID_supplyVoltCheck_t2,
						--		TID_checkLimits_t0,
						--		TID_State_machine_t8,
						--		TID_State_machine_ErrorMode_t2,
						--		TID_State_machine_t1,
						--		TID_supplyVoltCheck_t1,
						--		TID_State_machine_Init_t0,
						--		TID_disableHV_t2,
						--		TID_State_machine_ErrorMode_t0,
						--		TID_State_machine_ErrorMode_t4,
						--		TID_State_machine_t11,
						--		TID_State_machine_Wait24Vpower_t0,
						--		TID_disableHV_t3,
						--		TID_State_machine_t5,
						--		TID_supplyVoltCheck_t0,
						--		TID_State_machine_ClosedLoop_s2_t5,
						--		TID_State_machine_t7,
						--		TID_State_machine_ClosedLoop_t0,
						--		TID_State_machine_ClosedLoop_s2_t0}
						-- 7:{res,lim,setPoint}
						--	=> {
						--		TID_State_machine_t4,
						--		TID_State_machine_ClosedLoop_t1,
						--		TID_State_machine_t3,
						--		TID_State_machine_ClosedLoop_t3,
						--		TID_State_machine_ClosedLoop_t2,
						--		TID_State_machine_Wait24Vpower_t1,
						--		TID_State_machine_t2,
						--		TID_State_machine_ClosedLoop_t5}
						-- 1:{WC_TID_State_machine_t0_0}
						--	=> {
						--		TID_State_machine_t0}
						-- 2:{WC_TID_State_machine_ClosedLoop_s2_t1_0}
						--	=> {
						--		TID_State_machine_ClosedLoop_s2_t1}
						-- 8:{overLimit,ActualHV,underLimit}
						--	=> {
						--		TID_checkLimits_t2,
						--		TID_checkLimits_t1}
						-- 5:{ActualHV,setPoint}
						--	=> {
						--		TID_State_machine_ErrorMode_t1,
						--		TID_State_machine_ErrorMode_t5}
						-- 3:{OP_disableHV::arg}
						--	=> {
						--		TID_disableHV_t1,
						--		TID_disableHV_t0}
						-- 4:{errorAck}
						--	=> {
						--		TID_State_machine_t6}
						-- 6:{WC_TID_State_machine_ClosedLoop_t4_0,lim}
						--	=> {
						--		TID_State_machine_ClosedLoop_t4}
						
						-- Memory transition processes
						MemoryTransitions_opt_0(id__) =
						(
							let
								Update = Current(id__)
								Current(id__)
								 	   = 
								 	   internal__!TID_State_machine_ClosedLoop_s2_t2 -> Update
								 	   []
								 	   OP_supplyVoltCheck::ext_pow24VStatus__!OP_supplyVoltCheck::TID_supplyVoltCheck_t2.in?power:{power|power <- Power, (power==Power_Off)} -> Update
								 	   []
								 	   OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t0 -> Update
								 	   []
								 	   int_DisableHV__!TID_State_machine_t8.in -> Update
								 	   []
								 	   internal__!TID_State_machine_ErrorMode_t2 -> Update
								 	   []
								 	   internal__!TID_State_machine_t1 -> Update
								 	   []
								 	   OP_supplyVoltCheck::ext_pow24VStatus__!OP_supplyVoltCheck::TID_supplyVoltCheck_t1.in?power:{power|power <- Power, (power==Power_On)} -> Update
								 	   []
								 	   internal__!TID_State_machine_Init_t0 -> Update
								 	   []
								 	   OP_disableHV::internal__!OP_disableHV::TID_disableHV_t2 -> Update
								 	   []
								 	   internal__!TID_State_machine_ErrorMode_t0 -> Update
								 	   []
								 	   internal__!TID_State_machine_ErrorMode_t4 -> Update
								 	   []
								 	   int_DisableHV__!TID_State_machine_t11.in -> Update
								 	   []
								 	   internal__!TID_State_machine_Wait24Vpower_t0 -> Update
								 	   []
								 	   OP_disableHV::internal__!OP_disableHV::TID_disableHV_t3 -> Update
								 	   []
								 	   internal__!TID_State_machine_t5 -> Update
								 	   []
								 	   OP_supplyVoltCheck::internal__!OP_supplyVoltCheck::TID_supplyVoltCheck_t0 -> Update
								 	   []
								 	   internal__!TID_State_machine_ClosedLoop_s2_t5 -> Update
								 	   []
								 	   internal__!TID_State_machine_t7 -> Update
								 	   []
								 	   internal__!TID_State_machine_ClosedLoop_t0 -> Update
								 	   []
								 	   internal__!TID_State_machine_ClosedLoop_s2_t0 -> Update
							within
								Update
						)
						MemoryTransitions_opt_7(id__) =
						(
							let
								Update = 
								get_res?res ->
								get_lim?lim ->
								get_setPoint?setPoint ->
								Current(id__,
									 res,
									 lim,
									 setPoint)
								Current(id__,
									 res,
									 lim,
									 setPoint)
								 	   = 
								 	   ((res==true))&(internal__!TID_State_machine_t4 -> Update)
								 	   []
								 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t1 -> Update)
								 	   []
								 	   ((((setPoint==0) and (lim==false)) and (res==false)))&(internal__!TID_State_machine_t3 -> Update)
								 	   []
								 	   ((lim==false))&(internal__!TID_State_machine_ClosedLoop_t3 -> Update)
								 	   []
								 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t2 -> Update)
								 	   []
								 	   (((setPoint!=0) or (lim==true)))&(internal__!TID_State_machine_Wait24Vpower_t1 -> Update)
								 	   []
								 	   ((res==true))&(internal__!TID_State_machine_t2 -> Update)
								 	   []
								 	   ((lim==true))&(internal__!TID_State_machine_ClosedLoop_t5 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_res?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_lim?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_setPoint?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_1(id__) =
						(
							let
								Update = 
								getWC.WC_TID_State_machine_t0_0_ID?WC_TID_State_machine_t0_0 ->
								Current(id__,
									 WC_TID_State_machine_t0_0)
								Current(id__,
									 WC_TID_State_machine_t0_0)
								 	   = 
								 	   (WC_TID_State_machine_t0_0)&(internal__!TID_State_machine_t0 -> Update)
								 	   	 
								 	   	 []
								 	   	 setWC.WC_TID_State_machine_t0_0_ID?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_2(id__) =
						(
							let
								Update = 
								getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?WC_TID_State_machine_ClosedLoop_s2_t1_0 ->
								Current(id__,
									 WC_TID_State_machine_ClosedLoop_s2_t1_0)
								Current(id__,
									 WC_TID_State_machine_ClosedLoop_s2_t1_0)
								 	   = 
								 	   (WC_TID_State_machine_ClosedLoop_s2_t1_0)&(internal__!TID_State_machine_ClosedLoop_s2_t1 -> Update)
								 	   	 
								 	   	 []
								 	   	 setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_8(id__) =
						(
							let
								Update = 
								get_overLimit?overLimit ->
								get_ActualHV?ActualHV ->
								get_underLimit?underLimit ->
								Current(id__,
									 overLimit,
									 ActualHV,
									 underLimit)
								Current(id__,
									 overLimit,
									 ActualHV,
									 underLimit)
								 	   = 
								 	   (((ActualHV<underLimit) or (ActualHV>overLimit)))&(OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t2 -> Update)
								 	   []
								 	   (((ActualHV<=overLimit) and (ActualHV>=underLimit)))&(OP_checkLimits::internal__!OP_checkLimits::TID_checkLimits_t1 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_overLimit?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_ActualHV?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_underLimit?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_5(id__) =
						(
							let
								Update = 
								get_ActualHV?ActualHV ->
								get_setPoint?setPoint ->
								Current(id__,
									 ActualHV,
									 setPoint)
								Current(id__,
									 ActualHV,
									 setPoint)
								 	   = 
								 	   (((setPoint!=0) or (ActualHV!=0)))&(internal__!TID_State_machine_ErrorMode_t1 -> Update)
								 	   []
								 	   (((setPoint==0) and (ActualHV==0)))&(internal__!TID_State_machine_ErrorMode_t5 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_ActualHV?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_setPoint?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_3(id__) =
						(
							let
								Update = 
								OP_disableHV::get_arg?arg ->
								Current(id__,
									 arg)
								Current(id__,
									 arg)
								 	   = 
								 	   ((arg==true))&(OP_disableHV::internal__!OP_disableHV::TID_disableHV_t1 -> Update)
								 	   []
								 	   ((arg==false))&(OP_disableHV::internal__!OP_disableHV::TID_disableHV_t0 -> Update)
								 	   	 
								 	   	 []
								 	   	 OP_disableHV::set_arg?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_4(id__) =
						(
							let
								Update = 
								get_errorAck?errorAck ->
								Current(id__,
									 errorAck)
								Current(id__,
									 errorAck)
								 	   = 
								 	   (errorAck)&(internal__!TID_State_machine_t6 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_errorAck?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_6(id__) =
						(
							let
								Update = 
								getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?WC_TID_State_machine_ClosedLoop_t4_0 ->
								get_lim?lim ->
								Current(id__,
									 WC_TID_State_machine_ClosedLoop_t4_0,
									 lim)
								Current(id__,
									 WC_TID_State_machine_ClosedLoop_t4_0,
									 lim)
								 	   = 
								 	   (((lim==false) and WC_TID_State_machine_ClosedLoop_t4_0))&(internal__!TID_State_machine_ClosedLoop_t4 -> Update)
								 	   	 
								 	   	 []
								 	   	 setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_lim?x__ -> Update
							within
								Update
						)
						
						-- Memory cell processes
						Memory_opt_overLimit(x__) = ( 
							get_overLimit!x__ -> Memory_opt_overLimit(x__)
							[]
							set_overLimit?x__ -> Memory_opt_overLimit(x__)
						)
						Memory_opt_WC_TID_State_machine_t0_0(x__) = ( 
							getWC.WC_TID_State_machine_t0_0_ID!x__ -> Memory_opt_WC_TID_State_machine_t0_0(x__)
							[]
							setWC.WC_TID_State_machine_t0_0_ID?x__ -> Memory_opt_WC_TID_State_machine_t0_0(x__)
						)
						Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__) = ( 
							getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID!x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
							[]
							setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID?x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(x__)
						)
						Memory_opt_setPoint(x__) = ( 
							get_setPoint!x__ -> Memory_opt_setPoint(x__)
							[]
							set_setPoint?x__ -> Memory_opt_setPoint(x__)
						)
						Memory_opt_res(x__) = ( 
							get_res!x__ -> Memory_opt_res(x__)
							[]
							set_res?x__ -> Memory_opt_res(x__)
						)
						Memory_opt_errorFlag(x__) = ( 
							get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
							[]
							set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
						)
						Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__) = ( 
							getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID!x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__)
							[]
							setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID?x__ -> Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(x__)
						)
						Memory_opt_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						)
						Memory_opt_underLimit(x__) = ( 
							get_underLimit!x__ -> Memory_opt_underLimit(x__)
							[]
							set_underLimit?x__ -> Memory_opt_underLimit(x__)
						)
						Memory_opt_lim(x__) = ( 
							get_lim!x__ -> Memory_opt_lim(x__)
							[]
							set_lim?x__ -> Memory_opt_lim(x__)
						)
						Memory_opt_power(x__) = ( 
							get_power!x__ -> Memory_opt_power(x__)
							[]
							set_power?x__ -> Memory_opt_power(x__)
						)
						Memory_opt_supplyLim(x__) = ( 
							get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
							[]
							set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
						)
						Memory_opt_errorAck(x__) = ( 
							get_errorAck!x__ -> Memory_opt_errorAck(x__)
							[]
							set_errorAck?x__ -> Memory_opt_errorAck(x__)
						)
						
						-- Composition of memory, StateMachine and Memory transition processes
						
						MemorySTM_opt(id__) =
							dbisim(
							  sbisim(Memory_opt_res(false)
							      	[| {|set_res,get_res|} |] 
							      	dbisim(
							      	  sbisim(Memory_opt_lim(false)
							      	      	[| {|set_lim,get_lim|} |] 
							      	      	dbisim(
							      	      	  sbisim(Memory_opt_setPoint(0)
							      	      	      	[| {|set_setPoint,get_setPoint|} |] 
							      	      	      	sbisim(	
							      	      	      	  dbisim(
							      	      	      	    sbisim(dbisim(
							      	      	      	      sbisim(Memory_opt_WC_TID_State_machine_t0_0(false)
							      	      	      	          	[| {|setWC.WC_TID_State_machine_t0_0_ID,getWC.WC_TID_State_machine_t0_0_ID|} |] 
							      	      	      	          	sbisim(	
							      	      	      	          	  dbisim(
							      	      	      	          	    sbisim(dbisim(
							      	      	      	          	      sbisim(Memory_opt_WC_TID_State_machine_ClosedLoop_s2_t1_0(false)
							      	      	      	          	          	[| {|setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|} |] 
							      	      	      	          	          	sbisim(	
							      	      	      	          	          	  dbisim(
							      	      	      	          	          	    sbisim(dbisim(
							      	      	      	          	          	      sbisim(Memory_opt_overLimit(0)
							      	      	      	          	          	          	[| {|set_overLimit,get_overLimit|} |] 
							      	      	      	          	          	          	dbisim(
							      	      	      	          	          	          	  sbisim(Memory_opt_ActualHV(0)
							      	      	      	          	          	          	      	[| {|set_ActualHV,get_ActualHV|} |] 
							      	      	      	          	          	          	      	dbisim(
							      	      	      	          	          	          	      	  sbisim(Memory_opt_underLimit(0)
							      	      	      	          	          	          	      	      	[| {|get_underLimit,set_underLimit|} |] 
							      	      	      	          	          	          	      	      	sbisim(	
							      	      	      	          	          	          	      	      	  dbisim(
							      	      	      	          	          	          	      	      	    sbisim(sbisim(	
							      	      	      	          	          	          	      	      	      dbisim(
							      	      	      	          	          	          	      	      	        sbisim(dbisim(
							      	      	      	          	          	          	      	      	          sbisim(OP_disableHV::Memory_opt_arg(true)
							      	      	      	          	          	          	      	      	              	[| {|OP_disableHV::get_arg,OP_disableHV::set_arg|} |] 
							      	      	      	          	          	          	      	      	              	sbisim(	
							      	      	      	          	          	          	      	      	              	  dbisim(
							      	      	      	          	          	          	      	      	              	    sbisim(dbisim(
							      	      	      	          	          	          	      	      	              	      sbisim(Memory_opt_errorAck(false)
							      	      	      	          	          	          	      	      	              	          	[| {|set_errorAck,get_errorAck|} |] 
							      	      	      	          	          	          	      	      	              	          	sbisim(	
							      	      	      	          	          	          	      	      	              	          	  dbisim(
							      	      	      	          	          	          	      	      	              	          	    sbisim(dbisim(
							      	      	      	          	          	          	      	      	              	          	      sbisim(Memory_opt_WC_TID_State_machine_ClosedLoop_t4_0(false)
							      	      	      	          	          	          	      	      	              	          	          	[| {|getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID|} |] 
							      	      	      	          	          	          	      	      	              	          	          	sbisim(	
							      	      	      	          	          	          	      	      	              	          	          	  dbisim(
							      	      	      	          	          	          	      	      	              	          	          	    sbisim(sbisim(	
							      	      	      	          	          	          	      	      	              	          	          	      dbisim(
							      	      	      	          	          	          	      	      	              	          	          	        sbisim(dbisim(sbisim(OP_supplyVoltCheck::Memory_opt_power(Power_On)
							      	      	      	          	          	          	      	      	              	          	          	              	[| {|OP_supplyVoltCheck::get_power,OP_supplyVoltCheck::set_power|} |] 
							      	      	      	          	          	          	      	      	              	          	          	              	dbisim(sbisim(Memory_opt_errorFlag(true)
							      	      	      	          	          	          	      	      	              	          	          	              	      	[| {|set_errorFlag,get_errorFlag|} |] 
							      	      	      	          	          	          	      	      	              	          	          	              	      	dbisim(sbisim(Memory_opt_power(Power_On)
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	[| {|get_power,set_power|} |] 
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	dbisim(sbisim(Memory_opt_supplyLim(false)
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	      	[| {|get_supplyLim,set_supplyLim|} |] 
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	      	STM_core(id__)
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	      	)\ {|get_supplyLim,set_supplyLim|}
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	      )
							      	      	      	          	          	          	      	      	              	          	          	              	      	      	)\ {|get_power,set_power|}
							      	      	      	          	          	          	      	      	              	          	          	              	      	      )
							      	      	      	          	          	          	      	      	              	          	          	              	      	)\ {|set_errorFlag,get_errorFlag|}
							      	      	      	          	          	          	      	      	              	          	          	              	      )
							      	      	      	          	          	          	      	      	              	          	          	              	)\ {|OP_supplyVoltCheck::get_power,OP_supplyVoltCheck::set_power|}
							      	      	      	          	          	          	      	      	              	          	          	              )
							      	      	      	          	          	          	      	      	              	          	          	          	  [| {|int_DisableHV__.TID_State_machine_t8,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t0,internal__.TID_State_machine_Init_t0,OP_supplyVoltCheck::internal__.OP_supplyVoltCheck::TID_supplyVoltCheck_t0,internal__.TID_State_machine_ClosedLoop_t0,OP_supplyVoltCheck::ext_pow24VStatus__.OP_supplyVoltCheck::TID_supplyVoltCheck_t1,internal__.TID_State_machine_ErrorMode_t0,internal__.TID_State_machine_Wait24Vpower_t0,OP_supplyVoltCheck::ext_pow24VStatus__.OP_supplyVoltCheck::TID_supplyVoltCheck_t2,internal__.TID_State_machine_ClosedLoop_s2_t5,int_DisableHV__.TID_State_machine_t11,internal__.TID_State_machine_t1,internal__.TID_State_machine_ErrorMode_t4,internal__.TID_State_machine_ClosedLoop_s2_t0,internal__.TID_State_machine_t7,internal__.TID_State_machine_ClosedLoop_s2_t2,internal__.TID_State_machine_ErrorMode_t2,internal__.TID_State_machine_t5,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t3,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t2|} |]
							      	      	      	          	          	          	      	      	              	          	          	          	  MemoryTransitions_opt_0(id__)
							      	      	      	          	          	          	      	      	              	          	          	          	  )\{|internal__.TID_State_machine_ClosedLoop_t0,internal__.TID_State_machine_ClosedLoop_s2_t0,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t0,internal__.TID_State_machine_t5,OP_supplyVoltCheck::internal__.OP_supplyVoltCheck::TID_supplyVoltCheck_t0,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t3,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t2|})
							      	      	      	          	          	          	      	      	              	          	          	          )
							      	      	      	          	          	          	      	      	              	          	          	      	  [| {|set_lim,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,internal__.TID_State_machine_ClosedLoop_t4|} |]
							      	      	      	          	          	          	      	      	              	          	          	      	  MemoryTransitions_opt_6(id__)
							      	      	      	          	          	          	      	      	              	          	          	      	  )\{||})
							      	      	      	          	          	          	      	      	              	          	          	      )
							      	      	      	          	          	          	      	      	              	          	          	) \ {|getWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID|}
							      	      	      	          	          	          	      	      	              	          	          )
							      	      	      	          	          	          	      	      	              	          	      	  [| {|set_errorAck,internal__.TID_State_machine_t6|} |]
							      	      	      	          	          	          	      	      	              	          	      	  MemoryTransitions_opt_4(id__)
							      	      	      	          	          	          	      	      	              	          	      	  )\{||})
							      	      	      	          	          	          	      	      	              	          	      )
							      	      	      	          	          	          	      	      	              	          	) \ {|set_errorAck,get_errorAck|}
							      	      	      	          	          	          	      	      	              	          )
							      	      	      	          	          	          	      	      	              	      	  [| {|OP_disableHV::internal__.OP_disableHV::TID_disableHV_t1,OP_disableHV::set_arg,OP_disableHV::internal__.OP_disableHV::TID_disableHV_t0|} |]
							      	      	      	          	          	          	      	      	              	      	  MemoryTransitions_opt_3(id__)
							      	      	      	          	          	          	      	      	              	      	  )\{||})
							      	      	      	          	          	          	      	      	              	      )
							      	      	      	          	          	          	      	      	              	) \ {|OP_disableHV::get_arg,OP_disableHV::set_arg|}
							      	      	      	          	          	          	      	      	              )
							      	      	      	          	          	          	      	      	          	  [| {|set_ActualHV,set_setPoint,internal__.TID_State_machine_ErrorMode_t1,internal__.TID_State_machine_ErrorMode_t5|} |]
							      	      	      	          	          	          	      	      	          	  MemoryTransitions_opt_5(id__)
							      	      	      	          	          	          	      	      	          	  )\{||})
							      	      	      	          	          	          	      	      	          )
							      	      	      	          	          	          	      	      	      	  [| {|set_overLimit,set_ActualHV,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t2,OP_checkLimits::internal__.OP_checkLimits::TID_checkLimits_t1,set_underLimit|} |]
							      	      	      	          	          	          	      	      	      	  MemoryTransitions_opt_8(id__)
							      	      	      	          	          	          	      	      	      	  )\{||})
							      	      	      	          	          	          	      	      	      )
							      	      	      	          	          	          	      	      	) \ {|get_underLimit,set_underLimit|}
							      	      	      	          	          	          	      	      )
							      	      	      	          	          	          	      	) \ {|set_ActualHV,get_ActualHV|}
							      	      	      	          	          	          	      )
							      	      	      	          	          	          	) \ {|set_overLimit,get_overLimit|}
							      	      	      	          	          	          )
							      	      	      	          	          	      	  [| {|internal__.TID_State_machine_ClosedLoop_s2_t1,setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|} |]
							      	      	      	          	          	      	  MemoryTransitions_opt_2(id__)
							      	      	      	          	          	      	  )\{||})
							      	      	      	          	          	      )
							      	      	      	          	          	) \ {|setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID,getWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID|}
							      	      	      	          	          )
							      	      	      	          	      	  [| {|internal__.TID_State_machine_t0,setWC.WC_TID_State_machine_t0_0_ID|} |]
							      	      	      	          	      	  MemoryTransitions_opt_1(id__)
							      	      	      	          	      	  )\{||})
							      	      	      	          	      )
							      	      	      	          	) \ {|setWC.WC_TID_State_machine_t0_0_ID,getWC.WC_TID_State_machine_t0_0_ID|}
							      	      	      	          )
							      	      	      	      	  [| {|internal__.TID_State_machine_ClosedLoop_t2,internal__.TID_State_machine_ClosedLoop_t3,internal__.TID_State_machine_ClosedLoop_t1,internal__.TID_State_machine_t4,set_setPoint,internal__.TID_State_machine_t3,internal__.TID_State_machine_Wait24Vpower_t1,set_res,set_lim,internal__.TID_State_machine_t2,internal__.TID_State_machine_ClosedLoop_t5|} |]
							      	      	      	      	  MemoryTransitions_opt_7(id__)
							      	      	      	      	  )\{||})
							      	      	      	      )
							      	      	      	) \ {|set_setPoint,get_setPoint|}
							      	      	      )
							      	      	) \ {|set_lim,get_lim|}
							      	      )
							      	) \ {|set_res,get_res|}
							      )
						
						-- main process
						
						MachineMemorySyncSet = Union({
							union(
								union(
									{|get_power,set_power,
									get_setPoint,set_setPoint,
									get_res,set_res,
									get_errorFlag,set_errorFlag,
									get_lim,set_lim,
									get_supplyLim,set_supplyLim,
									get_ActualHV,set_ActualHV,
									get_errorAck,set_errorAck,
									get_overLimit,set_overLimit,
									get_underLimit,set_underLimit|},
									{||}
								)
									
								,
								{|internal__.TID_State_machine_Init_t0,
								internal__.TID_State_machine_Wait24Vpower_t0,
								internal__.TID_State_machine_Wait24Vpower_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t0,
								internal__.TID_State_machine_ClosedLoop_s2_t1,
								internal__.TID_State_machine_ClosedLoop_s2_t5,
								internal__.TID_State_machine_ClosedLoop_s2_t2,
								internal__.TID_State_machine_ClosedLoop_t1,
								internal__.TID_State_machine_ClosedLoop_t2,
								internal__.TID_State_machine_ClosedLoop_t3,
								internal__.TID_State_machine_ClosedLoop_t4,
								internal__.TID_State_machine_ClosedLoop_t5,
								internal__.TID_State_machine_ClosedLoop_t0,
								internal__.TID_State_machine_ErrorMode_t0,
								internal__.TID_State_machine_ErrorMode_t2,
								internal__.TID_State_machine_ErrorMode_t4,
								internal__.TID_State_machine_ErrorMode_t5,
								internal__.TID_State_machine_ErrorMode_t1,
								internal__.TID_State_machine_t0,
								internal__.TID_State_machine_t1,
								internal__.TID_State_machine_t2,
								internal__.TID_State_machine_t3,
								internal__.TID_State_machine_t4,
								internal__.TID_State_machine_t5,
								internal__.TID_State_machine_t6,
								int_DisableHV__.TID_State_machine_t8,
								int_DisableHV__.TID_State_machine_t11,
								internal__.TID_State_machine_t7|}
							),
							{|deadline|},
							WCresets
							, OP_disableHV::MachineMemorySyncSet
							, OP_supplyVoltCheck::MachineMemorySyncSet
							, OP_checkLimits::MachineMemorySyncSet
						})
						
						MachineMemoryHidingSet = Union({
							union(
								{|get_power,set_power,
								get_setPoint,set_setPoint,
								get_res,set_res,
								get_errorFlag,set_errorFlag,
								get_lim,set_lim,
								get_supplyLim,set_supplyLim,
								get_ActualHV,set_ActualHV,
								get_errorAck,set_errorAck,
								get_overLimit,set_overLimit,
								get_underLimit,set_underLimit|},
								{||}
							)
							,
							{|deadline|}
							, OP_disableHV::MachineMemoryHidingSet
							, OP_supplyVoltCheck::MachineMemoryHidingSet
							, OP_checkLimits::MachineMemoryHidingSet
						})
						
						MachineInternalEvents = {|
							internal__
							, OP_disableHV::internal__
							, OP_supplyVoltCheck::internal__
							, OP_checkLimits::internal__
						|}
					
						-- main process
						AUX(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							(
								(MemoryN(id__))
									[| union(WCsets,WCsync) |]
								Clocks(id__)
							)\WCsets
						)
						[[
							currentState__.x____ <- currentState,
							ext_setPoint__.x____ <- ext_setPoint,
							ext_pow24VStatus__.x____ <- ext_pow24VStatus,
							int_overLimit__.x____ <- int_overLimit,
							int_pwmSignal__.x____ <- int_pwmSignal,
							int_underLimit__.x____ <- int_underLimit,
							int_DisableHV__.x____ <- int_DisableHV,
							int_ActualHV__.x____ <- int_ActualHV
							| x____ <- TIDS
						]]
						[[
							OP_disableHV::int_pwmSignal__.x____ <- int_pwmSignal
							| x____ <- OP_disableHV::TIDS
						]]
						[[
							OP_supplyVoltCheck::ext_setPoint__.x____ <- ext_setPoint,
							OP_supplyVoltCheck::ext_pow24VStatus__.x____ <- ext_pow24VStatus
							| x____ <- OP_supplyVoltCheck::TIDS
						]]
						[[
							OP_checkLimits::ext_setPoint__.x____ <- ext_setPoint,
							OP_checkLimits::ext_pow24VStatus__.x____ <- ext_pow24VStatus
							| x____ <- OP_checkLimits::TIDS
						]]
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP\MachineInternalEvents)
						,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						STM_core(id__) = 
							dbisim(
								sbisim(
										(STM(id__)
										[| union(WCsync,WCresets) |]
										Clocks(id__))\WCresets
									  )
								  )
						
						AUX_opt(id__) = 
							prioritise(
								(MemorySTM_opt(id__)
								)[[
									currentState__.x____ <- currentState,
									ext_setPoint__.x____ <- ext_setPoint,
									ext_pow24VStatus__.x____ <- ext_pow24VStatus,
									int_overLimit__.x____ <- int_overLimit,
									int_pwmSignal__.x____ <- int_pwmSignal,
									int_underLimit__.x____ <- int_underLimit,
									int_DisableHV__.x____ <- int_DisableHV,
									int_ActualHV__.x____ <- int_ActualHV
									| x____ <- TIDS
								]]
								[[
									OP_disableHV::int_pwmSignal__.x____ <- int_pwmSignal
									| x____ <- OP_disableHV::TIDS
								]]
								[[
									OP_supplyVoltCheck::ext_setPoint__.x____ <- ext_setPoint,
									OP_supplyVoltCheck::ext_pow24VStatus__.x____ <- ext_pow24VStatus
									| x____ <- OP_supplyVoltCheck::TIDS
								]]
								[[
									OP_checkLimits::ext_setPoint__.x____ <- ext_setPoint,
									OP_checkLimits::ext_pow24VStatus__.x____ <- ext_pow24VStatus
									| x____ <- OP_checkLimits::TIDS
								]]
							[|{|terminate|}|>SKIP\MachineInternalEvents
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						internal_(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
						)
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP)
						,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
						-- declare clocks
						datatype ClockSet = dummyC | CLID_Cl1
						channel clockReset : ClockSet
									
						
						-- declare trigger deadlines channel
						channel deadline : TIDS.deadlineSignal
						
						-- compile clocks process
						
						-- set of strings that uniquely identify the waiting conditions, each of which is 
						-- used to synchronise with the Memory process to set the correspoding variable in
						-- the memory process.
						datatype setWC_identifierSet = dummyWC
						                             | WC_TID_State_machine_ClosedLoop_t4_0_ID
						                             | WC_TID_State_machine_t0_0_ID
						                             | WC_TID_State_machine_ClosedLoop_s2_t1_0_ID
						
						-- declaring getWC and setWC channel for updating memory variables related to clocks
						channel setWC : setWC_identifierSet.Bool
						channel getWC : setWC_identifierSet.Bool
						
						-- Set of pairs capturing waiting condition processes and their alphabet.
						-- It includes the corresponding set of the defined operations.
						WCset(id__) = Union({
							{
							({|setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID,internal__.TID_State_machine_ClosedLoop_t4,entered.x.SID_State_machine_ClosedLoop_s3 | x <- SIDS|},P_WC_TID_State_machine_ClosedLoop_t4_0(id__)),
							
							({|entered.x.SID_State_machine_ClosedLoop_s2_s0,internal__.TID_State_machine_ClosedLoop_s2_t1,setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID | x <- SIDS|},P_WC_TID_State_machine_ClosedLoop_s2_t1_0(id__)),
							
							({|internal__.TID_State_machine_t0,setWC.WC_TID_State_machine_t0_0_ID,entered.x.SID_State_machine_Ramping | x <- SIDS|},P_WC_TID_State_machine_t0_0(id__))
							}
							,
							{({|wc_alpha_rename_disableHV(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_disableHV::WCset(id__)}
						,
							{({|wc_alpha_rename_supplyVoltCheck(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_supplyVoltCheck::WCset(id__)}
						,
							{({|wc_alpha_rename_checkLimits(x__)|x__ <- alpha__origin|},clock__) | (alpha__origin,clock__) <- OP_checkLimits::WCset(id__)}
						})
						
						-- Auxiliary function to rename the channel set for required clocks.
						wc_alpha_rename_disableHV(x) = x
						wc_alpha_rename_supplyVoltCheck(x) = x
						wc_alpha_rename_checkLimits(x) = x
						
						-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
						-- It includes the corresponding set of the defined operations.
						WCsync = Union({
							{|internal__.TID_State_machine_t0,
							internal__.TID_State_machine_ClosedLoop_s2_t1,
							internal__.TID_State_machine_ClosedLoop_t4|}
							,
							OP_disableHV::WCsync
						,
							OP_supplyVoltCheck::WCsync
						,
							OP_checkLimits::WCsync
						})
						-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
						-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
						WCresets = Union({
							{|entered.x.SID_State_machine_ClosedLoop_s2_s0,
							entered.x.SID_State_machine_ClosedLoop_s3,
							entered.x.SID_State_machine_Ramping | x <- SIDS |}
							,
							OP_disableHV::WCresets
						,
							OP_supplyVoltCheck::WCresets
						,
							OP_checkLimits::WCresets
						})
						-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
						WCsets = Union({
							{|setWC|}
							,
							OP_disableHV::WCsets
						,
							OP_supplyVoltCheck::WCsets
						,
							OP_checkLimits::WCsets
						})
						
						P_WC_TID_State_machine_ClosedLoop_t4_0_reset(id__) = entered?x.SID_State_machine_ClosedLoop_s3 -> setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__)
						
						P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__) = (TimedInterrupt(RUN({|tock,internal__.TID_State_machine_ClosedLoop_t4|}),0+1) ; setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.true -> RUN({|tock,internal__.TID_State_machine_ClosedLoop_t4|})) /\ P_WC_TID_State_machine_ClosedLoop_t4_0_reset(id__)
						
						P_WC_TID_State_machine_ClosedLoop_s2_t1_0_reset(id__) = entered?x.SID_State_machine_ClosedLoop_s2_s0 -> setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__)
						
						P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__) = (TimedInterrupt(RUN({|tock,internal__.TID_State_machine_ClosedLoop_s2_t1|}),0+1) ; setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.true -> RUN({|tock,internal__.TID_State_machine_ClosedLoop_s2_t1|})) /\ P_WC_TID_State_machine_ClosedLoop_s2_t1_0_reset(id__)
						
						P_WC_TID_State_machine_t0_0_reset(id__) = entered?x.SID_State_machine_Ramping -> setWC.WC_TID_State_machine_t0_0_ID.false -> P_WC_TID_State_machine_t0_0_monitor(id__)
						
						P_WC_TID_State_machine_t0_0_monitor(id__) = (TimedInterrupt(RUN({|internal__.TID_State_machine_t0,tock|}),1) ; setWC.WC_TID_State_machine_t0_0_ID.true -> RUN({|internal__.TID_State_machine_t0,tock|})) /\ P_WC_TID_State_machine_t0_0_reset(id__)
						
						P_WC_TID_State_machine_ClosedLoop_t4_0(id__) = setWC.WC_TID_State_machine_ClosedLoop_t4_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_t4_0_monitor(id__)
						
						P_WC_TID_State_machine_ClosedLoop_s2_t1_0(id__) = setWC.WC_TID_State_machine_ClosedLoop_s2_t1_0_ID.false -> P_WC_TID_State_machine_ClosedLoop_s2_t1_0_monitor(id__)
						
						P_WC_TID_State_machine_t0_0(id__) = setWC.WC_TID_State_machine_t0_0_ID.false -> P_WC_TID_State_machine_t0_0_monitor(id__)
						
						-- Clocks process
						Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
		
						-- collects all clockResets including those of operations
						ClockResets = Union({
							{|clockReset|}
							,
							OP_disableHV::ClockResets
		,
							OP_supplyVoltCheck::ClockResets
		,
							OP_checkLimits::ClockResets
						})
						
						-- With no internal events visible
						Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
						
						D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
						
						O__(id__) = D__(id__)
						
						-- With enter/entered/exit/exited events visible
						FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
						
						-- With enterV/enteredV/exitV/exitedV events visible
						VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
						
						-- With clock resets visible
						FVS_C__(id__) = AUX(id__)
					}
				endmodule
	
		module OP_disableHV
			Timed(OneStep) {
						
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_disableHV
				              | SID_disableHV_s1
				              | SID_disableHV_f0
				              | SID_disableHV_s0
				
				int_int = {|
					int_pwmSignal__.TID_disableHV_t0,
					internal__.TID_disableHV_t0,
					int_pwmSignal__.TID_disableHV_t1,
					internal__.TID_disableHV_t1,
					int_pwmSignal__.TID_disableHV_t3,
					internal__.TID_disableHV_t3
				|}
					
				
				internal_events = {|enter,entered,exit,exited,terminate|}
				
				-- declaring all states
				CS_disableHV_s1_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
					y____ <- {SID_disableHV_s1}
				|}
				
				
				disableHV_s1_triggers = {|
					internal__.TID_disableHV_t1,
					internal__.TID_disableHV_t0
				|}
				
				State_disableHV_s1(id__) = let
					T_disableHV_t0(id__) = internal__!TID_disableHV_t0 ->  exit.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
										SKIP;exited.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
										true & (set_res!false -> SKIP);enter!SID_disableHV_s1!SID_disableHV_f0 -> entered!SID_disableHV_s1!SID_disableHV_f0 ->
										State_disableHV_s1(id__)
					T_disableHV_t1(id__) = internal__!TID_disableHV_t1 ->  exit.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
										SKIP;exited.SID_disableHV_s1.SID_disableHV_s1 -> SKIP;
										true & (set_res!true -> SKIP);enter!SID_disableHV_s1!SID_disableHV_f0 -> entered!SID_disableHV_s1!SID_disableHV_f0 ->
										State_disableHV_s1(id__)
					State_disableHV_s1_execute(id__,o____) = true & (set_setPoint!0 -> SKIP); 
						entered!o____!SID_disableHV_s1 ->
						(SKIP; STOP /\ (
							T_disableHV_t0(id__)[]
							T_disableHV_t1(id__)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0}) -> exit?y____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (
									SKIP;
									exited!y____!SID_disableHV_s1 -> SKIP);
									State_disableHV_s1(id__)
							[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (
									SKIP;
									exited!y____!SID_disableHV_s1 -> SKIP);
									State_disableHV_s1(id__)
						))
				within
					enter?x____:diff(SIDS,{SID_disableHV_s1})!SID_disableHV_s1 -> (State_disableHV_s1_execute(id__,x____))
				
				CS_disableHV_f0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
					y____ <- {SID_disableHV_f0}
				|}
				
				
				disableHV_f0_triggers = {|
				|}
				
				State_disableHV_f0(id__) = let
					State_disableHV_f0_execute(id__,o____) = SKIP; 
						entered!o____!SID_disableHV_f0 ->
						terminate -> SKIP
				within
					enter?x____:diff(SIDS,{SID_disableHV_f0})!SID_disableHV_f0 -> (State_disableHV_f0_execute(id__,x____))
				
				CS_disableHV_s0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0},
					y____ <- {SID_disableHV_s0}
				|}
				
				
				disableHV_s0_triggers = {|
					internal__.TID_disableHV_t1,
					internal__.TID_disableHV_t0,
					internal__.TID_disableHV_t3
				|}
				
				State_disableHV_s0(id__) = let
					T_disableHV_t3(id__) = internal__!TID_disableHV_t3 ->  exit.SID_disableHV_s0.SID_disableHV_s0 -> SKIP;
										SKIP;exited.SID_disableHV_s0.SID_disableHV_s0 -> SKIP;
										enter!SID_disableHV_s0!SID_disableHV_s1 -> entered!SID_disableHV_s0!SID_disableHV_s1 ->
										State_disableHV_s0(id__)
					State_disableHV_s0_execute(id__,o____) = Deadline(true&(int_pwmSignal.out!Power_Off -> SKIP),0); 
						entered!o____!SID_disableHV_s0 ->
						(SKIP; STOP /\ (
							T_disableHV_t3(id__)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0,TID_disableHV_t3}) -> exit?y____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (
									SKIP;
									exited!y____!SID_disableHV_s0 -> SKIP);
									State_disableHV_s0(id__)
							[] int_pwmSignal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_disableHV_t1,TID_disableHV_t0,TID_disableHV_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (
									SKIP;
									exited!y____!SID_disableHV_s0 -> SKIP);
									State_disableHV_s0(id__)
						))
				within
					enter?x____:diff(SIDS,{SID_disableHV_s0})!SID_disableHV_s0 -> (State_disableHV_s0_execute(id__,x____))
				
				
				I_disableHV_i0(id__) = let
					T_disableHV_t2(id__) = internal__!TID_disableHV_t2 -> enter!SID_disableHV!SID_disableHV_s0 -> entered!SID_disableHV!SID_disableHV_s0 ->
					SKIP
				within
					T_disableHV_t2(id__)
				
				
				State_disableHV_s1_R(id__) = 
					State_disableHV_s1(id__)
						[|diff(int_int,disableHV_s1_triggers)|]
					SKIP
						 		
				State_disableHV_f0_R(id__) = 
					State_disableHV_f0(id__)
						[|diff(int_int,disableHV_f0_triggers)|]
					SKIP
						 		
				State_disableHV_s0_R(id__) = 
					State_disableHV_s0(id__)
						[|diff(int_int,disableHV_s0_triggers)|]
					SKIP
						 		
					
				STM(id__) = (
					I_disableHV_i0(id__)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0}),
								y____ <- {SID_disableHV_s1,SID_disableHV_f0,SID_disableHV_s0}
						|}|]
					(
						State_disableHV_s1_R(id__)
							[|inter(CS_disableHV_s1_sync,union(CS_disableHV_f0_sync,CS_disableHV_s0_sync))|]
						(
							State_disableHV_f0_R(id__)
								[|inter(CS_disableHV_f0_sync,CS_disableHV_s0_sync)|]
							State_disableHV_s0_R(id__)
						)
					)
				)
				
				-- main process
				AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
			}
		exports
			Timed(OneStep) {
				-- the transition identifiers and memory transitions of an operation definition
				-- are exported here to allow for the renaming of the state machine to include
				-- the renaming of the events of the operation
				external prioritise
				transparent wbisim
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_disableHV_t0
				              | TID_disableHV_t1
				              | TID_disableHV_t2
				              | TID_disableHV_t3
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_disableHV_t0,	TID_disableHV_t1,	TID_disableHV_t3
				}
				
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_arg, set_arg, getV_arg: core_boolean
				channel get_setPoint, set_setPoint, getV_setPoint: core_real
				channel get_res, set_res, getV_res: core_boolean
				channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
				channel get_lim, set_lim, getV_lim: core_boolean
				channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
				channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
				channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
				channel get_overLimit, set_overLimit, getV_overLimit: core_real
				channel get_underLimit, set_underLimit, getV_underLimit: core_real
						
				-- shared variable channels
				channel set_EXT_setPoint: core_real
				channel set_EXT_res: core_boolean
				channel set_EXT_errorFlag: core_boolean
				channel set_EXT_lim: core_boolean
				channel set_EXT_supplyLim: core_boolean
				channel set_EXT_ActualHV: core_real
				channel set_EXT_errorAck: core_boolean
				channel set_EXT_overLimit: core_real
				channel set_EXT_underLimit: core_real
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel int_pwmSignal__: TIDS.InOut.Power
				channel int_pwmSignal: InOut.Power
				
				-- declare clocks
				datatype ClockSet = dummyC
				channel clockReset 		-- no clocks declared
					
				-- declare trigger deadlines channel
				channel deadline : TIDS.deadlineSignal
					
				-- compile clocks process
				
				-- set of strings that uniquely identify the waiting conditions, each of which is 
				-- used to synchronise with the Memory process to set the correspoding variable in
				-- the memory process.
				datatype setWC_identifierSet = dummyWC
				
				-- declaring getWC and setWC channel for updating memory variables related to clocks
				channel setWC : setWC_identifierSet.Bool
				channel getWC : setWC_identifierSet.Bool
				
				-- Set of pairs capturing waiting condition processes and their alphabet.
				-- It includes the corresponding set of the defined operations.
				WCset(id__) = Union({
					{
					}
					})
				
				-- Auxiliary function to rename the channel set for required clocks.
				
				-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
				-- It includes the corresponding set of the defined operations.
				WCsync = Union({
					{||}
					})
				-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
				-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
				WCresets = Union({
					{| | x <- SIDS |}
					})
				-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
				WCsets = Union({
					{|setWC|}
					})
				
				
				
				-- Clocks process
				Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
				
				-- collects all clockResets
				ClockResets = {|clockReset|}
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__,
					 arg,
					 setPoint,
					 res,
					 errorFlag,
					 lim,
					 supplyLim,
					 ActualHV,
					 errorAck,
					 overLimit,
					 underLimit) = (
					((arg==false))&internal__!TID_disableHV_t0 -> SKIP
					[]
					((arg==true))&internal__!TID_disableHV_t1 -> SKIP
					[]
					internal__!TID_disableHV_t2 -> SKIP
					[]
					internal__!TID_disableHV_t3 -> SKIP
				
					[]
						set_arg?x__ -> SKIP
				 	)
				MemoryTransitions_disableHV(id__) =
					(
					OP_disableHV::getV_arg?arg ->	
					OP_disableHV::getV_setPoint?setPoint ->	
					OP_disableHV::getV_res?res ->	
					OP_disableHV::getV_errorFlag?errorFlag ->	
					OP_disableHV::getV_lim?lim ->	
					OP_disableHV::getV_supplyLim?supplyLim ->	
					OP_disableHV::getV_ActualHV?ActualHV ->	
					OP_disableHV::getV_errorAck?errorAck ->	
					OP_disableHV::getV_overLimit?overLimit ->	
					OP_disableHV::getV_underLimit?underLimit ->
					 MemoryTransitions(id__,
					 	 arg,
					 	 setPoint,
					 	 res,
					 	 errorFlag,
					 	 lim,
					 	 supplyLim,
					 	 ActualHV,
					 	 errorAck,
					 	 overLimit,
					 	 underLimit);
					 MemoryTransitions_disableHV(id__)
					)
				
				-- synchronisation, hiding and process sets 
		
				
				MemoryVariablesProcesses_disableHV = Union(
					{
						{
							Memory_arg(true)
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						setWC,
						set_arg,
						getV_arg
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getWC,
						getV_arg
					|}
				})
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_arg,set_arg|},
							{||}
						)
							
						,
						{|internal__.TID_disableHV_t0,
						internal__.TID_disableHV_t1,
						internal__.TID_disableHV_t2,
						internal__.TID_disableHV_t3|}
					),
					{|deadline|},
					WCresets
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_arg,set_arg|},
						{||}
					)
					,
					{|deadline|}
				})
				
				MachineInternalEvents = {|
					internal__
				|}
		
				-- individual memory processes
				Memory_arg(x__) = ( 
					get_arg!x__ -> Memory_arg(x__)
					[]
					getV_arg!x__ -> Memory_arg(x__)
					[]
					set_arg?x__ -> Memory_arg(x__)
				)
				
				-- Memory cell processes
				Memory_opt_res(x__) = ( 
					get_res!x__ -> Memory_opt_res(x__)
					[]
					set_res?x__ -> Memory_opt_res(x__)
					[]
					set_EXT_res?x__ -> Memory_opt_res(x__)
				)
				Memory_opt_errorFlag(x__) = ( 
					get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
					[]
					set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					[]
					set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
				)
				Memory_opt_overLimit(x__) = ( 
					get_overLimit!x__ -> Memory_opt_overLimit(x__)
					[]
					set_overLimit?x__ -> Memory_opt_overLimit(x__)
					[]
					set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
				)
				Memory_opt_ActualHV(x__) = ( 
					get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
					[]
					set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					[]
					set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
				)
				Memory_opt_lim(x__) = ( 
					get_lim!x__ -> Memory_opt_lim(x__)
					[]
					set_lim?x__ -> Memory_opt_lim(x__)
					[]
					set_EXT_lim?x__ -> Memory_opt_lim(x__)
				)
				Memory_opt_arg(x__) = ( 
					get_arg!x__ -> Memory_opt_arg(x__)
					[]
					set_arg?x__ -> Memory_opt_arg(x__)
				)
				Memory_opt_setPoint(x__) = ( 
					get_setPoint!x__ -> Memory_opt_setPoint(x__)
					[]
					set_setPoint?x__ -> Memory_opt_setPoint(x__)
					[]
					set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
				)
				Memory_opt_errorAck(x__) = ( 
					get_errorAck!x__ -> Memory_opt_errorAck(x__)
					[]
					set_errorAck?x__ -> Memory_opt_errorAck(x__)
					[]
					set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
				)
				Memory_opt_underLimit(x__) = ( 
					get_underLimit!x__ -> Memory_opt_underLimit(x__)
					[]
					set_underLimit?x__ -> Memory_opt_underLimit(x__)
					[]
					set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
				)
				Memory_opt_supplyLim(x__) = ( 
					get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
					[]
					set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					[]
					set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
				)
		
				-- combined individual memory processes
				MemoryVariables = ||| P : MemoryVariablesProcesses_disableHV @ P
			
				-- definition of the behaviour of state machines (default and optimised)
				D__(id__) = AUX(id__) \ internal_events
				O__(id__) = D__(id__)
			}
		endmodule
		module OP_supplyVoltCheck
			Timed(OneStep) {
						
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_supplyVoltCheck
				              | SID_supplyVoltCheck_s0
				              | SID_supplyVoltCheck_f0
				
				int_int = {|
					ext_setPoint__.TID_supplyVoltCheck_t1,
					ext_pow24VStatus__.TID_supplyVoltCheck_t1,
					internal__.TID_supplyVoltCheck_t1,
					ext_setPoint__.TID_supplyVoltCheck_t2,
					ext_pow24VStatus__.TID_supplyVoltCheck_t2,
					internal__.TID_supplyVoltCheck_t2
				|}
					
				
				internal_events = {|enter,entered,exit,exited,terminate|}
				
				-- declaring all states
				CS_supplyVoltCheck_s0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0},
					y____ <- {SID_supplyVoltCheck_s0}
				|}
				
				
				supplyVoltCheck_s0_triggers = {|
					ext_pow24VStatus__.TID_supplyVoltCheck_t1,
					ext_pow24VStatus__.TID_supplyVoltCheck_t2
				|}
				
				State_supplyVoltCheck_s0(id__) = let
					T_supplyVoltCheck_t1(id__) = ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power -> set_power!power ->  (exit.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
										SKIP;exited.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
										true & (set_lim!false -> SKIP);enter!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 -> entered!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 ->
										State_supplyVoltCheck_s0(id__)
					)
					T_supplyVoltCheck_t2(id__) = ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power -> set_power!power ->  (exit.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
										SKIP;exited.SID_supplyVoltCheck_s0.SID_supplyVoltCheck_s0 -> SKIP;
										true & (set_lim!true -> SKIP);enter!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 -> entered!SID_supplyVoltCheck_s0!SID_supplyVoltCheck_f0 ->
										State_supplyVoltCheck_s0(id__)
					)
					State_supplyVoltCheck_s0_execute(id__,o____) = SKIP; 
						entered!o____!SID_supplyVoltCheck_s0 ->
						(SKIP; STOP /\ (
							T_supplyVoltCheck_t1(id__)[]
							T_supplyVoltCheck_t2(id__)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2}) -> exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
									SKIP;
									exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
									State_supplyVoltCheck_s0(id__)
							[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
									SKIP;
									exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
									State_supplyVoltCheck_s0(id__)
							[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_supplyVoltCheck_t1,TID_supplyVoltCheck_t2})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (
									SKIP;
									exited!y____!SID_supplyVoltCheck_s0 -> SKIP);
									State_supplyVoltCheck_s0(id__)
						))
				within
					enter?x____:diff(SIDS,{SID_supplyVoltCheck_s0})!SID_supplyVoltCheck_s0 -> (State_supplyVoltCheck_s0_execute(id__,x____))
				
				CS_supplyVoltCheck_f0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0},
					y____ <- {SID_supplyVoltCheck_f0}
				|}
				
				
				supplyVoltCheck_f0_triggers = {|
				|}
				
				State_supplyVoltCheck_f0(id__) = let
					State_supplyVoltCheck_f0_execute(id__,o____) = SKIP; 
						entered!o____!SID_supplyVoltCheck_f0 ->
						terminate -> SKIP
				within
					enter?x____:diff(SIDS,{SID_supplyVoltCheck_f0})!SID_supplyVoltCheck_f0 -> (State_supplyVoltCheck_f0_execute(id__,x____))
				
				
				I_supplyVoltCheck_i0(id__) = let
					T_supplyVoltCheck_t0(id__) = internal__!TID_supplyVoltCheck_t0 -> enter!SID_supplyVoltCheck!SID_supplyVoltCheck_s0 -> entered!SID_supplyVoltCheck!SID_supplyVoltCheck_s0 ->
					SKIP
				within
					T_supplyVoltCheck_t0(id__)
				
				
				State_supplyVoltCheck_s0_R(id__) = 
					State_supplyVoltCheck_s0(id__)
						[|diff(int_int,supplyVoltCheck_s0_triggers)|]
					SKIP
						 		
				State_supplyVoltCheck_f0_R(id__) = 
					State_supplyVoltCheck_f0(id__)
						[|diff(int_int,supplyVoltCheck_f0_triggers)|]
					SKIP
						 		
					
				STM(id__) = (
					I_supplyVoltCheck_i0(id__)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0}),
								y____ <- {SID_supplyVoltCheck_s0,SID_supplyVoltCheck_f0}
						|}|]
					(
						State_supplyVoltCheck_s0_R(id__)
							[|inter(CS_supplyVoltCheck_s0_sync,CS_supplyVoltCheck_f0_sync)|]
						State_supplyVoltCheck_f0_R(id__)
					)
				)
				
				-- main process
				AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
			}
		exports
			Timed(OneStep) {
				-- the transition identifiers and memory transitions of an operation definition
				-- are exported here to allow for the renaming of the state machine to include
				-- the renaming of the events of the operation
				external prioritise
				transparent wbisim
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_supplyVoltCheck_t0
				              | TID_supplyVoltCheck_t1
				              | TID_supplyVoltCheck_t2
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_supplyVoltCheck_t1,	TID_supplyVoltCheck_t2
				}
				
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_power, set_power, getV_power: Power
				channel get_setPoint, set_setPoint, getV_setPoint: core_real
				channel get_res, set_res, getV_res: core_boolean
				channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
				channel get_lim, set_lim, getV_lim: core_boolean
				channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
				channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
				channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
				channel get_overLimit, set_overLimit, getV_overLimit: core_real
				channel get_underLimit, set_underLimit, getV_underLimit: core_real
						
				-- shared variable channels
				channel set_EXT_setPoint: core_real
				channel set_EXT_res: core_boolean
				channel set_EXT_errorFlag: core_boolean
				channel set_EXT_lim: core_boolean
				channel set_EXT_supplyLim: core_boolean
				channel set_EXT_ActualHV: core_real
				channel set_EXT_errorAck: core_boolean
				channel set_EXT_overLimit: core_real
				channel set_EXT_underLimit: core_real
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel ext_setPoint__: TIDS.InOut.core_real
				channel ext_setPoint: InOut.core_real
				channel ext_pow24VStatus__: TIDS.InOut.Power
				channel ext_pow24VStatus: InOut.Power
				
				-- declare clocks
				datatype ClockSet = dummyC
				channel clockReset 		-- no clocks declared
					
				-- declare trigger deadlines channel
				channel deadline : TIDS.deadlineSignal
					
				-- compile clocks process
				
				-- set of strings that uniquely identify the waiting conditions, each of which is 
				-- used to synchronise with the Memory process to set the correspoding variable in
				-- the memory process.
				datatype setWC_identifierSet = dummyWC
				
				-- declaring getWC and setWC channel for updating memory variables related to clocks
				channel setWC : setWC_identifierSet.Bool
				channel getWC : setWC_identifierSet.Bool
				
				-- Set of pairs capturing waiting condition processes and their alphabet.
				-- It includes the corresponding set of the defined operations.
				WCset(id__) = Union({
					{
					}
					})
				
				-- Auxiliary function to rename the channel set for required clocks.
				
				-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
				-- It includes the corresponding set of the defined operations.
				WCsync = Union({
					{||}
					})
				-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
				-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
				WCresets = Union({
					{| | x <- SIDS |}
					})
				-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
				WCsets = Union({
					{|setWC|}
					})
				
				
				
				-- Clocks process
				Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
				
				-- collects all clockResets
				ClockResets = {|clockReset|}
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__,
					 power,
					 setPoint,
					 res,
					 errorFlag,
					 lim,
					 supplyLim,
					 ActualHV,
					 errorAck,
					 overLimit,
					 underLimit) = (
					internal__!TID_supplyVoltCheck_t0 -> SKIP
					[]
					ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power:{power|power <- Power, (power==Power_On)} -> SKIP
					[]
					ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power:{power|power <- Power, (power==Power_Off)} -> SKIP
				
					[]
						set_power?x__ -> SKIP
				 	)
				MemoryTransitions_supplyVoltCheck(id__) =
					(
					OP_supplyVoltCheck::getV_power?power ->	
					OP_supplyVoltCheck::getV_setPoint?setPoint ->	
					OP_supplyVoltCheck::getV_res?res ->	
					OP_supplyVoltCheck::getV_errorFlag?errorFlag ->	
					OP_supplyVoltCheck::getV_lim?lim ->	
					OP_supplyVoltCheck::getV_supplyLim?supplyLim ->	
					OP_supplyVoltCheck::getV_ActualHV?ActualHV ->	
					OP_supplyVoltCheck::getV_errorAck?errorAck ->	
					OP_supplyVoltCheck::getV_overLimit?overLimit ->	
					OP_supplyVoltCheck::getV_underLimit?underLimit ->
					 MemoryTransitions(id__,
					 	 power,
					 	 setPoint,
					 	 res,
					 	 errorFlag,
					 	 lim,
					 	 supplyLim,
					 	 ActualHV,
					 	 errorAck,
					 	 overLimit,
					 	 underLimit);
					 MemoryTransitions_supplyVoltCheck(id__)
					)
				
				-- synchronisation, hiding and process sets 
		
				
				MemoryVariablesProcesses_supplyVoltCheck = Union(
					{
						{
							Memory_power(Power_On)
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						getV_power,
						set_power,
						setWC,
						ext_pow24VStatus__.TID_supplyVoltCheck_t1,
						ext_pow24VStatus__.TID_supplyVoltCheck_t2
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getV_power,
						getWC
					|}
				})
				MachineMemorySyncSet = Union({
					union(
						union(
							{|get_power,set_power|},
							{||}
						)
							
						,
						{|internal__.TID_supplyVoltCheck_t0,
						ext_pow24VStatus__.TID_supplyVoltCheck_t1,
						ext_pow24VStatus__.TID_supplyVoltCheck_t2|}
					),
					{|deadline|},
					WCresets
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{|get_power,set_power|},
						{||}
					)
					,
					{|deadline|}
				})
				
				MachineInternalEvents = {|
					internal__
				|}
		
				-- individual memory processes
				Memory_power(x__) = ( 
					get_power!x__ -> Memory_power(x__)
					[]
					getV_power!x__ -> Memory_power(x__)
					[]
					set_power?x__ -> Memory_power(x__)
					[]
					ext_pow24VStatus__!TID_supplyVoltCheck_t1.in?power -> Memory_power(power)
					[]
					ext_pow24VStatus__!TID_supplyVoltCheck_t2.in?power -> Memory_power(power)
				)
				
				-- Memory cell processes
				Memory_opt_lim(x__) = ( 
					get_lim!x__ -> Memory_opt_lim(x__)
					[]
					set_lim?x__ -> Memory_opt_lim(x__)
					[]
					set_EXT_lim?x__ -> Memory_opt_lim(x__)
				)
				Memory_opt_power(x__) = ( 
					get_power!x__ -> Memory_opt_power(x__)
					[]
					set_power?x__ -> Memory_opt_power(x__)
				)
				Memory_opt_underLimit(x__) = ( 
					get_underLimit!x__ -> Memory_opt_underLimit(x__)
					[]
					set_underLimit?x__ -> Memory_opt_underLimit(x__)
					[]
					set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
				)
				Memory_opt_errorFlag(x__) = ( 
					get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
					[]
					set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					[]
					set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
				)
				Memory_opt_overLimit(x__) = ( 
					get_overLimit!x__ -> Memory_opt_overLimit(x__)
					[]
					set_overLimit?x__ -> Memory_opt_overLimit(x__)
					[]
					set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
				)
				Memory_opt_res(x__) = ( 
					get_res!x__ -> Memory_opt_res(x__)
					[]
					set_res?x__ -> Memory_opt_res(x__)
					[]
					set_EXT_res?x__ -> Memory_opt_res(x__)
				)
				Memory_opt_ActualHV(x__) = ( 
					get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
					[]
					set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					[]
					set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
				)
				Memory_opt_supplyLim(x__) = ( 
					get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
					[]
					set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					[]
					set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
				)
				Memory_opt_errorAck(x__) = ( 
					get_errorAck!x__ -> Memory_opt_errorAck(x__)
					[]
					set_errorAck?x__ -> Memory_opt_errorAck(x__)
					[]
					set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
				)
				Memory_opt_setPoint(x__) = ( 
					get_setPoint!x__ -> Memory_opt_setPoint(x__)
					[]
					set_setPoint?x__ -> Memory_opt_setPoint(x__)
					[]
					set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
				)
		
				-- combined individual memory processes
				MemoryVariables = ||| P : MemoryVariablesProcesses_supplyVoltCheck @ P
			
				-- definition of the behaviour of state machines (default and optimised)
				D__(id__) = AUX(id__) \ internal_events
				O__(id__) = D__(id__)
			}
		endmodule
		module OP_checkLimits
			Timed(OneStep) {
						
				
				-- declaring identifiers of state and final states
				datatype SIDS = SID_checkLimits
				              | SID_checkLimits_s0
				              | SID_checkLimits_f0
				
				int_int = {|
					ext_setPoint__.TID_checkLimits_t1,
					ext_pow24VStatus__.TID_checkLimits_t1,
					internal__.TID_checkLimits_t1,
					ext_setPoint__.TID_checkLimits_t2,
					ext_pow24VStatus__.TID_checkLimits_t2,
					internal__.TID_checkLimits_t2
				|}
					
				
				internal_events = {|enter,entered,exit,exited,terminate|}
				
				-- declaring all states
				CS_checkLimits_s0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_checkLimits_s0,SID_checkLimits_f0},
					y____ <- {SID_checkLimits_s0}
				|}
				
				
				checkLimits_s0_triggers = {|
					internal__.TID_checkLimits_t2,
					internal__.TID_checkLimits_t1
				|}
				
				State_checkLimits_s0(id__) = let
					T_checkLimits_t1(id__) = internal__!TID_checkLimits_t1 ->  exit.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
										SKIP;exited.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
										true & (set_lim!false -> SKIP);enter!SID_checkLimits_s0!SID_checkLimits_f0 -> entered!SID_checkLimits_s0!SID_checkLimits_f0 ->
										State_checkLimits_s0(id__)
					T_checkLimits_t2(id__) = internal__!TID_checkLimits_t2 ->  exit.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
										SKIP;exited.SID_checkLimits_s0.SID_checkLimits_s0 -> SKIP;
										true & (set_lim!true -> SKIP);enter!SID_checkLimits_s0!SID_checkLimits_f0 -> entered!SID_checkLimits_s0!SID_checkLimits_f0 ->
										State_checkLimits_s0(id__)
					State_checkLimits_s0_execute(id__,o____) = SKIP; 
						entered!o____!SID_checkLimits_s0 ->
						(SKIP; STOP /\ (
							T_checkLimits_t1(id__)[]
							T_checkLimits_t2(id__)
							[]
							internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1}) -> exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
									SKIP;
									exited!y____!SID_checkLimits_s0 -> SKIP);
									State_checkLimits_s0(id__)
							[] ext_setPoint__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
									SKIP;
									exited!y____!SID_checkLimits_s0 -> SKIP);
									State_checkLimits_s0(id__)
							[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_checkLimits_t2,TID_checkLimits_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (
									SKIP;
									exited!y____!SID_checkLimits_s0 -> SKIP);
									State_checkLimits_s0(id__)
						))
				within
					enter?x____:diff(SIDS,{SID_checkLimits_s0})!SID_checkLimits_s0 -> (State_checkLimits_s0_execute(id__,x____))
				
				CS_checkLimits_f0_sync = {|
					enter.y____.x____, 
					entered.y____.x____, 
					exit.y____.x____, 
					exited.y____.x____,
					enter.x____.y____, 
					entered.x____.y____, 
					exit.x____.y____, 
					exited.x____.y____ |
					x____ <- {SID_checkLimits_s0,SID_checkLimits_f0},
					y____ <- {SID_checkLimits_f0}
				|}
				
				
				checkLimits_f0_triggers = {|
				|}
				
				State_checkLimits_f0(id__) = let
					State_checkLimits_f0_execute(id__,o____) = SKIP; 
						entered!o____!SID_checkLimits_f0 ->
						terminate -> SKIP
				within
					enter?x____:diff(SIDS,{SID_checkLimits_f0})!SID_checkLimits_f0 -> (State_checkLimits_f0_execute(id__,x____))
				
				
				I_checkLimits_i0(id__) = let
					T_checkLimits_t0(id__) = internal__!TID_checkLimits_t0 -> enter!SID_checkLimits!SID_checkLimits_s0 -> entered!SID_checkLimits!SID_checkLimits_s0 ->
					SKIP
				within
					T_checkLimits_t0(id__)
				
				
				State_checkLimits_s0_R(id__) = 
					State_checkLimits_s0(id__)
						[|diff(int_int,checkLimits_s0_triggers)|]
					SKIP
						 		
				State_checkLimits_f0_R(id__) = 
					State_checkLimits_f0(id__)
						[|diff(int_int,checkLimits_f0_triggers)|]
					SKIP
						 		
					
				STM(id__) = (
					I_checkLimits_i0(id__)
						[|
							{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
								x____ <- diff(SIDS,{SID_checkLimits_s0,SID_checkLimits_f0}),
								y____ <- {SID_checkLimits_s0,SID_checkLimits_f0}
						|}|]
					(
						State_checkLimits_s0_R(id__)
							[|inter(CS_checkLimits_s0_sync,CS_checkLimits_f0_sync)|]
						State_checkLimits_f0_R(id__)
					)
				)
				
				-- main process
				AUX(id__) = STM(id__)[|{|terminate|}|>SKIP	
			}
		exports
			Timed(OneStep) {
				-- the transition identifiers and memory transitions of an operation definition
				-- are exported here to allow for the renaming of the state machine to include
				-- the renaming of the events of the operation
				external prioritise
				transparent wbisim
				
				-- declaring identifiers of transitions
				datatype TIDS = NULLTRANSITION__
				              | TID_checkLimits_t0
				              | TID_checkLimits_t1
				              | TID_checkLimits_t2
				
				-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
				
				ITIDS = {
					TID_checkLimits_t1,	TID_checkLimits_t2
				}
				
				-- flow channels
				channel internal__ : TIDS
				channel enteredV, enterV, exitV, exitedV : SIDS
				channel enter, entered: SIDS.SIDS
				channel exit,exited: SIDS.SIDS
				channel terminate
				
				-- variable channels
				channel get_setPoint, set_setPoint, getV_setPoint: core_real
				channel get_res, set_res, getV_res: core_boolean
				channel get_errorFlag, set_errorFlag, getV_errorFlag: core_boolean
				channel get_lim, set_lim, getV_lim: core_boolean
				channel get_supplyLim, set_supplyLim, getV_supplyLim: core_boolean
				channel get_ActualHV, set_ActualHV, getV_ActualHV: core_real
				channel get_errorAck, set_errorAck, getV_errorAck: core_boolean
				channel get_overLimit, set_overLimit, getV_overLimit: core_real
				channel get_underLimit, set_underLimit, getV_underLimit: core_real
						
				-- shared variable channels
				channel set_EXT_setPoint: core_real
				channel set_EXT_res: core_boolean
				channel set_EXT_errorFlag: core_boolean
				channel set_EXT_lim: core_boolean
				channel set_EXT_supplyLim: core_boolean
				channel set_EXT_ActualHV: core_real
				channel set_EXT_errorAck: core_boolean
				channel set_EXT_overLimit: core_real
				channel set_EXT_underLimit: core_real
				
				-- local variable channels for defined operations that are required by the state machine
				
				-- declaring state machine events
				channel ext_setPoint__: TIDS.InOut.core_real
				channel ext_setPoint: InOut.core_real
				channel ext_pow24VStatus__: TIDS.InOut.Power
				channel ext_pow24VStatus: InOut.Power
				
				-- declare clocks
				datatype ClockSet = dummyC
				channel clockReset 		-- no clocks declared
					
				-- declare trigger deadlines channel
				channel deadline : TIDS.deadlineSignal
					
				-- compile clocks process
				
				-- set of strings that uniquely identify the waiting conditions, each of which is 
				-- used to synchronise with the Memory process to set the correspoding variable in
				-- the memory process.
				datatype setWC_identifierSet = dummyWC
				
				-- declaring getWC and setWC channel for updating memory variables related to clocks
				channel setWC : setWC_identifierSet.Bool
				channel getWC : setWC_identifierSet.Bool
				
				-- Set of pairs capturing waiting condition processes and their alphabet.
				-- It includes the corresponding set of the defined operations.
				WCset(id__) = Union({
					{
					}
					})
				
				-- Auxiliary function to rename the channel set for required clocks.
				
				-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
				-- It includes the corresponding set of the defined operations.
				WCsync = Union({
					{||}
					})
				-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
				-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
				WCresets = Union({
					{| | x <- SIDS |}
					})
				-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
				WCsets = Union({
					{|setWC|}
					})
				
				
				
				-- Clocks process
				Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
				
				-- collects all clockResets
				ClockResets = {|clockReset|}
				
				-- processes that read variables and offer transitions
				MemoryTransitions(id__,
					 setPoint,
					 res,
					 errorFlag,
					 lim,
					 supplyLim,
					 ActualHV,
					 errorAck,
					 overLimit,
					 underLimit) = (
					internal__!TID_checkLimits_t0 -> SKIP
					[]
					(((ActualHV<=overLimit) and (ActualHV>=underLimit)))&internal__!TID_checkLimits_t1 -> SKIP
					[]
					(((ActualHV<underLimit) or (ActualHV>overLimit)))&internal__!TID_checkLimits_t2 -> SKIP
				 	)
				MemoryTransitions_checkLimits(id__) =
					(
					OP_checkLimits::getV_setPoint?setPoint ->	
					OP_checkLimits::getV_res?res ->	
					OP_checkLimits::getV_errorFlag?errorFlag ->	
					OP_checkLimits::getV_lim?lim ->	
					OP_checkLimits::getV_supplyLim?supplyLim ->	
					OP_checkLimits::getV_ActualHV?ActualHV ->	
					OP_checkLimits::getV_errorAck?errorAck ->	
					OP_checkLimits::getV_overLimit?overLimit ->	
					OP_checkLimits::getV_underLimit?underLimit ->
					 MemoryTransitions(id__,
					 	 setPoint,
					 	 res,
					 	 errorFlag,
					 	 lim,
					 	 supplyLim,
					 	 ActualHV,
					 	 errorAck,
					 	 overLimit,
					 	 underLimit);
					 MemoryTransitions_checkLimits(id__)
					)
				
				-- synchronisation, hiding and process sets 
		
				
				MemoryVariablesProcesses_checkLimits = Union(
					{
						{
						}
					}
				)
				
				MemoryVariablesSyncSet = Union({
					{|
						setWC
					|}	
				})
				
				MemoryVariablesHideSet = Union({
					{|
						getWC
					|}
				})
				MachineMemorySyncSet = Union({
					union(
						union(
							{||},
							{||}
						)
							
						,
						{|internal__.TID_checkLimits_t0,
						internal__.TID_checkLimits_t1,
						internal__.TID_checkLimits_t2|}
					),
					{|deadline|},
					WCresets
				})
				
				MachineMemoryHidingSet = Union({
					union(
						{||},
						{||}
					)
					,
					{|deadline|}
				})
				
				MachineInternalEvents = {|
					internal__
				|}
		
				-- individual memory processes
				
				-- Memory cell processes
				Memory_opt_setPoint(x__) = ( 
					get_setPoint!x__ -> Memory_opt_setPoint(x__)
					[]
					set_setPoint?x__ -> Memory_opt_setPoint(x__)
					[]
					set_EXT_setPoint?x__ -> Memory_opt_setPoint(x__)
				)
				Memory_opt_ActualHV(x__) = ( 
					get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
					[]
					set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
					[]
					set_EXT_ActualHV?x__ -> Memory_opt_ActualHV(x__)
				)
				Memory_opt_errorFlag(x__) = ( 
					get_errorFlag!x__ -> Memory_opt_errorFlag(x__)
					[]
					set_errorFlag?x__ -> Memory_opt_errorFlag(x__)
					[]
					set_EXT_errorFlag?x__ -> Memory_opt_errorFlag(x__)
				)
				Memory_opt_lim(x__) = ( 
					get_lim!x__ -> Memory_opt_lim(x__)
					[]
					set_lim?x__ -> Memory_opt_lim(x__)
					[]
					set_EXT_lim?x__ -> Memory_opt_lim(x__)
				)
				Memory_opt_overLimit(x__) = ( 
					get_overLimit!x__ -> Memory_opt_overLimit(x__)
					[]
					set_overLimit?x__ -> Memory_opt_overLimit(x__)
					[]
					set_EXT_overLimit?x__ -> Memory_opt_overLimit(x__)
				)
				Memory_opt_underLimit(x__) = ( 
					get_underLimit!x__ -> Memory_opt_underLimit(x__)
					[]
					set_underLimit?x__ -> Memory_opt_underLimit(x__)
					[]
					set_EXT_underLimit?x__ -> Memory_opt_underLimit(x__)
				)
				Memory_opt_res(x__) = ( 
					get_res!x__ -> Memory_opt_res(x__)
					[]
					set_res?x__ -> Memory_opt_res(x__)
					[]
					set_EXT_res?x__ -> Memory_opt_res(x__)
				)
				Memory_opt_supplyLim(x__) = ( 
					get_supplyLim!x__ -> Memory_opt_supplyLim(x__)
					[]
					set_supplyLim?x__ -> Memory_opt_supplyLim(x__)
					[]
					set_EXT_supplyLim?x__ -> Memory_opt_supplyLim(x__)
				)
				Memory_opt_errorAck(x__) = ( 
					get_errorAck!x__ -> Memory_opt_errorAck(x__)
					[]
					set_errorAck?x__ -> Memory_opt_errorAck(x__)
					[]
					set_EXT_errorAck?x__ -> Memory_opt_errorAck(x__)
				)
		
				-- combined individual memory processes
				MemoryVariables = ||| P : MemoryVariablesProcesses_checkLimits @ P
			
				-- definition of the behaviour of state machines (default and optimised)
				D__(id__) = AUX(id__) \ internal_events
				O__(id__) = D__(id__)
			}
		endmodule
	
		Timed(OneStep) {
			-- declaring call and ret events for undefined operations
	
						
			-- declaring controller events
			channel currentState: InOut.State
			channel ext_setPoint: InOut.core_real
			channel ext_pow24VStatus: InOut.Power
			channel int_overLimit: InOut.core_real
			channel int_pwmSignal: InOut.Power
			channel int_underLimit: InOut.core_real
			channel int_DisableHV: InOut
			channel int_ActualHV: InOut.core_real
							

		
			-- declaring controller memory
			Memory(id__) = SKIP
			-- declaring controller termination channel
			channel terminate
			
			-- set of visible memory events
			visibleMemoryEvents = {||}
		
			D__(id__) = prioritise(wbisim(
				(
					stm_ref0::D__(id__)[[
						stm_ref0::terminate <- terminate,
						stm_ref0::int_DisableHV <- int_DisableHV,
						stm_ref0::int_ActualHV <- int_ActualHV,
						stm_ref0::int_underLimit <- int_underLimit,
						stm_ref0::int_overLimit <- int_overLimit,
						stm_ref0::ext_setPoint <- ext_setPoint,
						stm_ref0::int_pwmSignal <- int_pwmSignal,
						stm_ref0::ext_pow24VStatus <- ext_pow24VStatus,
						stm_ref0::currentState <- currentState
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
			
			O__(id__) = D__(id__)
			
			-- VS version
			VS__(id__) = prioritise(wbisim(
				(
					stm_ref0::VS__(id__)[[
						stm_ref0::terminate <- terminate,
						stm_ref0::int_DisableHV <- int_DisableHV,
						stm_ref0::int_ActualHV <- int_ActualHV,
						stm_ref0::int_underLimit <- int_underLimit,
						stm_ref0::int_overLimit <- int_overLimit,
						stm_ref0::ext_setPoint <- ext_setPoint,
						stm_ref0::int_pwmSignal <- int_pwmSignal,
						stm_ref0::ext_pow24VStatus <- ext_pow24VStatus,
						stm_ref0::currentState <- currentState
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
		
			HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
		}
	endmodule
	module ctrl1
		Timed(OneStep) {
			shared_variable_events = {|
			|}		
		}	
	exports
		transparent diamond
		transparent sbisim
		transparent wbisim
		transparent chase
		
				module stm_ref0
				exports
					-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
					external prioritise
					transparent wbisim
					transparent dbisim
					transparent sbisim
				
					Timed(OneStep) {	
						-- flow channels
						channel internal__ : TIDS
						channel enteredV, enterV, exitV, exitedV : SIDS
						channel enter, entered: SIDS.SIDS
						channel exit,exited: SIDS.SIDS
						channel terminate
						
						-- variable channels
						channel get_overLimit, set_overLimit: core_real
						channel get_underLimit, set_underLimit: core_real
						channel get_ActualHV, set_ActualHV: core_real
						channel get_power, set_power: Power
								
						-- shared variable channels
						
						-- local variable channels for defined operations that are required by the state machine
						
						-- declaring state machine events
						channel int_overLimit__: TIDS.InOut.core_real
						channel int_overLimit: InOut.core_real
						channel int_underLimit__: TIDS.InOut.core_real
						channel int_underLimit: InOut.core_real
						channel int_DisableHV__: TIDS.InOut
						channel int_DisableHV: InOut
						channel int_ActualHV__: TIDS.InOut.core_real
						channel int_ActualHV: InOut.core_real
						channel ext_pow24VStatus__: TIDS.InOut.Power
						channel ext_pow24VStatus: InOut.Power
						
						-- declaring call and ret events for undefined operations
					
						-- Only the undefined operations are declared here.
						-- If the state machine is in isolation, all required operations will be undefined.
						-- If it is in the context of a controller, the required operations not provided by the
						-- controller will be declared here, and the defined operations will be defined in the
						-- context of the Controller module, and therefore within scope of the state machien module.
						
						
						-- definition of functions used to expose flow channels
						ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
										   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
										   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
										   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
											 
						ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
									[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						
						-- declaring identifiers of state and final states
						datatype SIDS = SID_Watchdog
						              | SID_Watchdog_s0
						              | SID_Watchdog_s0_f0
						              | SID_Watchdog_s0_Waiting
						              | SID_Watchdog_s0_PowerStatusRead
						              | SID_Watchdog_s0_ActualHVRead
						              | SID_Watchdog_s0_PowerAndActualHVRead
						
						-- declaring identifiers of transitions
						datatype TIDS = NULLTRANSITION__
						              | TID_Watchdog_s0_t0
						              | TID_Watchdog_s0_t1
						              | TID_Watchdog_s0_t3
						              | TID_Watchdog_s0_t2
						              | TID_Watchdog_s0_t4
						              | TID_Watchdog_s0_t5
						              | TID_Watchdog_s0_t6
						              | TID_Watchdog_s0_t7
						              | TID_Watchdog_s0_t8
						              | TID_Watchdog_s0_t9
						              | TID_Watchdog_s0_t10
						              | TID_Watchdog_t0
						              | TID_Watchdog_t1
						
						-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
						
						ITIDS = {
							TID_Watchdog_s0_t1,	TID_Watchdog_s0_t3,	TID_Watchdog_s0_t2,	TID_Watchdog_s0_t4,	TID_Watchdog_s0_t5,	TID_Watchdog_s0_t6,	TID_Watchdog_s0_t7,	TID_Watchdog_s0_t8,	TID_Watchdog_s0_t9,	TID_Watchdog_s0_t10,	TID_Watchdog_t1
						}
						
						int_int = {|
							int_overLimit__.TID_Watchdog_s0_t1,
							int_underLimit__.TID_Watchdog_s0_t1,
							int_DisableHV__.TID_Watchdog_s0_t1,
							int_ActualHV__.TID_Watchdog_s0_t1,
							ext_pow24VStatus__.TID_Watchdog_s0_t1,
							internal__.TID_Watchdog_s0_t1,
							int_overLimit__.TID_Watchdog_s0_t3,
							int_underLimit__.TID_Watchdog_s0_t3,
							int_DisableHV__.TID_Watchdog_s0_t3,
							int_ActualHV__.TID_Watchdog_s0_t3,
							ext_pow24VStatus__.TID_Watchdog_s0_t3,
							internal__.TID_Watchdog_s0_t3,
							int_overLimit__.TID_Watchdog_s0_t2,
							int_underLimit__.TID_Watchdog_s0_t2,
							int_DisableHV__.TID_Watchdog_s0_t2,
							int_ActualHV__.TID_Watchdog_s0_t2,
							ext_pow24VStatus__.TID_Watchdog_s0_t2,
							internal__.TID_Watchdog_s0_t2,
							int_overLimit__.TID_Watchdog_s0_t4,
							int_underLimit__.TID_Watchdog_s0_t4,
							int_DisableHV__.TID_Watchdog_s0_t4,
							int_ActualHV__.TID_Watchdog_s0_t4,
							ext_pow24VStatus__.TID_Watchdog_s0_t4,
							internal__.TID_Watchdog_s0_t4,
							int_overLimit__.TID_Watchdog_s0_t5,
							int_underLimit__.TID_Watchdog_s0_t5,
							int_DisableHV__.TID_Watchdog_s0_t5,
							int_ActualHV__.TID_Watchdog_s0_t5,
							ext_pow24VStatus__.TID_Watchdog_s0_t5,
							internal__.TID_Watchdog_s0_t5,
							int_overLimit__.TID_Watchdog_s0_t6,
							int_underLimit__.TID_Watchdog_s0_t6,
							int_DisableHV__.TID_Watchdog_s0_t6,
							int_ActualHV__.TID_Watchdog_s0_t6,
							ext_pow24VStatus__.TID_Watchdog_s0_t6,
							internal__.TID_Watchdog_s0_t6,
							int_overLimit__.TID_Watchdog_s0_t7,
							int_underLimit__.TID_Watchdog_s0_t7,
							int_DisableHV__.TID_Watchdog_s0_t7,
							int_ActualHV__.TID_Watchdog_s0_t7,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t7,
							int_overLimit__.TID_Watchdog_s0_t8,
							int_underLimit__.TID_Watchdog_s0_t8,
							int_DisableHV__.TID_Watchdog_s0_t8,
							int_ActualHV__.TID_Watchdog_s0_t8,
							ext_pow24VStatus__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t8,
							int_overLimit__.TID_Watchdog_s0_t9,
							int_underLimit__.TID_Watchdog_s0_t9,
							int_DisableHV__.TID_Watchdog_s0_t9,
							int_ActualHV__.TID_Watchdog_s0_t9,
							ext_pow24VStatus__.TID_Watchdog_s0_t9,
							internal__.TID_Watchdog_s0_t9,
							int_overLimit__.TID_Watchdog_s0_t10,
							int_underLimit__.TID_Watchdog_s0_t10,
							int_DisableHV__.TID_Watchdog_s0_t10,
							int_ActualHV__.TID_Watchdog_s0_t10,
							ext_pow24VStatus__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t10,
							int_overLimit__.TID_Watchdog_t1,
							int_underLimit__.TID_Watchdog_t1,
							int_DisableHV__.TID_Watchdog_t1,
							int_ActualHV__.TID_Watchdog_t1,
							ext_pow24VStatus__.TID_Watchdog_t1,
							internal__.TID_Watchdog_t1
						|}
							
						
						internal_events = {|enter,entered,exit,exited|}
						shared_variable_events = {|
						|}
								
						
						-- declaring all states
						CS_Watchdog_s0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0},
							y____ <- {SID_Watchdog_s0}
						|}
						
						Watchdog_s0_int_int = {|
							int_overLimit__.TID_Watchdog_s0_t1,
							int_underLimit__.TID_Watchdog_s0_t1,
							int_DisableHV__.TID_Watchdog_s0_t1,
							int_ActualHV__.TID_Watchdog_s0_t1,
							ext_pow24VStatus__.TID_Watchdog_s0_t1,
							internal__.TID_Watchdog_s0_t1,
							int_overLimit__.TID_Watchdog_s0_t3,
							int_underLimit__.TID_Watchdog_s0_t3,
							int_DisableHV__.TID_Watchdog_s0_t3,
							int_ActualHV__.TID_Watchdog_s0_t3,
							ext_pow24VStatus__.TID_Watchdog_s0_t3,
							internal__.TID_Watchdog_s0_t3,
							int_overLimit__.TID_Watchdog_s0_t2,
							int_underLimit__.TID_Watchdog_s0_t2,
							int_DisableHV__.TID_Watchdog_s0_t2,
							int_ActualHV__.TID_Watchdog_s0_t2,
							ext_pow24VStatus__.TID_Watchdog_s0_t2,
							internal__.TID_Watchdog_s0_t2,
							int_overLimit__.TID_Watchdog_s0_t4,
							int_underLimit__.TID_Watchdog_s0_t4,
							int_DisableHV__.TID_Watchdog_s0_t4,
							int_ActualHV__.TID_Watchdog_s0_t4,
							ext_pow24VStatus__.TID_Watchdog_s0_t4,
							internal__.TID_Watchdog_s0_t4,
							int_overLimit__.TID_Watchdog_s0_t5,
							int_underLimit__.TID_Watchdog_s0_t5,
							int_DisableHV__.TID_Watchdog_s0_t5,
							int_ActualHV__.TID_Watchdog_s0_t5,
							ext_pow24VStatus__.TID_Watchdog_s0_t5,
							internal__.TID_Watchdog_s0_t5,
							int_overLimit__.TID_Watchdog_s0_t6,
							int_underLimit__.TID_Watchdog_s0_t6,
							int_DisableHV__.TID_Watchdog_s0_t6,
							int_ActualHV__.TID_Watchdog_s0_t6,
							ext_pow24VStatus__.TID_Watchdog_s0_t6,
							internal__.TID_Watchdog_s0_t6,
							int_overLimit__.TID_Watchdog_s0_t7,
							int_underLimit__.TID_Watchdog_s0_t7,
							int_DisableHV__.TID_Watchdog_s0_t7,
							int_ActualHV__.TID_Watchdog_s0_t7,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t7,
							int_overLimit__.TID_Watchdog_s0_t8,
							int_underLimit__.TID_Watchdog_s0_t8,
							int_DisableHV__.TID_Watchdog_s0_t8,
							int_ActualHV__.TID_Watchdog_s0_t8,
							ext_pow24VStatus__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t8,
							int_overLimit__.TID_Watchdog_s0_t9,
							int_underLimit__.TID_Watchdog_s0_t9,
							int_DisableHV__.TID_Watchdog_s0_t9,
							int_ActualHV__.TID_Watchdog_s0_t9,
							ext_pow24VStatus__.TID_Watchdog_s0_t9,
							internal__.TID_Watchdog_s0_t9,
							int_overLimit__.TID_Watchdog_s0_t10,
							int_underLimit__.TID_Watchdog_s0_t10,
							int_DisableHV__.TID_Watchdog_s0_t10,
							int_ActualHV__.TID_Watchdog_s0_t10,
							ext_pow24VStatus__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t10
						|}
							
						
						Watchdog_s0_int_triggers = {|
							internal__.TID_Watchdog_s0_t0,
							internal__.TID_Watchdog_s0_t1,
							internal__.TID_Watchdog_s0_t3,
							internal__.TID_Watchdog_s0_t2,
							ext_pow24VStatus__.TID_Watchdog_s0_t4,
							int_ActualHV__.TID_Watchdog_s0_t5,
							int_ActualHV__.TID_Watchdog_s0_t6,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t9,
							internal__.TID_Watchdog_s0_t10
						|}
						
						State_Watchdog_s0_f0_R(id__) = 
							State_Watchdog_s0_f0(id__)
						 		[|diff(Watchdog_s0_int_int,Watchdog_s0_f0_triggers)|]
						 	SKIP
						 		
						State_Watchdog_s0_Waiting_R(id__) = 
							State_Watchdog_s0_Waiting(id__)
						 		[|diff(Watchdog_s0_int_int,Watchdog_s0_Waiting_triggers)|]
						 	SKIP
						 		
						State_Watchdog_s0_PowerStatusRead_R(id__) = 
							State_Watchdog_s0_PowerStatusRead(id__)
						 		[|diff(Watchdog_s0_int_int,Watchdog_s0_PowerStatusRead_triggers)|]
						 	SKIP
						 		
						State_Watchdog_s0_ActualHVRead_R(id__) = 
							State_Watchdog_s0_ActualHVRead(id__)
						 		[|diff(Watchdog_s0_int_int,Watchdog_s0_ActualHVRead_triggers)|]
						 	SKIP
						 		
						State_Watchdog_s0_PowerAndActualHVRead_R(id__) = 
							State_Watchdog_s0_PowerAndActualHVRead(id__)
						 		[|diff(Watchdog_s0_int_int,Watchdog_s0_PowerAndActualHVRead_triggers)|]
						 	SKIP
						 		
						State_Watchdog_s0(id__) = (
							State_Watchdog_s0_aux(id__)
								[|
									union(
										diff(int_int, Watchdog_s0_int_triggers),
										{|enter.x____.y____,
										  entered.x____.y____,
										  exit.x____.y____,
										  exited.x____.y____ |
										  x____ <- diff(SIDS,{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead}),
										  y____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead}
									    |}
									)
								|]
							(
								State_Watchdog_s0_f0_R(id__)
									[|inter(CS_Watchdog_s0_f0_sync,union(union(union(CS_Watchdog_s0_Waiting_sync,CS_Watchdog_s0_PowerStatusRead_sync),CS_Watchdog_s0_ActualHVRead_sync),CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
								(
									State_Watchdog_s0_Waiting_R(id__)
										[|inter(CS_Watchdog_s0_Waiting_sync,union(union(CS_Watchdog_s0_PowerStatusRead_sync,CS_Watchdog_s0_ActualHVRead_sync),CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
									(
										State_Watchdog_s0_PowerStatusRead_R(id__)
											[|inter(CS_Watchdog_s0_PowerStatusRead_sync,union(CS_Watchdog_s0_ActualHVRead_sync,CS_Watchdog_s0_PowerAndActualHVRead_sync))|]
										(
											State_Watchdog_s0_ActualHVRead_R(id__)
												[|inter(CS_Watchdog_s0_ActualHVRead_sync,CS_Watchdog_s0_PowerAndActualHVRead_sync)|]
											State_Watchdog_s0_PowerAndActualHVRead_R(id__)
										)
									)
								)
							)
						)
						
						Watchdog_s0_triggers = {|
							internal__.TID_Watchdog_t1,
							internal__.TID_Watchdog_s0_t0,
							internal__.TID_Watchdog_s0_t1,
							int_ActualHV__.TID_Watchdog_s0_t6,
							internal__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t8,
							int_ActualHV__.TID_Watchdog_s0_t5,
							internal__.TID_Watchdog_s0_t2,
							ext_pow24VStatus__.TID_Watchdog_s0_t4,
							internal__.TID_Watchdog_s0_t9,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t3
						|}
						
						State_Watchdog_s0_aux(id__) = let
							T_Watchdog_t1(id__) = internal__!TID_Watchdog_t1 ->  exit.SID_Watchdog_s0.SID_Watchdog_s0 -> SKIP;
												exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
														SKIP;
												SKIP;exited.SID_Watchdog_s0.SID_Watchdog_s0 -> SKIP;
												enter!SID_Watchdog_s0!SID_Watchdog_s0 -> State_Watchdog_s0_aux_execute(id__,SID_Watchdog_s0)
							State_Watchdog_s0_aux_execute(id__,o____) = SKIP; 
							I_Watchdog_s0_i0(id__);
								entered!o____!SID_Watchdog_s0 ->
								(SKIP; STOP /\ (
									T_Watchdog_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_t1,TID_Watchdog_s0_t0,TID_Watchdog_s0_t1,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t2,TID_Watchdog_s0_t4,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (
											exit!SID_Watchdog_s0?z____:{SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead} -> exited!SID_Watchdog_s0!z____ -> 
													SKIP;
											SKIP;
											exited!y____!SID_Watchdog_s0 -> SKIP);
											State_Watchdog_s0_aux(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0})!SID_Watchdog_s0 -> (State_Watchdog_s0_aux_execute(id__,x____))
						
						CS_Watchdog_s0_f0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
							y____ <- {SID_Watchdog_s0_f0}
						|}
						
						
						Watchdog_s0_f0_triggers = {|
						|}
						
						State_Watchdog_s0_f0(id__) = let
							State_Watchdog_s0_f0_execute(id__,o____) = SKIP; 
								entered!o____!SID_Watchdog_s0_f0 ->
								(SKIP; STOP /\ (
									internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_f0 -> SKIP);
											State_Watchdog_s0_f0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0_f0})!SID_Watchdog_s0_f0 -> (State_Watchdog_s0_f0_execute(id__,x____))
						
						CS_Watchdog_s0_Waiting_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
							y____ <- {SID_Watchdog_s0_Waiting}
						|}
						
						
						Watchdog_s0_Waiting_triggers = {|
							int_ActualHV__.TID_Watchdog_s0_t6,
							internal__.TID_Watchdog_s0_t1,
							internal__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t8,
							int_ActualHV__.TID_Watchdog_s0_t5,
							ext_pow24VStatus__.TID_Watchdog_s0_t4,
							internal__.TID_Watchdog_s0_t2,
							internal__.TID_Watchdog_s0_t9,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t3
						|}
						
						State_Watchdog_s0_Waiting(id__) = let
							T_Watchdog_s0_t4(id__) = ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> set_power!power ->  (exit.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
												SKIP;exited.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
												enter!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_PowerStatusRead -> entered!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_PowerStatusRead ->
												State_Watchdog_s0_Waiting(id__)
							)
							T_Watchdog_s0_t5(id__) = int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> set_ActualHV!ActualHV ->  (exit.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
												SKIP;exited.SID_Watchdog_s0_Waiting.SID_Watchdog_s0_Waiting -> SKIP;
												enter!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_ActualHVRead -> entered!SID_Watchdog_s0_Waiting!SID_Watchdog_s0_ActualHVRead ->
												State_Watchdog_s0_Waiting(id__)
							)
							State_Watchdog_s0_Waiting_execute(id__,o____) = SKIP; 
								entered!o____!SID_Watchdog_s0_Waiting ->
								(SKIP; STOP /\ (
									T_Watchdog_s0_t4(id__)[]
									T_Watchdog_s0_t5(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t5,TID_Watchdog_s0_t4,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_Waiting -> SKIP);
											State_Watchdog_s0_Waiting(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0_Waiting})!SID_Watchdog_s0_Waiting -> (State_Watchdog_s0_Waiting_execute(id__,x____))
						
						CS_Watchdog_s0_PowerStatusRead_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
							y____ <- {SID_Watchdog_s0_PowerStatusRead}
						|}
						
						
						Watchdog_s0_PowerStatusRead_triggers = {|
							int_ActualHV__.TID_Watchdog_s0_t6,
							internal__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t2,
							internal__.TID_Watchdog_s0_t9
						|}
						
						State_Watchdog_s0_PowerStatusRead(id__) = let
							T_Watchdog_s0_t2(id__) = internal__!TID_Watchdog_s0_t2 ->  exit.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_PowerStatusRead(id__)
							T_Watchdog_s0_t6(id__) = int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> set_ActualHV!ActualHV ->  (exit.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_PowerStatusRead.SID_Watchdog_s0_PowerStatusRead -> SKIP;
												enter!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_PowerAndActualHVRead -> entered!SID_Watchdog_s0_PowerStatusRead!SID_Watchdog_s0_PowerAndActualHVRead ->
												State_Watchdog_s0_PowerStatusRead(id__)
							)
							State_Watchdog_s0_PowerStatusRead_execute(id__,o____) = SKIP; 
								entered!o____!SID_Watchdog_s0_PowerStatusRead ->
								(SKIP; STOP /\ (
									T_Watchdog_s0_t2(id__)[]
									T_Watchdog_s0_t6(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t6,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t2,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerStatusRead -> SKIP);
											State_Watchdog_s0_PowerStatusRead(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0_PowerStatusRead})!SID_Watchdog_s0_PowerStatusRead -> (State_Watchdog_s0_PowerStatusRead_execute(id__,x____))
						
						CS_Watchdog_s0_ActualHVRead_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
							y____ <- {SID_Watchdog_s0_ActualHVRead}
						|}
						
						
						Watchdog_s0_ActualHVRead_triggers = {|
							internal__.TID_Watchdog_s0_t1,
							internal__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t9,
							ext_pow24VStatus__.TID_Watchdog_s0_t7,
							internal__.TID_Watchdog_s0_t3
						|}
						
						State_Watchdog_s0_ActualHVRead(id__) = let
							T_Watchdog_s0_t1(id__) = internal__!TID_Watchdog_s0_t1 ->  exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_ActualHVRead(id__)
							T_Watchdog_s0_t3(id__) = internal__!TID_Watchdog_s0_t3 ->  exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_ActualHVRead(id__)
							T_Watchdog_s0_t7(id__) = ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> set_power!power ->  (exit.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_ActualHVRead.SID_Watchdog_s0_ActualHVRead -> SKIP;
												enter!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_PowerAndActualHVRead -> entered!SID_Watchdog_s0_ActualHVRead!SID_Watchdog_s0_PowerAndActualHVRead ->
												State_Watchdog_s0_ActualHVRead(id__)
							)
							State_Watchdog_s0_ActualHVRead_execute(id__,o____) = SKIP; 
								entered!o____!SID_Watchdog_s0_ActualHVRead ->
								(SKIP; STOP /\ (
									T_Watchdog_s0_t1(id__)[]
									T_Watchdog_s0_t3(id__)[]
									T_Watchdog_s0_t7(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t1,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9,TID_Watchdog_s0_t7,TID_Watchdog_s0_t3})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_ActualHVRead -> SKIP);
											State_Watchdog_s0_ActualHVRead(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0_ActualHVRead})!SID_Watchdog_s0_ActualHVRead -> (State_Watchdog_s0_ActualHVRead_execute(id__,x____))
						
						CS_Watchdog_s0_PowerAndActualHVRead_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_Watchdog_s0_f0,SID_Watchdog_s0_Waiting,SID_Watchdog_s0_PowerStatusRead,SID_Watchdog_s0_ActualHVRead,SID_Watchdog_s0_PowerAndActualHVRead},
							y____ <- {SID_Watchdog_s0_PowerAndActualHVRead}
						|}
						
						
						Watchdog_s0_PowerAndActualHVRead_triggers = {|
							internal__.TID_Watchdog_s0_t10,
							internal__.TID_Watchdog_s0_t8,
							internal__.TID_Watchdog_s0_t9
						|}
						
						State_Watchdog_s0_PowerAndActualHVRead(id__) = let
							T_Watchdog_s0_t8(id__) = internal__!TID_Watchdog_s0_t8 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_PowerAndActualHVRead(id__)
							T_Watchdog_s0_t9(id__) = internal__!TID_Watchdog_s0_t9 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_PowerAndActualHVRead(id__)
							T_Watchdog_s0_t10(id__) = internal__!TID_Watchdog_s0_t10 ->  exit.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												SKIP;exited.SID_Watchdog_s0_PowerAndActualHVRead.SID_Watchdog_s0_PowerAndActualHVRead -> SKIP;
												true&(int_DisableHV.out -> SKIP);enter!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 -> entered!SID_Watchdog_s0_PowerAndActualHVRead!SID_Watchdog_s0_f0 ->
												State_Watchdog_s0_PowerAndActualHVRead(id__)
							State_Watchdog_s0_PowerAndActualHVRead_execute(id__,o____) = SKIP; 
								entered!o____!SID_Watchdog_s0_PowerAndActualHVRead ->
								(SKIP; STOP /\ (
									T_Watchdog_s0_t8(id__)[]
									T_Watchdog_s0_t9(id__)[]
									T_Watchdog_s0_t10(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9}) -> exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
									[] int_overLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
									[] int_underLimit__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
									[] int_DisableHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Watchdog_s0_t10,TID_Watchdog_s0_t8,TID_Watchdog_s0_t9})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (
											SKIP;
											exited!y____!SID_Watchdog_s0_PowerAndActualHVRead -> SKIP);
											State_Watchdog_s0_PowerAndActualHVRead(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_Watchdog_s0_PowerAndActualHVRead})!SID_Watchdog_s0_PowerAndActualHVRead -> (State_Watchdog_s0_PowerAndActualHVRead_execute(id__,x____))
						
						
						I_Watchdog_i0(id__) = let
							T_Watchdog_t0(id__) = internal__!TID_Watchdog_t0 -> true&(int_overLimit.in?overLimit -> set_overLimit!overLimit -> SKIP);true&(int_underLimit.in?underLimit -> set_underLimit!underLimit -> SKIP);enter!SID_Watchdog!SID_Watchdog_s0 -> entered!SID_Watchdog!SID_Watchdog_s0 ->
							SKIP
						within
							T_Watchdog_t0(id__)
						
						I_Watchdog_s0_i0(id__) = let
							T_Watchdog_s0_t0(id__) = internal__!TID_Watchdog_s0_t0 -> enter!SID_Watchdog_s0!SID_Watchdog_s0_Waiting -> entered!SID_Watchdog_s0!SID_Watchdog_s0_Waiting ->
							SKIP
						within
							T_Watchdog_s0_t0(id__)
						
						
						State_Watchdog_s0_R(id__) = 
							State_Watchdog_s0(id__)
								[|diff(int_int,Watchdog_s0_triggers)|]
							SKIP
								 		
							
						STM(id__) = (
							I_Watchdog_i0(id__)
								[|
									{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
										x____ <- diff(SIDS,{SID_Watchdog_s0}),
										y____ <- {SID_Watchdog_s0}
								|}|]
							State_Watchdog_s0_R(id__)
						)
						
						-- optimized memory process
						channel getV_overLimit: core_real
						channel getV_underLimit: core_real
						channel getV_ActualHV: core_real
						channel getV_power: Power
						
						-- individual memory processes
						Memory_overLimit(x__) = ( 
							get_overLimit!x__ -> Memory_overLimit(x__)
							[]
							getV_overLimit!x__ -> Memory_overLimit(x__)
							[]
							set_overLimit?x__ -> Memory_overLimit(x__)
						)
						Memory_underLimit(x__) = ( 
							get_underLimit!x__ -> Memory_underLimit(x__)
							[]
							getV_underLimit!x__ -> Memory_underLimit(x__)
							[]
							set_underLimit?x__ -> Memory_underLimit(x__)
						)
						Memory_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							getV_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_ActualHV(x__)
							[]
							int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> Memory_ActualHV(ActualHV)
							[]
							int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> Memory_ActualHV(ActualHV)
						)
						Memory_power(x__) = ( 
							get_power!x__ -> Memory_power(x__)
							[]
							getV_power!x__ -> Memory_power(x__)
							[]
							set_power?x__ -> Memory_power(x__)
							[]
							ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> Memory_power(power)
							[]
							ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> Memory_power(power)
						)
						Memory_WC_TID_Watchdog_t1_0(x__) = (
							getWC.WC_TID_Watchdog_t1_0_ID!x__ -> Memory_WC_TID_Watchdog_t1_0(x__)
							[]
							setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Memory_WC_TID_Watchdog_t1_0(x__)
						)
						
						-- processes that read variables and offer transitions
						MemoryTransitions(id__,
							 overLimit,
							 underLimit,
							 ActualHV,
							 power,
							 WC_TID_Watchdog_t1_0) = (
							internal__!TID_Watchdog_s0_t0 -> SKIP
							[]
							((ActualHV>overLimit))&internal__!TID_Watchdog_s0_t1 -> SKIP
							[]
							((ActualHV<underLimit))&internal__!TID_Watchdog_s0_t3 -> SKIP
							[]
							((power==Power_Off))&internal__!TID_Watchdog_s0_t2 -> SKIP
							[]
							ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> SKIP
							[]
							int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> SKIP
							[]
							int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> SKIP
							[]
							ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> SKIP
							[]
							((ActualHV<underLimit))&internal__!TID_Watchdog_s0_t8 -> SKIP
							[]
							((ActualHV>overLimit))&internal__!TID_Watchdog_s0_t9 -> SKIP
							[]
							((power==Power_Off))&internal__!TID_Watchdog_s0_t10 -> SKIP
							[]
							internal__!TID_Watchdog_t0 -> SKIP
							[]
							(WC_TID_Watchdog_t1_0)&internal__!TID_Watchdog_t1 -> SKIP
						
							[]
								set_overLimit?x__ -> SKIP
							[]
							set_underLimit?x__ -> SKIP
							[]
							set_ActualHV?x__ -> SKIP
							[]
							set_power?x__ -> SKIP
						
							[]
								setWC.WC_TID_Watchdog_t1_0_ID?x__ -> SKIP
						 	)
						MemoryTransitions_Watchdog(id__) =
							(
							getV_overLimit?overLimit ->	
							getV_underLimit?underLimit ->	
							getV_ActualHV?ActualHV ->	
							getV_power?power ->	
							getWC.WC_TID_Watchdog_t1_0_ID?WC_TID_Watchdog_t1_0 ->
							 MemoryTransitions(id__,
							 	 overLimit,
							 	 underLimit,
							 	 ActualHV,
							 	 power,
							 	 WC_TID_Watchdog_t1_0);
							 MemoryTransitions_Watchdog(id__)
							)
						
						-- synchronisation, hiding and process sets 
						MemoryVariablesProcesses_Watchdog = Union(
							{
								{
									Memory_overLimit(0),
									Memory_underLimit(0),
									Memory_ActualHV(0),
									Memory_power(Power_On),
									Memory_WC_TID_Watchdog_t1_0(false)
								}
							}
						)
						
						MemoryVariablesSyncSet = Union({
							{|
								int_ActualHV__.TID_Watchdog_s0_t6,
								getV_power,
								set_overLimit,
								set_ActualHV,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								int_ActualHV__.TID_Watchdog_s0_t5,
								set_power,
								setWC,
								setWC.WC_TID_Watchdog_t1_0_ID,
								getWC.WC_TID_Watchdog_t1_0_ID,
								set_underLimit,
								getV_underLimit,
								getV_overLimit,
								getV_ActualHV
							|}	
						})
						
						MemoryVariablesHideSet = Union({
							{|
								getV_power,
								getWC,
								getV_underLimit,
								getV_overLimit,
								getV_ActualHV
							|}
						})
						
						-- combined individual memory processes
						MemoryVariables = ||| P : MemoryVariablesProcesses_Watchdog @ P
						
						-- complete memory process
						MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_Watchdog(id__)) \ MemoryVariablesHideSet
						
						-- optimised memory
						-- Sets of named elements identified according to transition conditions:
						-- {}
						-- {underLimit,ActualHV}
						-- {power}
						-- {ActualHV,overLimit}
						-- {WC_TID_Watchdog_t1_0}
						-- Summary of all identified named elements:
						-- {
						-- underLimit
						-- power
						-- ActualHV
						-- overLimit
						-- WC_TID_Watchdog_t1_0
						-- }
						
						-- Allocation plan:
						-- 0:{}
						--	=> {
						--		TID_Watchdog_s0_t4,
						--		TID_Watchdog_t0,
						--		TID_Watchdog_s0_t7,
						--		TID_Watchdog_s0_t5,
						--		TID_Watchdog_s0_t0,
						--		TID_Watchdog_s0_t6}
						-- 3:{underLimit,ActualHV}
						--	=> {
						--		TID_Watchdog_s0_t3,
						--		TID_Watchdog_s0_t8}
						-- 1:{power}
						--	=> {
						--		TID_Watchdog_s0_t2,
						--		TID_Watchdog_s0_t10}
						-- 4:{ActualHV,overLimit}
						--	=> {
						--		TID_Watchdog_s0_t9,
						--		TID_Watchdog_s0_t1}
						-- 2:{WC_TID_Watchdog_t1_0}
						--	=> {
						--		TID_Watchdog_t1}
						
						-- Memory transition processes
						MemoryTransitions_opt_0(id__) =
						(
							let
								Update = Current(id__)
								Current(id__)
								 	   = 
								 	   ext_pow24VStatus__!TID_Watchdog_s0_t4.in?power -> Update
								 	   []
								 	   internal__!TID_Watchdog_t0 -> Update
								 	   []
								 	   ext_pow24VStatus__!TID_Watchdog_s0_t7.in?power -> Update
								 	   []
								 	   int_ActualHV__!TID_Watchdog_s0_t5.in?ActualHV -> Update
								 	   []
								 	   internal__!TID_Watchdog_s0_t0 -> Update
								 	   []
								 	   int_ActualHV__!TID_Watchdog_s0_t6.in?ActualHV -> Update
							within
								Update
						)
						MemoryTransitions_opt_3(id__) =
						(
							let
								Update = 
								get_underLimit?underLimit ->
								get_ActualHV?ActualHV ->
								Current(id__,
									 underLimit,
									 ActualHV)
								Current(id__,
									 underLimit,
									 ActualHV)
								 	   = 
								 	   ((ActualHV<underLimit))&(internal__!TID_Watchdog_s0_t3 -> Update)
								 	   []
								 	   ((ActualHV<underLimit))&(internal__!TID_Watchdog_s0_t8 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_underLimit?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_ActualHV?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_1(id__) =
						(
							let
								Update = 
								get_power?power ->
								Current(id__,
									 power)
								Current(id__,
									 power)
								 	   = 
								 	   ((power==Power_Off))&(internal__!TID_Watchdog_s0_t2 -> Update)
								 	   []
								 	   ((power==Power_Off))&(internal__!TID_Watchdog_s0_t10 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_power?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_4(id__) =
						(
							let
								Update = 
								get_ActualHV?ActualHV ->
								get_overLimit?overLimit ->
								Current(id__,
									 ActualHV,
									 overLimit)
								Current(id__,
									 ActualHV,
									 overLimit)
								 	   = 
								 	   ((ActualHV>overLimit))&(internal__!TID_Watchdog_s0_t9 -> Update)
								 	   []
								 	   ((ActualHV>overLimit))&(internal__!TID_Watchdog_s0_t1 -> Update)
								 	   	 
								 	   	 []
								 	   	 set_ActualHV?x__ -> Update
								 	   	 []
								 	   	 
								 	   	 set_overLimit?x__ -> Update
							within
								Update
						)
						MemoryTransitions_opt_2(id__) =
						(
							let
								Update = 
								getWC.WC_TID_Watchdog_t1_0_ID?WC_TID_Watchdog_t1_0 ->
								Current(id__,
									 WC_TID_Watchdog_t1_0)
								Current(id__,
									 WC_TID_Watchdog_t1_0)
								 	   = 
								 	   (WC_TID_Watchdog_t1_0)&(internal__!TID_Watchdog_t1 -> Update)
								 	   	 
								 	   	 []
								 	   	 setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Update
							within
								Update
						)
						
						-- Memory cell processes
						Memory_opt_underLimit(x__) = ( 
							get_underLimit!x__ -> Memory_opt_underLimit(x__)
							[]
							set_underLimit?x__ -> Memory_opt_underLimit(x__)
						)
						Memory_opt_power(x__) = ( 
							get_power!x__ -> Memory_opt_power(x__)
							[]
							set_power?x__ -> Memory_opt_power(x__)
						)
						Memory_opt_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						)
						Memory_opt_overLimit(x__) = ( 
							get_overLimit!x__ -> Memory_opt_overLimit(x__)
							[]
							set_overLimit?x__ -> Memory_opt_overLimit(x__)
						)
						Memory_opt_WC_TID_Watchdog_t1_0(x__) = ( 
							getWC.WC_TID_Watchdog_t1_0_ID!x__ -> Memory_opt_WC_TID_Watchdog_t1_0(x__)
							[]
							setWC.WC_TID_Watchdog_t1_0_ID?x__ -> Memory_opt_WC_TID_Watchdog_t1_0(x__)
						)
						
						-- Composition of memory, StateMachine and Memory transition processes
						
						MemorySTM_opt(id__) =
							dbisim(
							  sbisim(Memory_opt_underLimit(0)
							      	[| {|get_underLimit,set_underLimit|} |] 
							      	dbisim(
							      	  sbisim(Memory_opt_ActualHV(0)
							      	      	[| {|set_ActualHV,get_ActualHV|} |] 
							      	      	sbisim(	
							      	      	  dbisim(
							      	      	    sbisim(dbisim(
							      	      	      sbisim(Memory_opt_power(Power_On)
							      	      	          	[| {|get_power,set_power|} |] 
							      	      	          	sbisim(	
							      	      	          	  dbisim(
							      	      	          	    sbisim(dbisim(
							      	      	          	      sbisim(Memory_opt_overLimit(0)
							      	      	          	          	[| {|set_overLimit,get_overLimit|} |] 
							      	      	          	          	sbisim(	
							      	      	          	          	  dbisim(
							      	      	          	          	    sbisim(dbisim(
							      	      	          	          	      sbisim(Memory_opt_WC_TID_Watchdog_t1_0(false)
							      	      	          	          	          	[| {|setWC.WC_TID_Watchdog_t1_0_ID,getWC.WC_TID_Watchdog_t1_0_ID|} |] 
							      	      	          	          	          	sbisim(	
							      	      	          	          	          	  dbisim(
							      	      	          	          	          	    sbisim(sbisim(	
							      	      	          	          	          	      dbisim(
							      	      	          	          	          	        sbisim(STM_core(id__)
							      	      	          	          	          	          	  [| {|int_ActualHV__.TID_Watchdog_s0_t6,ext_pow24VStatus__.TID_Watchdog_s0_t7,internal__.TID_Watchdog_s0_t0,ext_pow24VStatus__.TID_Watchdog_s0_t4,internal__.TID_Watchdog_t0,int_ActualHV__.TID_Watchdog_s0_t5|} |]
							      	      	          	          	          	          	  MemoryTransitions_opt_0(id__)
							      	      	          	          	          	          	  )\{|internal__.TID_Watchdog_s0_t0|})
							      	      	          	          	          	          )
							      	      	          	          	          	      	  [| {|internal__.TID_Watchdog_t1,setWC.WC_TID_Watchdog_t1_0_ID|} |]
							      	      	          	          	          	      	  MemoryTransitions_opt_2(id__)
							      	      	          	          	          	      	  )\{||})
							      	      	          	          	          	      )
							      	      	          	          	          	) \ {|setWC.WC_TID_Watchdog_t1_0_ID,getWC.WC_TID_Watchdog_t1_0_ID|}
							      	      	          	          	          )
							      	      	          	          	      	  [| {|internal__.TID_Watchdog_s0_t1,set_ActualHV,set_overLimit,internal__.TID_Watchdog_s0_t9|} |]
							      	      	          	          	      	  MemoryTransitions_opt_4(id__)
							      	      	          	          	      	  )\{||})
							      	      	          	          	      )
							      	      	          	          	) \ {|set_overLimit,get_overLimit|}
							      	      	          	          )
							      	      	          	      	  [| {|internal__.TID_Watchdog_s0_t2,set_power,internal__.TID_Watchdog_s0_t10|} |]
							      	      	          	      	  MemoryTransitions_opt_1(id__)
							      	      	          	      	  )\{||})
							      	      	          	      )
							      	      	          	) \ {|get_power,set_power|}
							      	      	          )
							      	      	      	  [| {|set_ActualHV,internal__.TID_Watchdog_s0_t8,set_underLimit,internal__.TID_Watchdog_s0_t3|} |]
							      	      	      	  MemoryTransitions_opt_3(id__)
							      	      	      	  )\{||})
							      	      	      )
							      	      	) \ {|set_ActualHV,get_ActualHV|}
							      	      )
							      	) \ {|get_underLimit,set_underLimit|}
							      )
						
						-- main process
						
						MachineMemorySyncSet = Union({
							union(
								union(
									{|get_overLimit,set_overLimit,
									get_underLimit,set_underLimit,
									get_ActualHV,set_ActualHV,
									get_power,set_power|},
									{||}
								)
									
								,
								{|internal__.TID_Watchdog_s0_t0,
								internal__.TID_Watchdog_s0_t1,
								internal__.TID_Watchdog_s0_t3,
								internal__.TID_Watchdog_s0_t2,
								ext_pow24VStatus__.TID_Watchdog_s0_t4,
								int_ActualHV__.TID_Watchdog_s0_t5,
								int_ActualHV__.TID_Watchdog_s0_t6,
								ext_pow24VStatus__.TID_Watchdog_s0_t7,
								internal__.TID_Watchdog_s0_t8,
								internal__.TID_Watchdog_s0_t9,
								internal__.TID_Watchdog_s0_t10,
								internal__.TID_Watchdog_t0,
								internal__.TID_Watchdog_t1|}
							),
							{|deadline|},
							WCresets
						})
						
						MachineMemoryHidingSet = Union({
							union(
								{|get_overLimit,set_overLimit,
								get_underLimit,set_underLimit,
								get_ActualHV,set_ActualHV,
								get_power,set_power|},
								{||}
							)
							,
							{|deadline|}
						})
						
						MachineInternalEvents = {|
							internal__
						|}
					
						-- main process
						AUX(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							(
								(MemoryN(id__))
									[| union(WCsets,WCsync) |]
								Clocks(id__)
							)\WCsets
						)
						[[
							int_overLimit__.x____ <- int_overLimit,
							int_underLimit__.x____ <- int_underLimit,
							int_DisableHV__.x____ <- int_DisableHV,
							int_ActualHV__.x____ <- int_ActualHV,
							ext_pow24VStatus__.x____ <- ext_pow24VStatus
							| x____ <- TIDS
						]]
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP\MachineInternalEvents)
						,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						STM_core(id__) = 
							dbisim(
								sbisim(
										(STM(id__)
										[| union(WCsync,WCresets) |]
										Clocks(id__))\WCresets
									  )
								  )
						
						AUX_opt(id__) = 
							prioritise(
								(MemorySTM_opt(id__)
								)[[
									int_overLimit__.x____ <- int_overLimit,
									int_underLimit__.x____ <- int_underLimit,
									int_DisableHV__.x____ <- int_DisableHV,
									int_ActualHV__.x____ <- int_ActualHV,
									ext_pow24VStatus__.x____ <- ext_pow24VStatus
									| x____ <- TIDS
								]]
							[|{|terminate|}|>SKIP\MachineInternalEvents
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						internal_(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
						)
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP)
						,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
						-- declare clocks
						datatype ClockSet = dummyC
						channel clockReset 				-- no clocks declared
						
						-- declare trigger deadlines channel
						channel deadline : TIDS.deadlineSignal
						
						-- compile clocks process
						
						-- set of strings that uniquely identify the waiting conditions, each of which is 
						-- used to synchronise with the Memory process to set the correspoding variable in
						-- the memory process.
						datatype setWC_identifierSet = dummyWC
						                             | WC_TID_Watchdog_t1_0_ID
						
						-- declaring getWC and setWC channel for updating memory variables related to clocks
						channel setWC : setWC_identifierSet.Bool
						channel getWC : setWC_identifierSet.Bool
						
						-- Set of pairs capturing waiting condition processes and their alphabet.
						-- It includes the corresponding set of the defined operations.
						WCset(id__) = Union({
							{
							({|internal__.TID_Watchdog_t1,setWC.WC_TID_Watchdog_t1_0_ID,entered.x.SID_Watchdog_s0 | x <- SIDS|},P_WC_TID_Watchdog_t1_0(id__))
							}
							})
						
						-- Auxiliary function to rename the channel set for required clocks.
						
						-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
						-- It includes the corresponding set of the defined operations.
						WCsync = Union({
							{|internal__.TID_Watchdog_t1|}
							})
						-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
						-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
						WCresets = Union({
							{|entered.x.SID_Watchdog_s0 | x <- SIDS |}
							})
						-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
						WCsets = Union({
							{|setWC|}
							})
						
						P_WC_TID_Watchdog_t1_0_reset(id__) = entered?x.SID_Watchdog_s0 -> setWC.WC_TID_Watchdog_t1_0_ID.false -> P_WC_TID_Watchdog_t1_0_monitor(id__)
						
						P_WC_TID_Watchdog_t1_0_monitor(id__) = (TimedInterrupt(RUN({|internal__.TID_Watchdog_t1,tock|}),10) ; setWC.WC_TID_Watchdog_t1_0_ID.true -> RUN({|internal__.TID_Watchdog_t1,tock|})) /\ P_WC_TID_Watchdog_t1_0_reset(id__)
						
						P_WC_TID_Watchdog_t1_0(id__) = setWC.WC_TID_Watchdog_t1_0_ID.false -> P_WC_TID_Watchdog_t1_0_monitor(id__)
						
						-- Clocks process
						Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
		
						-- collects all clockResets including those of operations
						ClockResets = Union({
							{|clockReset|}
											})
						
						-- With no internal events visible
						Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
						
						D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
						
						O__(id__) = D__(id__)
						
						-- With enter/entered/exit/exited events visible
						FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
						
						-- With enterV/enteredV/exitV/exitedV events visible
						VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
						
						-- With clock resets visible
						FVS_C__(id__) = AUX(id__)
					}
				endmodule
	
	
		Timed(OneStep) {
			-- declaring call and ret events for undefined operations
	
						
			-- declaring controller events
			channel ext_pow24VStatus: InOut.Power
			channel int_overLimit: InOut.core_real
			channel int_underLimit: InOut.core_real
			channel int_DisableHV: InOut
			channel int_ActualHV: InOut.core_real
							

		
			-- declaring controller memory
			Memory(id__) = SKIP
			-- declaring controller termination channel
			channel terminate
			
			-- set of visible memory events
			visibleMemoryEvents = {||}
		
			D__(id__) = prioritise(wbisim(
				(
					stm_ref0::D__(id__)[[
						stm_ref0::terminate <- terminate,
						stm_ref0::int_ActualHV <- int_ActualHV,
						stm_ref0::int_DisableHV <- int_DisableHV,
						stm_ref0::int_underLimit <- int_underLimit,
						stm_ref0::int_overLimit <- int_overLimit,
						stm_ref0::ext_pow24VStatus <- ext_pow24VStatus
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
			
			O__(id__) = D__(id__)
			
			-- VS version
			VS__(id__) = prioritise(wbisim(
				(
					stm_ref0::VS__(id__)[[
						stm_ref0::terminate <- terminate,
						stm_ref0::int_ActualHV <- int_ActualHV,
						stm_ref0::int_DisableHV <- int_DisableHV,
						stm_ref0::int_underLimit <- int_underLimit,
						stm_ref0::int_overLimit <- int_overLimit,
						stm_ref0::ext_pow24VStatus <- ext_pow24VStatus
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
		
			HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
		}
	endmodule
	module ctrl2
		Timed(OneStep) {
			shared_variable_events = {|
			|}		
		}	
	exports
		transparent diamond
		transparent sbisim
		transparent wbisim
		transparent chase
		
				module stm0
				exports
					-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
					external prioritise
					transparent wbisim
					transparent dbisim
					transparent sbisim
				
					Timed(OneStep) {	
						-- flow channels
						channel internal__ : TIDS
						channel enteredV, enterV, exitV, exitedV : SIDS
						channel enter, entered: SIDS.SIDS
						channel exit,exited: SIDS.SIDS
						channel terminate
						
						-- variable channels
						channel get_power, set_power: Power
								
						-- shared variable channels
						
						-- local variable channels for defined operations that are required by the state machine
						
						-- declaring state machine events
						channel ext_pow24VStatus__: TIDS.InOut.Power
						channel ext_pow24VStatus: InOut.Power
						channel ext_pow24_1__: TIDS.InOut.Power
						channel ext_pow24_1: InOut.Power
						channel ext_pow24_2__: TIDS.InOut.Power
						channel ext_pow24_2: InOut.Power
						
						-- declaring call and ret events for undefined operations
					
						-- Only the undefined operations are declared here.
						-- If the state machine is in isolation, all required operations will be undefined.
						-- If it is in the context of a controller, the required operations not provided by the
						-- controller will be declared here, and the defined operations will be defined in the
						-- context of the Controller module, and therefore within scope of the state machien module.
						
						
						-- definition of functions used to expose flow channels
						ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
										   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
										   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
										   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
											 
						ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
									[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						
						-- declaring identifiers of state and final states
						datatype SIDS = SID_stm0
						              | SID_stm0_s0
						
						-- declaring identifiers of transitions
						datatype TIDS = NULLTRANSITION__
						              | TID_stm0_t0
						              | TID_stm0_t1
						
						-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
						
						ITIDS = {
							TID_stm0_t1
						}
						
						int_int = {|
							ext_pow24VStatus__.TID_stm0_t1,
							ext_pow24_1__.TID_stm0_t1,
							ext_pow24_2__.TID_stm0_t1,
							internal__.TID_stm0_t1
						|}
							
						
						internal_events = {|enter,entered,exit,exited|}
						shared_variable_events = {|
						|}
								
						
						-- declaring all states
						CS_stm0_s0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_stm0_s0},
							y____ <- {SID_stm0_s0}
						|}
						
						
						stm0_s0_triggers = {|
							internal__.TID_stm0_t1
						|}
						
						State_stm0_s0(id__) = let
							T_stm0_t1(id__) = internal__!TID_stm0_t1 ->  exit.SID_stm0_s0.SID_stm0_s0 -> SKIP;
												SKIP;exited.SID_stm0_s0.SID_stm0_s0 -> SKIP;
												get_power?power -> true&(ext_pow24_1.out!power -> SKIP);get_power?power -> true&(ext_pow24_2.out!power -> SKIP);enter!SID_stm0_s0!SID_stm0_s0 -> State_stm0_s0_execute(id__,SID_stm0_s0)
							State_stm0_s0_execute(id__,o____) = true&(ext_pow24VStatus.in?power -> set_power!power -> SKIP); 
								entered!o____!SID_stm0_s0 ->
								(SKIP; STOP /\ (
									T_stm0_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1}) -> exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] ext_pow24VStatus__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] ext_pow24_1__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] ext_pow24_2__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (State_stm0_s0_execute(id__,x____))
						
						
						I_stm0_i0(id__) = let
							T_stm0_t0(id__) = internal__!TID_stm0_t0 -> enter!SID_stm0!SID_stm0_s0 -> entered!SID_stm0!SID_stm0_s0 ->
							SKIP
						within
							T_stm0_t0(id__)
						
						
						State_stm0_s0_R(id__) = 
							State_stm0_s0(id__)
								[|diff(int_int,stm0_s0_triggers)|]
							SKIP
								 		
							
						STM(id__) = (
							I_stm0_i0(id__)
								[|
									{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
										x____ <- diff(SIDS,{SID_stm0_s0}),
										y____ <- {SID_stm0_s0}
								|}|]
							State_stm0_s0_R(id__)
						)
						
						-- optimized memory process
						channel getV_power: Power
						
						-- individual memory processes
						Memory_power(x__) = ( 
							get_power!x__ -> Memory_power(x__)
							[]
							getV_power!x__ -> Memory_power(x__)
							[]
							set_power?x__ -> Memory_power(x__)
						)
						
						-- processes that read variables and offer transitions
						MemoryTransitions(id__,
							 power) = (
							internal__!TID_stm0_t0 -> SKIP
							[]
							internal__!TID_stm0_t1 -> SKIP
						
							[]
								set_power?x__ -> SKIP
						 	)
						MemoryTransitions_stm0(id__) =
							(
							getV_power?power ->
							 MemoryTransitions(id__,
							 	 power);
							 MemoryTransitions_stm0(id__)
							)
						
						-- synchronisation, hiding and process sets 
						MemoryVariablesProcesses_stm0 = Union(
							{
								{
									Memory_power(Power_On)
								}
							}
						)
						
						MemoryVariablesSyncSet = Union({
							{|
								getV_power,
								set_power,
								setWC
							|}	
						})
						
						MemoryVariablesHideSet = Union({
							{|
								getV_power,
								getWC
							|}
						})
						
						-- combined individual memory processes
						MemoryVariables = ||| P : MemoryVariablesProcesses_stm0 @ P
						
						-- complete memory process
						MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_stm0(id__)) \ MemoryVariablesHideSet
						
						-- optimised memory
						-- Sets of named elements identified according to transition conditions:
						-- {}
						-- Summary of all identified named elements:
						-- {
						-- power
						-- }
						
						-- Allocation plan:
						-- 0:{}
						--	=> {
						--		TID_stm0_t1,
						--		TID_stm0_t0}
						
						-- Memory transition processes
						MemoryTransitions_opt_0(id__) =
						(
							let
								Update = Current(id__)
								Current(id__)
								 	   = 
								 	   internal__!TID_stm0_t1 -> Update
								 	   []
								 	   internal__!TID_stm0_t0 -> Update
							within
								Update
						)
						
						-- Memory cell processes
						Memory_opt_power(x__) = ( 
							get_power!x__ -> Memory_opt_power(x__)
							[]
							set_power?x__ -> Memory_opt_power(x__)
						)
						
						-- Composition of memory, StateMachine and Memory transition processes
						
						MemorySTM_opt(id__) =
							sbisim(	
							  dbisim(
							    sbisim(dbisim(sbisim(Memory_opt_power(Power_On)
							          	[| {|get_power,set_power|} |] 
							          	STM_core(id__)
							          	)\ {|get_power,set_power|}
							          )
							      	  [| {|internal__.TID_stm0_t0,internal__.TID_stm0_t1|} |]
							      	  MemoryTransitions_opt_0(id__)
							      	  )\{|internal__.TID_stm0_t0|})
							      )
						
						-- main process
						
						MachineMemorySyncSet = Union({
							union(
								union(
									{|get_power,set_power|},
									{||}
								)
									
								,
								{|internal__.TID_stm0_t0,
								internal__.TID_stm0_t1|}
							),
							{|deadline|},
							WCresets
						})
						
						MachineMemoryHidingSet = Union({
							union(
								{|get_power,set_power|},
								{||}
							)
							,
							{|deadline|}
						})
						
						MachineInternalEvents = {|
							internal__
						|}
					
						-- main process
						AUX(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							(
								(MemoryN(id__))
									[| union(WCsets,WCsync) |]
								Clocks(id__)
							)\WCsets
						)
						[[
							ext_pow24VStatus__.x____ <- ext_pow24VStatus,
							ext_pow24_1__.x____ <- ext_pow24_1,
							ext_pow24_2__.x____ <- ext_pow24_2
							| x____ <- TIDS
						]]
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP\MachineInternalEvents)
						,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						STM_core(id__) = 
							dbisim(
								sbisim(
										(STM(id__)
										[| union(WCsync,WCresets) |]
										Clocks(id__))\WCresets
									  )
								  )
						
						AUX_opt(id__) = 
							prioritise(
								(MemorySTM_opt(id__)
								)[[
									ext_pow24VStatus__.x____ <- ext_pow24VStatus,
									ext_pow24_1__.x____ <- ext_pow24_1,
									ext_pow24_2__.x____ <- ext_pow24_2
									| x____ <- TIDS
								]]
							[|{|terminate|}|>SKIP\MachineInternalEvents
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						internal_(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
						)
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP)
						,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
						-- declare clocks
						datatype ClockSet = dummyC
						channel clockReset 				-- no clocks declared
						
						-- declare trigger deadlines channel
						channel deadline : TIDS.deadlineSignal
						
						-- compile clocks process
						
						-- set of strings that uniquely identify the waiting conditions, each of which is 
						-- used to synchronise with the Memory process to set the correspoding variable in
						-- the memory process.
						datatype setWC_identifierSet = dummyWC
						
						-- declaring getWC and setWC channel for updating memory variables related to clocks
						channel setWC : setWC_identifierSet.Bool
						channel getWC : setWC_identifierSet.Bool
						
						-- Set of pairs capturing waiting condition processes and their alphabet.
						-- It includes the corresponding set of the defined operations.
						WCset(id__) = Union({
							{
							}
							})
						
						-- Auxiliary function to rename the channel set for required clocks.
						
						-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
						-- It includes the corresponding set of the defined operations.
						WCsync = Union({
							{||}
							})
						-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
						-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
						WCresets = Union({
							{| | x <- SIDS |}
							})
						-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
						WCsets = Union({
							{|setWC|}
							})
						
						
						
						-- Clocks process
						Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
		
						-- collects all clockResets including those of operations
						ClockResets = Union({
							{|clockReset|}
											})
						
						-- With no internal events visible
						Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
						
						D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
						
						O__(id__) = D__(id__)
						
						-- With enter/entered/exit/exited events visible
						FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
						
						-- With enterV/enteredV/exitV/exitedV events visible
						VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
						
						-- With clock resets visible
						FVS_C__(id__) = AUX(id__)
					}
				endmodule
	
	
		Timed(OneStep) {
			-- declaring call and ret events for undefined operations
	
						
			-- declaring controller events
			channel ext_pow24VStatus: InOut.Power
			channel ext_pow24_1: InOut.Power
			channel ext_pow24_2: InOut.Power
							

		
			-- declaring controller memory
			Memory(id__) = SKIP
			-- declaring controller termination channel
			channel terminate
			
			-- set of visible memory events
			visibleMemoryEvents = {||}
		
			D__(id__) = prioritise(wbisim(
				(
					stm0::D__(id__)[[
						stm0::terminate <- terminate,
						stm0::ext_pow24VStatus <- ext_pow24VStatus,
						stm0::ext_pow24_1 <- ext_pow24_1,
						stm0::ext_pow24_2 <- ext_pow24_2
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
			
			O__(id__) = D__(id__)
			
			-- VS version
			VS__(id__) = prioritise(wbisim(
				(
					stm0::VS__(id__)[[
						stm0::terminate <- terminate,
						stm0::ext_pow24VStatus <- ext_pow24VStatus,
						stm0::ext_pow24_1 <- ext_pow24_1,
						stm0::ext_pow24_2 <- ext_pow24_2
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
		
			HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
		}
	endmodule
	module ctrl3
		Timed(OneStep) {
			shared_variable_events = {|
			|}		
		}	
	exports
		transparent diamond
		transparent sbisim
		transparent wbisim
		transparent chase
		
				module stm0
				exports
					-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
					external prioritise
					transparent wbisim
					transparent dbisim
					transparent sbisim
				
					Timed(OneStep) {	
						-- flow channels
						channel internal__ : TIDS
						channel enteredV, enterV, exitV, exitedV : SIDS
						channel enter, entered: SIDS.SIDS
						channel exit,exited: SIDS.SIDS
						channel terminate
						
						-- variable channels
						channel get_ActualHV, set_ActualHV: core_real
								
						-- shared variable channels
						
						-- local variable channels for defined operations that are required by the state machine
						
						-- declaring state machine events
						channel int_ActualHV__: TIDS.InOut.core_real
						channel int_ActualHV: InOut.core_real
						channel ActualHV_1__: TIDS.InOut.core_real
						channel ActualHV_1: InOut.core_real
						channel ActualHV_2__: TIDS.InOut.core_real
						channel ActualHV_2: InOut.core_real
						
						-- declaring call and ret events for undefined operations
					
						-- Only the undefined operations are declared here.
						-- If the state machine is in isolation, all required operations will be undefined.
						-- If it is in the context of a controller, the required operations not provided by the
						-- controller will be declared here, and the defined operations will be defined in the
						-- context of the Controller module, and therefore within scope of the state machien module.
						
						
						-- definition of functions used to expose flow channels
						ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
										   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
										   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
										   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
											 
						ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
									[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
									[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
						
						-- declaring identifiers of state and final states
						datatype SIDS = SID_stm0
						              | SID_stm0_s0
						
						-- declaring identifiers of transitions
						datatype TIDS = NULLTRANSITION__
						              | TID_stm0_t0
						              | TID_stm0_t1
						
						-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
						
						ITIDS = {
							TID_stm0_t1
						}
						
						int_int = {|
							int_ActualHV__.TID_stm0_t1,
							ActualHV_1__.TID_stm0_t1,
							ActualHV_2__.TID_stm0_t1,
							internal__.TID_stm0_t1
						|}
							
						
						internal_events = {|enter,entered,exit,exited|}
						shared_variable_events = {|
						|}
								
						
						-- declaring all states
						CS_stm0_s0_sync = {|
							enter.y____.x____, 
							entered.y____.x____, 
							exit.y____.x____, 
							exited.y____.x____,
							enter.x____.y____, 
							entered.x____.y____, 
							exit.x____.y____, 
							exited.x____.y____ |
							x____ <- {SID_stm0_s0},
							y____ <- {SID_stm0_s0}
						|}
						
						
						stm0_s0_triggers = {|
							internal__.TID_stm0_t1
						|}
						
						State_stm0_s0(id__) = let
							T_stm0_t1(id__) = internal__!TID_stm0_t1 ->  exit.SID_stm0_s0.SID_stm0_s0 -> SKIP;
												SKIP;exited.SID_stm0_s0.SID_stm0_s0 -> SKIP;
												get_ActualHV?ActualHV -> true&(ActualHV_1.out!ActualHV -> SKIP);get_ActualHV?ActualHV -> true&(ActualHV_2.out!ActualHV -> SKIP);enter!SID_stm0_s0!SID_stm0_s0 -> State_stm0_s0_execute(id__,SID_stm0_s0)
							State_stm0_s0_execute(id__,o____) = true&(int_ActualHV.in?ActualHV -> set_ActualHV!ActualHV -> SKIP); 
								entered!o____!SID_stm0_s0 ->
								(SKIP; STOP /\ (
									T_stm0_t1(id__)
									[]
									internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1}) -> exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] int_ActualHV__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] ActualHV_1__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
									[] ActualHV_2__?x____:diff(ITIDS,{NULLTRANSITION__,TID_stm0_t1})?d____?aux____ ->	exit?y____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (
											SKIP;
											exited!y____!SID_stm0_s0 -> SKIP);
											State_stm0_s0(id__)
								))
						within
							enter?x____:diff(SIDS,{SID_stm0_s0})!SID_stm0_s0 -> (State_stm0_s0_execute(id__,x____))
						
						
						I_stm0_i0(id__) = let
							T_stm0_t0(id__) = internal__!TID_stm0_t0 -> enter!SID_stm0!SID_stm0_s0 -> entered!SID_stm0!SID_stm0_s0 ->
							SKIP
						within
							T_stm0_t0(id__)
						
						
						State_stm0_s0_R(id__) = 
							State_stm0_s0(id__)
								[|diff(int_int,stm0_s0_triggers)|]
							SKIP
								 		
							
						STM(id__) = (
							I_stm0_i0(id__)
								[|
									{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
										x____ <- diff(SIDS,{SID_stm0_s0}),
										y____ <- {SID_stm0_s0}
								|}|]
							State_stm0_s0_R(id__)
						)
						
						-- optimized memory process
						channel getV_ActualHV: core_real
						
						-- individual memory processes
						Memory_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							getV_ActualHV!x__ -> Memory_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_ActualHV(x__)
						)
						
						-- processes that read variables and offer transitions
						MemoryTransitions(id__,
							 ActualHV) = (
							internal__!TID_stm0_t0 -> SKIP
							[]
							internal__!TID_stm0_t1 -> SKIP
						
							[]
								set_ActualHV?x__ -> SKIP
						 	)
						MemoryTransitions_stm0(id__) =
							(
							getV_ActualHV?ActualHV ->
							 MemoryTransitions(id__,
							 	 ActualHV);
							 MemoryTransitions_stm0(id__)
							)
						
						-- synchronisation, hiding and process sets 
						MemoryVariablesProcesses_stm0 = Union(
							{
								{
									Memory_ActualHV(0)
								}
							}
						)
						
						MemoryVariablesSyncSet = Union({
							{|
								set_ActualHV,
								setWC,
								getV_ActualHV
							|}	
						})
						
						MemoryVariablesHideSet = Union({
							{|
								getWC,
								getV_ActualHV
							|}
						})
						
						-- combined individual memory processes
						MemoryVariables = ||| P : MemoryVariablesProcesses_stm0 @ P
						
						-- complete memory process
						MemoryN(id__) = (MemoryVariables [| MemoryVariablesSyncSet |] MemoryTransitions_stm0(id__)) \ MemoryVariablesHideSet
						
						-- optimised memory
						-- Sets of named elements identified according to transition conditions:
						-- {}
						-- Summary of all identified named elements:
						-- {
						-- ActualHV
						-- }
						
						-- Allocation plan:
						-- 0:{}
						--	=> {
						--		TID_stm0_t1,
						--		TID_stm0_t0}
						
						-- Memory transition processes
						MemoryTransitions_opt_0(id__) =
						(
							let
								Update = Current(id__)
								Current(id__)
								 	   = 
								 	   internal__!TID_stm0_t1 -> Update
								 	   []
								 	   internal__!TID_stm0_t0 -> Update
							within
								Update
						)
						
						-- Memory cell processes
						Memory_opt_ActualHV(x__) = ( 
							get_ActualHV!x__ -> Memory_opt_ActualHV(x__)
							[]
							set_ActualHV?x__ -> Memory_opt_ActualHV(x__)
						)
						
						-- Composition of memory, StateMachine and Memory transition processes
						
						MemorySTM_opt(id__) =
							sbisim(	
							  dbisim(
							    sbisim(dbisim(sbisim(Memory_opt_ActualHV(0)
							          	[| {|set_ActualHV,get_ActualHV|} |] 
							          	STM_core(id__)
							          	)\ {|set_ActualHV,get_ActualHV|}
							          )
							      	  [| {|internal__.TID_stm0_t0,internal__.TID_stm0_t1|} |]
							      	  MemoryTransitions_opt_0(id__)
							      	  )\{|internal__.TID_stm0_t0|})
							      )
						
						-- main process
						
						MachineMemorySyncSet = Union({
							union(
								union(
									{|get_ActualHV,set_ActualHV|},
									{||}
								)
									
								,
								{|internal__.TID_stm0_t0,
								internal__.TID_stm0_t1|}
							),
							{|deadline|},
							WCresets
						})
						
						MachineMemoryHidingSet = Union({
							union(
								{|get_ActualHV,set_ActualHV|},
								{||}
							)
							,
							{|deadline|}
						})
						
						MachineInternalEvents = {|
							internal__
						|}
					
						-- main process
						AUX(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							(
								(MemoryN(id__))
									[| union(WCsets,WCsync) |]
								Clocks(id__)
							)\WCsets
						)
						[[
							int_ActualHV__.x____ <- int_ActualHV,
							ActualHV_1__.x____ <- ActualHV_1,
							ActualHV_2__.x____ <- ActualHV_2
							| x____ <- TIDS
						]]
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP\MachineInternalEvents)
						,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						STM_core(id__) = 
							dbisim(
								sbisim(
										(STM(id__)
										[| union(WCsync,WCresets) |]
										Clocks(id__))\WCresets
									  )
								  )
						
						AUX_opt(id__) = 
							prioritise(
								(MemorySTM_opt(id__)
								)[[
									int_ActualHV__.x____ <- int_ActualHV,
									ActualHV_1__.x____ <- ActualHV_1,
									ActualHV_2__.x____ <- ActualHV_2
									| x____ <- TIDS
								]]
							[|{|terminate|}|>SKIP\MachineInternalEvents
							,<Union({internal_events, ClockResets, {|terminate|}}),{tock}>)
						
						internal_(id__) = prioritise((((
							wbisim(STM(id__))
								[|MachineMemorySyncSet|]
							((MemoryN(id__)) [| union(WCsets,WCsync) |] Clocks(id__))\WCsets
						)
						\MachineMemoryHidingSet)
						[|{|terminate|}|>SKIP)
						,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)		
						-- declare clocks
						datatype ClockSet = dummyC
						channel clockReset 				-- no clocks declared
						
						-- declare trigger deadlines channel
						channel deadline : TIDS.deadlineSignal
						
						-- compile clocks process
						
						-- set of strings that uniquely identify the waiting conditions, each of which is 
						-- used to synchronise with the Memory process to set the correspoding variable in
						-- the memory process.
						datatype setWC_identifierSet = dummyWC
						
						-- declaring getWC and setWC channel for updating memory variables related to clocks
						channel setWC : setWC_identifierSet.Bool
						channel getWC : setWC_identifierSet.Bool
						
						-- Set of pairs capturing waiting condition processes and their alphabet.
						-- It includes the corresponding set of the defined operations.
						WCset(id__) = Union({
							{
							}
							})
						
						-- Auxiliary function to rename the channel set for required clocks.
						
						-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
						-- It includes the corresponding set of the defined operations.
						WCsync = Union({
							{||}
							})
						-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
						-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
						WCresets = Union({
							{| | x <- SIDS |}
							})
						-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
						WCsets = Union({
							{|setWC|}
							})
						
						
						
						-- Clocks process
						Clocks(id__) = || (alpha, P) : WCset(id__) @ [alpha] wbisim(P)
		
						-- collects all clockResets including those of operations
						ClockResets = Union({
							{|clockReset|}
											})
						
						-- With no internal events visible
						Dunopt__(id__) = timed_priority(AUX(id__) \ union(internal_events,ClockResets))
						
						D__(id__) = timed_priority(AUX_opt(id__) \ union(internal_events,ClockResets))
						
						O__(id__) = D__(id__)
						
						-- With enter/entered/exit/exited events visible
						FVS__(id__) = timed_priority(AUX(id__) \ ClockResets)
						
						-- With enterV/enteredV/exitV/exitedV events visible
						VS__(id__) = ShowV(timed_priority(AUX(id__) \ ClockResets))
						
						-- With clock resets visible
						FVS_C__(id__) = AUX(id__)
					}
				endmodule
	
	
		Timed(OneStep) {
			-- declaring call and ret events for undefined operations
	
						
			-- declaring controller events
			channel int_ActualHV: InOut.core_real
			channel ActualHV_1: InOut.core_real
			channel ActualHV_2: InOut.core_real
							

		
			-- declaring controller memory
			Memory(id__) = SKIP
			-- declaring controller termination channel
			channel terminate
			
			-- set of visible memory events
			visibleMemoryEvents = {||}
		
			D__(id__) = prioritise(wbisim(
				(
					stm0::D__(id__)[[
						stm0::terminate <- terminate,
						stm0::int_ActualHV <- int_ActualHV,
						stm0::ActualHV_1 <- ActualHV_1,
						stm0::ActualHV_2 <- ActualHV_2
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
			
			O__(id__) = D__(id__)
			
			-- VS version
			VS__(id__) = prioritise(wbisim(
				(
					stm0::VS__(id__)[[
						stm0::terminate <- terminate,
						stm0::int_ActualHV <- int_ActualHV,
						stm0::ActualHV_1 <- ActualHV_1,
						stm0::ActualHV_2 <- ActualHV_2
					]]
				)
					[|
						union(
							{|
							|},
							{|
							|}
						)
					|]
				Memory(id__)
			)
			\ union(
				{|
				|},
				{|
				|}
			)
			[|{|terminate|}|>SKIP,
			<union(visibleMemoryEvents,{terminate}),{tock}>)
		
			HEXT(id__) = D__(id__) [|shared_variable_events|] SKIP
		}
	endmodule



