include "defs/file_Transition_system.csp"
include "defs/file_sequential_StateMachine.csp"
include "defs/robochart_defs.csp"
include "defs/state_defs.csp"
include "defs/core_defs.csp"
include "defs/file_Interrupt.csp"
include "defs/file_Transition_system_defs.csp"
include "defs/file_sequential_StateMachine_defs.csp"
include "defs/file_Interrupt_defs.csp"
include "defs/file_Declarations.csp"
include "defs/file_Declarations_defs.csp"
include "../instantiations.csp"

module original
exports
	include "../defs/file_Interrupt.csp"
	include "../defs/file_Transition_system.csp"
	include "../defs/file_Declarations.csp"
	include "../defs/file_sequential_StateMachine.csp"
endmodule

-- Assertions

-- Module: mod_sys
assert (let 
	id__ = 0
	
	
	
	const_State_machine_cycleTime = ms(10)
		
	const_setPointRamping_rampStep = 1
within
	original::mod_sys::O__(id__,
			    const_ctrl0_stm_ref0_cycleTime,
			   	const_setPointRamping_rampStep)
	   [[ original::mod_sys::ext_ActualHV <- mod_sys::ext_ActualHV ]]
	   [[ original::mod_sys::ext_pow24VStatus <- mod_sys::ext_pow24VStatus ]]
	   [[ original::mod_sys::ext_errorAck <- mod_sys::ext_errorAck ]]
	   [[ original::mod_sys::ext_setPoint <- mod_sys::ext_setPoint ]]
	   [[ original::mod_sys::int_dutyCyclePWM1 <- mod_sys::int_dutyCyclePWM1 ]]
	   [[ original::mod_sys::int_enablePWM <- mod_sys::int_enablePWM ]]
	   [[ original::mod_sys::get_overLimit <- mod_sys::get_overLimit, original::mod_sys::set_overLimit <- mod_sys::set_overLimit]]
	   [[ original::mod_sys::get_underLimit <- mod_sys::get_underLimit, original::mod_sys::set_underLimit <- mod_sys::set_underLimit]]
	   [[ original::mod_sys::get_currentState <- mod_sys::get_currentState, original::mod_sys::set_currentState <- mod_sys::set_currentState]]
	   [[ original::mod_sys::get_HVEnabled <- mod_sys::get_HVEnabled, original::mod_sys::set_HVEnabled <- mod_sys::set_HVEnabled]]
	   [[ original::mod_sys::get_pow24VStatus <- mod_sys::get_pow24VStatus, original::mod_sys::set_pow24VStatus <- mod_sys::set_pow24VStatus]]
	   [[ original::mod_sys::get_dutyCyclePWM1 <- mod_sys::get_dutyCyclePWM1, original::mod_sys::set_dutyCyclePWM1 <- mod_sys::set_dutyCyclePWM1]]
	   [[ original::mod_sys::get_mSetPoint <- mod_sys::get_mSetPoint, original::mod_sys::set_mSetPoint <- mod_sys::set_mSetPoint]]
	   [[ original::mod_sys::terminate <- mod_sys::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   	const_State_machine_cycleTime = ms(10)
	   		
	   	const_setPointRamping_rampStep = 1
	   within
	   	mod_sys::O__(id__,
	   			    const_ctrl0_stm_ref0_cycleTime,
	   			   	const_setPointRamping_rampStep))
	   
assert (let 
	id__ = 0
	
	
	
	const_State_machine_cycleTime = ms(10)
		
	const_setPointRamping_rampStep = 1
within
	mod_sys::O__(id__,
			    const_ctrl0_stm_ref0_cycleTime,
			   	const_setPointRamping_rampStep))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   	const_State_machine_cycleTime = ms(10)
	   		
	   	const_setPointRamping_rampStep = 1
	   within
	   	original::mod_sys::O__(id__,
	   			    const_ctrl0_stm_ref0_cycleTime,
	   			   	const_setPointRamping_rampStep)
		[[ original::mod_sys::ext_ActualHV <- mod_sys::ext_ActualHV ]]
		[[ original::mod_sys::ext_pow24VStatus <- mod_sys::ext_pow24VStatus ]]
		[[ original::mod_sys::ext_errorAck <- mod_sys::ext_errorAck ]]
		[[ original::mod_sys::ext_setPoint <- mod_sys::ext_setPoint ]]
		[[ original::mod_sys::int_dutyCyclePWM1 <- mod_sys::int_dutyCyclePWM1 ]]
		[[ original::mod_sys::int_enablePWM <- mod_sys::int_enablePWM ]]
		[[ original::mod_sys::get_overLimit <- mod_sys::get_overLimit, original::mod_sys::set_overLimit <- mod_sys::set_overLimit]]
		[[ original::mod_sys::get_underLimit <- mod_sys::get_underLimit, original::mod_sys::set_underLimit <- mod_sys::set_underLimit]]
		[[ original::mod_sys::get_currentState <- mod_sys::get_currentState, original::mod_sys::set_currentState <- mod_sys::set_currentState]]
		[[ original::mod_sys::get_HVEnabled <- mod_sys::get_HVEnabled, original::mod_sys::set_HVEnabled <- mod_sys::set_HVEnabled]]
		[[ original::mod_sys::get_pow24VStatus <- mod_sys::get_pow24VStatus, original::mod_sys::set_pow24VStatus <- mod_sys::set_pow24VStatus]]
		[[ original::mod_sys::get_dutyCyclePWM1 <- mod_sys::get_dutyCyclePWM1, original::mod_sys::set_dutyCyclePWM1 <- mod_sys::set_dutyCyclePWM1]]
		[[ original::mod_sys::get_mSetPoint <- mod_sys::get_mSetPoint, original::mod_sys::set_mSetPoint <- mod_sys::set_mSetPoint]]
		[[ original::mod_sys::terminate <- mod_sys::terminate ]]
)

-- ControllerDef: ctrl0
assert (let 
	id__ = 0
	
	
	
	const_ctrl0_stm_ref0_cycleTime = ms(10)
		
	const_ctrl0_op_ref4_rampStep = 1
within
	original::ctrl0::O__(id__,
			    const_ctrl0_stm_ref0_cycleTime,
			   	const_setPointRamping_rampStep)
	   [[ original::ctrl0::ext_ActualHV <- ctrl0::ext_ActualHV ]]
	   [[ original::ctrl0::ext_pow24VStatus <- ctrl0::ext_pow24VStatus ]]
	   [[ original::ctrl0::ext_errorAck <- ctrl0::ext_errorAck ]]
	   [[ original::ctrl0::ext_setPoint <- ctrl0::ext_setPoint ]]
	   [[ original::ctrl0::int_dutyCyclePWM1 <- ctrl0::int_dutyCyclePWM1 ]]
	   [[ original::ctrl0::int_enablePWM <- ctrl0::int_enablePWM ]]
	   [[ original::ctrl0::set_overLimit <- ctrl0::set_overLimit, original::ctrl0::set_EXT_overLimit <- ctrl0::set_EXT_overLimit]]
	   [[ original::ctrl0::set_underLimit <- ctrl0::set_underLimit, original::ctrl0::set_EXT_underLimit <- ctrl0::set_EXT_underLimit]]
	   [[ original::ctrl0::set_currentState <- ctrl0::set_currentState, original::ctrl0::set_EXT_currentState <- ctrl0::set_EXT_currentState]]
	   [[ original::ctrl0::set_HVEnabled <- ctrl0::set_HVEnabled, original::ctrl0::set_EXT_HVEnabled <- ctrl0::set_EXT_HVEnabled]]
	   [[ original::ctrl0::set_pow24VStatus <- ctrl0::set_pow24VStatus, original::ctrl0::set_EXT_pow24VStatus <- ctrl0::set_EXT_pow24VStatus]]
	   [[ original::ctrl0::set_mSetPoint <- ctrl0::set_mSetPoint, original::ctrl0::set_EXT_mSetPoint <- ctrl0::set_EXT_mSetPoint]]
	   [[ original::ctrl0::set_dutyCyclePWM1 <- ctrl0::set_dutyCyclePWM1, original::ctrl0::set_EXT_dutyCyclePWM1 <- ctrl0::set_EXT_dutyCyclePWM1]]
	   [[ original::ctrl0::terminate <- ctrl0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   	const_ctrl0_stm_ref0_cycleTime = ms(10)
	   		
	   	const_ctrl0_op_ref4_rampStep = 1
	   within
	   	ctrl0::O__(id__,
	   			    const_ctrl0_stm_ref0_cycleTime,
	   			   	const_setPointRamping_rampStep))
	   
assert (let 
	id__ = 0
	
	
	
	const_ctrl0_stm_ref0_cycleTime = ms(10)
		
	const_ctrl0_op_ref4_rampStep = 1
within
	ctrl0::O__(id__,
			    const_ctrl0_stm_ref0_cycleTime,
			   	const_setPointRamping_rampStep))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   	const_ctrl0_stm_ref0_cycleTime = ms(10)
	   		
	   	const_ctrl0_op_ref4_rampStep = 1
	   within
	   	original::ctrl0::O__(id__,
	   			    const_ctrl0_stm_ref0_cycleTime,
	   			   	const_setPointRamping_rampStep)
		[[ original::ctrl0::ext_ActualHV <- ctrl0::ext_ActualHV ]]
		[[ original::ctrl0::ext_pow24VStatus <- ctrl0::ext_pow24VStatus ]]
		[[ original::ctrl0::ext_errorAck <- ctrl0::ext_errorAck ]]
		[[ original::ctrl0::ext_setPoint <- ctrl0::ext_setPoint ]]
		[[ original::ctrl0::int_dutyCyclePWM1 <- ctrl0::int_dutyCyclePWM1 ]]
		[[ original::ctrl0::int_enablePWM <- ctrl0::int_enablePWM ]]
		[[ original::ctrl0::set_overLimit <- ctrl0::set_overLimit, original::ctrl0::set_EXT_overLimit <- ctrl0::set_EXT_overLimit]]
		[[ original::ctrl0::set_underLimit <- ctrl0::set_underLimit, original::ctrl0::set_EXT_underLimit <- ctrl0::set_EXT_underLimit]]
		[[ original::ctrl0::set_currentState <- ctrl0::set_currentState, original::ctrl0::set_EXT_currentState <- ctrl0::set_EXT_currentState]]
		[[ original::ctrl0::set_HVEnabled <- ctrl0::set_HVEnabled, original::ctrl0::set_EXT_HVEnabled <- ctrl0::set_EXT_HVEnabled]]
		[[ original::ctrl0::set_pow24VStatus <- ctrl0::set_pow24VStatus, original::ctrl0::set_EXT_pow24VStatus <- ctrl0::set_EXT_pow24VStatus]]
		[[ original::ctrl0::set_mSetPoint <- ctrl0::set_mSetPoint, original::ctrl0::set_EXT_mSetPoint <- ctrl0::set_EXT_mSetPoint]]
		[[ original::ctrl0::set_dutyCyclePWM1 <- ctrl0::set_dutyCyclePWM1, original::ctrl0::set_EXT_dutyCyclePWM1 <- ctrl0::set_EXT_dutyCyclePWM1]]
		[[ original::ctrl0::terminate <- ctrl0::terminate ]]
)
-- ControllerDef: ctrl1
assert (let 
	id__ = 0
	
	
	
		
within
	original::ctrl1::O__(id__)
	   [[ original::ctrl1::ext_pow24VStatus <- ctrl1::ext_pow24VStatus ]]
	   [[ original::ctrl1::int_dutyCyclePWM1 <- ctrl1::int_dutyCyclePWM1 ]]
	   [[ original::ctrl1::int_enablePWM <- ctrl1::int_enablePWM ]]
	   [[ original::ctrl1::set_HVEnabled <- ctrl1::set_HVEnabled, original::ctrl1::set_EXT_HVEnabled <- ctrl1::set_EXT_HVEnabled]]
	   [[ original::ctrl1::set_pow24VStatus <- ctrl1::set_pow24VStatus, original::ctrl1::set_EXT_pow24VStatus <- ctrl1::set_EXT_pow24VStatus]]
	   [[ original::ctrl1::set_currentState <- ctrl1::set_currentState, original::ctrl1::set_EXT_currentState <- ctrl1::set_EXT_currentState]]
	   [[ original::ctrl1::set_overLimit <- ctrl1::set_overLimit, original::ctrl1::set_EXT_overLimit <- ctrl1::set_EXT_overLimit]]
	   [[ original::ctrl1::set_underLimit <- ctrl1::set_underLimit, original::ctrl1::set_EXT_underLimit <- ctrl1::set_EXT_underLimit]]
	   [[ original::ctrl1::set_mSetPoint <- ctrl1::set_mSetPoint, original::ctrl1::set_EXT_mSetPoint <- ctrl1::set_EXT_mSetPoint]]
	   [[ original::ctrl1::set_dutyCyclePWM1 <- ctrl1::set_dutyCyclePWM1, original::ctrl1::set_EXT_dutyCyclePWM1 <- ctrl1::set_EXT_dutyCyclePWM1]]
	   [[ original::ctrl1::terminate <- ctrl1::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	ctrl1::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
		
within
	ctrl1::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	original::ctrl1::O__(id__)
		[[ original::ctrl1::ext_pow24VStatus <- ctrl1::ext_pow24VStatus ]]
		[[ original::ctrl1::int_dutyCyclePWM1 <- ctrl1::int_dutyCyclePWM1 ]]
		[[ original::ctrl1::int_enablePWM <- ctrl1::int_enablePWM ]]
		[[ original::ctrl1::set_HVEnabled <- ctrl1::set_HVEnabled, original::ctrl1::set_EXT_HVEnabled <- ctrl1::set_EXT_HVEnabled]]
		[[ original::ctrl1::set_pow24VStatus <- ctrl1::set_pow24VStatus, original::ctrl1::set_EXT_pow24VStatus <- ctrl1::set_EXT_pow24VStatus]]
		[[ original::ctrl1::set_currentState <- ctrl1::set_currentState, original::ctrl1::set_EXT_currentState <- ctrl1::set_EXT_currentState]]
		[[ original::ctrl1::set_overLimit <- ctrl1::set_overLimit, original::ctrl1::set_EXT_overLimit <- ctrl1::set_EXT_overLimit]]
		[[ original::ctrl1::set_underLimit <- ctrl1::set_underLimit, original::ctrl1::set_EXT_underLimit <- ctrl1::set_EXT_underLimit]]
		[[ original::ctrl1::set_mSetPoint <- ctrl1::set_mSetPoint, original::ctrl1::set_EXT_mSetPoint <- ctrl1::set_EXT_mSetPoint]]
		[[ original::ctrl1::set_dutyCyclePWM1 <- ctrl1::set_dutyCyclePWM1, original::ctrl1::set_EXT_dutyCyclePWM1 <- ctrl1::set_EXT_dutyCyclePWM1]]
		[[ original::ctrl1::terminate <- ctrl1::terminate ]]
)
-- ControllerDef: ctrl2
assert (let 
	id__ = 0
	
	
	
		
within
	original::ctrl2::O__(id__)
	   [[ original::ctrl2::ext_pow24VStatus <- ctrl2::ext_pow24VStatus ]]
	   [[ original::ctrl2::ext_pow24_1 <- ctrl2::ext_pow24_1 ]]
	   [[ original::ctrl2::ext_pow24_2 <- ctrl2::ext_pow24_2 ]]
	   [[ original::ctrl2::terminate <- ctrl2::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	ctrl2::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
		
within
	ctrl2::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	original::ctrl2::O__(id__)
		[[ original::ctrl2::ext_pow24VStatus <- ctrl2::ext_pow24VStatus ]]
		[[ original::ctrl2::ext_pow24_1 <- ctrl2::ext_pow24_1 ]]
		[[ original::ctrl2::ext_pow24_2 <- ctrl2::ext_pow24_2 ]]
		[[ original::ctrl2::terminate <- ctrl2::terminate ]]
)
-- ControllerDef: ctrl4
assert (let 
	id__ = 0
	
	
	
		
within
	original::ctrl4::O__(id__)
	   [[ original::ctrl4::int_pwmSignal <- ctrl4::int_pwmSignal ]]
	   [[ original::ctrl4::pwmSignal1 <- ctrl4::pwmSignal1 ]]
	   [[ original::ctrl4::pwmSignal2 <- ctrl4::pwmSignal2 ]]
	   [[ original::ctrl4::terminate <- ctrl4::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	ctrl4::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
		
within
	ctrl4::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	original::ctrl4::O__(id__)
		[[ original::ctrl4::int_pwmSignal <- ctrl4::int_pwmSignal ]]
		[[ original::ctrl4::pwmSignal1 <- ctrl4::pwmSignal1 ]]
		[[ original::ctrl4::pwmSignal2 <- ctrl4::pwmSignal2 ]]
		[[ original::ctrl4::terminate <- ctrl4::terminate ]]
)
-- ControllerDef: ctrl3
assert (let 
	id__ = 0
	
	
	
		
within
	original::ctrl3::O__(id__)
	   [[ original::ctrl3::int_dutyCyclePWM1 <- ctrl3::int_dutyCyclePWM1 ]]
	   [[ original::ctrl3::int_enablePWM <- ctrl3::int_enablePWM ]]
	   [[ original::ctrl3::ctrl0_dutyCyclePWM1 <- ctrl3::ctrl0_dutyCyclePWM1 ]]
	   [[ original::ctrl3::ctrl1_dutyCyclePWM1 <- ctrl3::ctrl1_dutyCyclePWM1 ]]
	   [[ original::ctrl3::ctrl0_enablePWM <- ctrl3::ctrl0_enablePWM ]]
	   [[ original::ctrl3::ctrl1_enablePWM <- ctrl3::ctrl1_enablePWM ]]
	   [[ original::ctrl3::terminate <- ctrl3::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	ctrl3::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
		
within
	ctrl3::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   		
	   within
	   	original::ctrl3::O__(id__)
		[[ original::ctrl3::int_dutyCyclePWM1 <- ctrl3::int_dutyCyclePWM1 ]]
		[[ original::ctrl3::int_enablePWM <- ctrl3::int_enablePWM ]]
		[[ original::ctrl3::ctrl0_dutyCyclePWM1 <- ctrl3::ctrl0_dutyCyclePWM1 ]]
		[[ original::ctrl3::ctrl1_dutyCyclePWM1 <- ctrl3::ctrl1_dutyCyclePWM1 ]]
		[[ original::ctrl3::ctrl0_enablePWM <- ctrl3::ctrl0_enablePWM ]]
		[[ original::ctrl3::ctrl1_enablePWM <- ctrl3::ctrl1_enablePWM ]]
		[[ original::ctrl3::terminate <- ctrl3::terminate ]]
)


-- Controller: ctrl0
-- StateMachine: stm_ref0
assert (let 
	id__ = 0
	
	
	const_State_machine_cycleTime = ms(10)
	
within
	original::ctrl0::stm_ref0::O__(id__,
			    const_State_machine_cycleTime,
			    const_setPointRamping_rampStep)
	   [[ original::ctrl0::stm_ref0::ext_ActualHV <- ctrl0::stm_ref0::ext_ActualHV ]]
	   [[ original::ctrl0::stm_ref0::ext_pow24VStatus <- ctrl0::stm_ref0::ext_pow24VStatus ]]
	   [[ original::ctrl0::stm_ref0::ext_errorAck <- ctrl0::stm_ref0::ext_errorAck ]]
	   [[ original::ctrl0::stm_ref0::ext_setPoint <- ctrl0::stm_ref0::ext_setPoint ]]
	   [[ original::ctrl0::stm_ref0::int_dutyCyclePWM1 <- ctrl0::stm_ref0::int_dutyCyclePWM1 ]]
	   [[ original::ctrl0::stm_ref0::int_enablePWM <- ctrl0::stm_ref0::int_enablePWM ]]
	   [[ original::ctrl0::stm_ref0::set_overLimit <- ctrl0::stm_ref0::set_overLimit, original::ctrl0::stm_ref0::set_EXT_overLimit <- ctrl0::stm_ref0::set_EXT_overLimit]]
	   [[ original::ctrl0::stm_ref0::set_underLimit <- ctrl0::stm_ref0::set_underLimit, original::ctrl0::stm_ref0::set_EXT_underLimit <- ctrl0::stm_ref0::set_EXT_underLimit]]
	   [[ original::ctrl0::stm_ref0::set_currentState <- ctrl0::stm_ref0::set_currentState, original::ctrl0::stm_ref0::set_EXT_currentState <- ctrl0::stm_ref0::set_EXT_currentState]]
	   [[ original::ctrl0::stm_ref0::set_HVEnabled <- ctrl0::stm_ref0::set_HVEnabled, original::ctrl0::stm_ref0::set_EXT_HVEnabled <- ctrl0::stm_ref0::set_EXT_HVEnabled]]
	   [[ original::ctrl0::stm_ref0::set_pow24VStatus <- ctrl0::stm_ref0::set_pow24VStatus, original::ctrl0::stm_ref0::set_EXT_pow24VStatus <- ctrl0::stm_ref0::set_EXT_pow24VStatus]]
	   [[ original::ctrl0::stm_ref0::set_mSetPoint <- ctrl0::stm_ref0::set_mSetPoint, original::ctrl0::stm_ref0::set_EXT_mSetPoint <- ctrl0::stm_ref0::set_EXT_mSetPoint]]
	   [[ original::ctrl0::stm_ref0::set_dutyCyclePWM1 <- ctrl0::stm_ref0::set_dutyCyclePWM1, original::ctrl0::stm_ref0::set_EXT_dutyCyclePWM1 <- ctrl0::stm_ref0::set_EXT_dutyCyclePWM1]]
	   [[ original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	const_State_machine_cycleTime = ms(10)
	   	
	   within
	   	ctrl0::stm_ref0::O__(id__,
	   			    const_State_machine_cycleTime,
	   			    const_setPointRamping_rampStep))
	   
assert (let 
	id__ = 0
	
	
	const_State_machine_cycleTime = ms(10)
	
within
	ctrl0::stm_ref0::O__(id__,
			    const_State_machine_cycleTime,
			    const_setPointRamping_rampStep))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	const_State_machine_cycleTime = ms(10)
	   	
	   within
	   	original::ctrl0::stm_ref0::O__(id__,
	   			    const_State_machine_cycleTime,
	   			    const_setPointRamping_rampStep)
		[[ original::ctrl0::stm_ref0::ext_ActualHV <- ctrl0::stm_ref0::ext_ActualHV ]]
		[[ original::ctrl0::stm_ref0::ext_pow24VStatus <- ctrl0::stm_ref0::ext_pow24VStatus ]]
		[[ original::ctrl0::stm_ref0::ext_errorAck <- ctrl0::stm_ref0::ext_errorAck ]]
		[[ original::ctrl0::stm_ref0::ext_setPoint <- ctrl0::stm_ref0::ext_setPoint ]]
		[[ original::ctrl0::stm_ref0::int_dutyCyclePWM1 <- ctrl0::stm_ref0::int_dutyCyclePWM1 ]]
		[[ original::ctrl0::stm_ref0::int_enablePWM <- ctrl0::stm_ref0::int_enablePWM ]]
		[[ original::ctrl0::stm_ref0::set_overLimit <- ctrl0::stm_ref0::set_overLimit, original::ctrl0::stm_ref0::set_EXT_overLimit <- ctrl0::stm_ref0::set_EXT_overLimit]]
		[[ original::ctrl0::stm_ref0::set_underLimit <- ctrl0::stm_ref0::set_underLimit, original::ctrl0::stm_ref0::set_EXT_underLimit <- ctrl0::stm_ref0::set_EXT_underLimit]]
		[[ original::ctrl0::stm_ref0::set_currentState <- ctrl0::stm_ref0::set_currentState, original::ctrl0::stm_ref0::set_EXT_currentState <- ctrl0::stm_ref0::set_EXT_currentState]]
		[[ original::ctrl0::stm_ref0::set_HVEnabled <- ctrl0::stm_ref0::set_HVEnabled, original::ctrl0::stm_ref0::set_EXT_HVEnabled <- ctrl0::stm_ref0::set_EXT_HVEnabled]]
		[[ original::ctrl0::stm_ref0::set_pow24VStatus <- ctrl0::stm_ref0::set_pow24VStatus, original::ctrl0::stm_ref0::set_EXT_pow24VStatus <- ctrl0::stm_ref0::set_EXT_pow24VStatus]]
		[[ original::ctrl0::stm_ref0::set_mSetPoint <- ctrl0::stm_ref0::set_mSetPoint, original::ctrl0::stm_ref0::set_EXT_mSetPoint <- ctrl0::stm_ref0::set_EXT_mSetPoint]]
		[[ original::ctrl0::stm_ref0::set_dutyCyclePWM1 <- ctrl0::stm_ref0::set_dutyCyclePWM1, original::ctrl0::stm_ref0::set_EXT_dutyCyclePWM1 <- ctrl0::stm_ref0::set_EXT_dutyCyclePWM1]]
		[[ original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate ]]
)
-- Controller: ctrl1
-- StateMachine: stm_ref0
assert (let 
	id__ = 0
	
	
	
within
	original::ctrl1::stm_ref0::O__(id__)
	   [[ original::ctrl1::stm_ref0::ext_pow24VStatus <- ctrl1::stm_ref0::ext_pow24VStatus ]]
	   [[ original::ctrl1::stm_ref0::int_dutyCyclePWM1 <- ctrl1::stm_ref0::int_dutyCyclePWM1 ]]
	   [[ original::ctrl1::stm_ref0::int_enablePWM <- ctrl1::stm_ref0::int_enablePWM ]]
	   [[ original::ctrl1::stm_ref0::set_HVEnabled <- ctrl1::stm_ref0::set_HVEnabled, original::ctrl1::stm_ref0::set_EXT_HVEnabled <- ctrl1::stm_ref0::set_EXT_HVEnabled]]
	   [[ original::ctrl1::stm_ref0::set_pow24VStatus <- ctrl1::stm_ref0::set_pow24VStatus, original::ctrl1::stm_ref0::set_EXT_pow24VStatus <- ctrl1::stm_ref0::set_EXT_pow24VStatus]]
	   [[ original::ctrl1::stm_ref0::set_currentState <- ctrl1::stm_ref0::set_currentState, original::ctrl1::stm_ref0::set_EXT_currentState <- ctrl1::stm_ref0::set_EXT_currentState]]
	   [[ original::ctrl1::stm_ref0::set_overLimit <- ctrl1::stm_ref0::set_overLimit, original::ctrl1::stm_ref0::set_EXT_overLimit <- ctrl1::stm_ref0::set_EXT_overLimit]]
	   [[ original::ctrl1::stm_ref0::set_underLimit <- ctrl1::stm_ref0::set_underLimit, original::ctrl1::stm_ref0::set_EXT_underLimit <- ctrl1::stm_ref0::set_EXT_underLimit]]
	   [[ original::ctrl1::stm_ref0::set_mSetPoint <- ctrl1::stm_ref0::set_mSetPoint, original::ctrl1::stm_ref0::set_EXT_mSetPoint <- ctrl1::stm_ref0::set_EXT_mSetPoint]]
	   [[ original::ctrl1::stm_ref0::set_dutyCyclePWM1 <- ctrl1::stm_ref0::set_dutyCyclePWM1, original::ctrl1::stm_ref0::set_EXT_dutyCyclePWM1 <- ctrl1::stm_ref0::set_EXT_dutyCyclePWM1]]
	   [[ original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	ctrl1::stm_ref0::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
within
	ctrl1::stm_ref0::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	original::ctrl1::stm_ref0::O__(id__)
		[[ original::ctrl1::stm_ref0::ext_pow24VStatus <- ctrl1::stm_ref0::ext_pow24VStatus ]]
		[[ original::ctrl1::stm_ref0::int_dutyCyclePWM1 <- ctrl1::stm_ref0::int_dutyCyclePWM1 ]]
		[[ original::ctrl1::stm_ref0::int_enablePWM <- ctrl1::stm_ref0::int_enablePWM ]]
		[[ original::ctrl1::stm_ref0::set_HVEnabled <- ctrl1::stm_ref0::set_HVEnabled, original::ctrl1::stm_ref0::set_EXT_HVEnabled <- ctrl1::stm_ref0::set_EXT_HVEnabled]]
		[[ original::ctrl1::stm_ref0::set_pow24VStatus <- ctrl1::stm_ref0::set_pow24VStatus, original::ctrl1::stm_ref0::set_EXT_pow24VStatus <- ctrl1::stm_ref0::set_EXT_pow24VStatus]]
		[[ original::ctrl1::stm_ref0::set_currentState <- ctrl1::stm_ref0::set_currentState, original::ctrl1::stm_ref0::set_EXT_currentState <- ctrl1::stm_ref0::set_EXT_currentState]]
		[[ original::ctrl1::stm_ref0::set_overLimit <- ctrl1::stm_ref0::set_overLimit, original::ctrl1::stm_ref0::set_EXT_overLimit <- ctrl1::stm_ref0::set_EXT_overLimit]]
		[[ original::ctrl1::stm_ref0::set_underLimit <- ctrl1::stm_ref0::set_underLimit, original::ctrl1::stm_ref0::set_EXT_underLimit <- ctrl1::stm_ref0::set_EXT_underLimit]]
		[[ original::ctrl1::stm_ref0::set_mSetPoint <- ctrl1::stm_ref0::set_mSetPoint, original::ctrl1::stm_ref0::set_EXT_mSetPoint <- ctrl1::stm_ref0::set_EXT_mSetPoint]]
		[[ original::ctrl1::stm_ref0::set_dutyCyclePWM1 <- ctrl1::stm_ref0::set_dutyCyclePWM1, original::ctrl1::stm_ref0::set_EXT_dutyCyclePWM1 <- ctrl1::stm_ref0::set_EXT_dutyCyclePWM1]]
		[[ original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate ]]
)
-- Controller: ctrl2
-- StateMachine: stm0
assert (let 
	id__ = 0
	
	
	
within
	original::ctrl2::stm0::O__(id__)
	   [[ original::ctrl2::stm0::ext_pow24VStatus <- ctrl2::stm0::ext_pow24VStatus ]]
	   [[ original::ctrl2::stm0::ext_pow24_1 <- ctrl2::stm0::ext_pow24_1 ]]
	   [[ original::ctrl2::stm0::ext_pow24_2 <- ctrl2::stm0::ext_pow24_2 ]]
	   [[ original::ctrl2::stm0::terminate <- ctrl2::stm0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	ctrl2::stm0::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
within
	ctrl2::stm0::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	original::ctrl2::stm0::O__(id__)
		[[ original::ctrl2::stm0::ext_pow24VStatus <- ctrl2::stm0::ext_pow24VStatus ]]
		[[ original::ctrl2::stm0::ext_pow24_1 <- ctrl2::stm0::ext_pow24_1 ]]
		[[ original::ctrl2::stm0::ext_pow24_2 <- ctrl2::stm0::ext_pow24_2 ]]
		[[ original::ctrl2::stm0::terminate <- ctrl2::stm0::terminate ]]
)
-- Controller: ctrl4
-- StateMachine: stm0
assert (let 
	id__ = 0
	
	
	
within
	original::ctrl4::stm0::O__(id__)
	   [[ original::ctrl4::stm0::int_pwmSignal <- ctrl4::stm0::int_pwmSignal ]]
	   [[ original::ctrl4::stm0::pwmSignal1 <- ctrl4::stm0::pwmSignal1 ]]
	   [[ original::ctrl4::stm0::pwmSignal2 <- ctrl4::stm0::pwmSignal2 ]]
	   [[ original::ctrl4::stm0::terminate <- ctrl4::stm0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	ctrl4::stm0::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
within
	ctrl4::stm0::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	original::ctrl4::stm0::O__(id__)
		[[ original::ctrl4::stm0::int_pwmSignal <- ctrl4::stm0::int_pwmSignal ]]
		[[ original::ctrl4::stm0::pwmSignal1 <- ctrl4::stm0::pwmSignal1 ]]
		[[ original::ctrl4::stm0::pwmSignal2 <- ctrl4::stm0::pwmSignal2 ]]
		[[ original::ctrl4::stm0::terminate <- ctrl4::stm0::terminate ]]
)
-- Controller: ctrl3
-- StateMachine: stm0
assert (let 
	id__ = 0
	
	
	
within
	original::ctrl3::stm0::O__(id__)
	   [[ original::ctrl3::stm0::int_dutyCyclePWM1 <- ctrl3::stm0::int_dutyCyclePWM1 ]]
	   [[ original::ctrl3::stm0::int_enablePWM <- ctrl3::stm0::int_enablePWM ]]
	   [[ original::ctrl3::stm0::ctrl0_dutyCyclePWM1 <- ctrl3::stm0::ctrl0_dutyCyclePWM1 ]]
	   [[ original::ctrl3::stm0::ctrl1_dutyCyclePWM1 <- ctrl3::stm0::ctrl1_dutyCyclePWM1 ]]
	   [[ original::ctrl3::stm0::ctrl0_enablePWM <- ctrl3::stm0::ctrl0_enablePWM ]]
	   [[ original::ctrl3::stm0::ctrl1_enablePWM <- ctrl3::stm0::ctrl1_enablePWM ]]
	   [[ original::ctrl3::stm0::terminate <- ctrl3::stm0::terminate ]]
)
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	ctrl3::stm0::O__(id__))
	   
assert (let 
	id__ = 0
	
	
	
within
	ctrl3::stm0::O__(id__))
	   [FD=
	   (let 
	   	id__ = 0
	   	
	   	
	   	
	   within
	   	original::ctrl3::stm0::O__(id__)
		[[ original::ctrl3::stm0::int_dutyCyclePWM1 <- ctrl3::stm0::int_dutyCyclePWM1 ]]
		[[ original::ctrl3::stm0::int_enablePWM <- ctrl3::stm0::int_enablePWM ]]
		[[ original::ctrl3::stm0::ctrl0_dutyCyclePWM1 <- ctrl3::stm0::ctrl0_dutyCyclePWM1 ]]
		[[ original::ctrl3::stm0::ctrl1_dutyCyclePWM1 <- ctrl3::stm0::ctrl1_dutyCyclePWM1 ]]
		[[ original::ctrl3::stm0::ctrl0_enablePWM <- ctrl3::stm0::ctrl0_enablePWM ]]
		[[ original::ctrl3::stm0::ctrl1_enablePWM <- ctrl3::stm0::ctrl1_enablePWM ]]
		[[ original::ctrl3::stm0::terminate <- ctrl3::stm0::terminate ]]
)

