diagram Transition_system 
import Declarations::*

module mod_sys {
	rref rp_ref0 = RP1

	connection ctrl_ref1 on int_DisableHV to ctrl_ref0 on int_DisableHV ( _async )

	connection ctrl_ref0 on int_underLimit to ctrl_ref1 on int_underLimit ( _async )
	connection ctrl_ref0 on int_overLimit to ctrl_ref1 on int_overLimit ( _async )

	connection rp_ref0 on ext_setPoint to ctrl_ref0 on ext_setPoint ( _async ) [ mult ]
	cref ctrl_ref0 = ctrl0
	cref ctrl_ref1 = ctrl1

	connection ctrl_ref0 on int_ActualHV to ctrl_ref3 on int_ActualHV ( _async )
	connection ctrl_ref3 on ActualHV_1 to ctrl_ref1 on int_ActualHV ( _async )
	connection ctrl_ref3 on ActualHV_2 to rp_ref0 on int_ActualHV ( _async ) 
	cref ctrl_ref2 = ctrl2

	connection ctrl_ref0 on int_pwmSignal to rp_ref0 on int_pwmSignal ( _async )

	connection rp_ref0 on ext_pow24VStatus to ctrl_ref2 on ext_pow24VStatus ( _async )
	connection ctrl_ref2 on ext_pow24_2 to ctrl_ref1 on ext_pow24VStatus ( _async ) cref ctrl_ref3 = ctrl3
connection ctrl_ref2 on ext_pow24_1 to ctrl_ref0 on ext_pow24VStatus
( _async )
connection ctrl_ref0 on currentState to rp_ref0 on currentState ( _async )
}

controller ctrl0 {
	uses IEvents_ext uses IEvents event currentState : State  opref op_ref0 = disableHV
	opref op_ref1 = supplyVoltCheck
	opref op_ref2 = checkLimits
	sref stm_ref0 = State_machine
	connection ctrl0 on int_DisableHV to stm_ref0 on int_DisableHV
	connection stm_ref0 on int_ActualHV to ctrl0 on int_ActualHV
	connection stm_ref0 on int_underLimit to ctrl0 on int_underLimit
	connection stm_ref0 on int_overLimit to ctrl0 on int_overLimit
	connection ctrl0 on ext_setPoint to stm_ref0 on ext_setPoint [ mult ]

	connection stm_ref0 on int_pwmSignal to ctrl0 on int_pwmSignal
	connection ctrl0 on ext_pow24VStatus to stm_ref0 on ext_pow24VStatus
connection stm_ref0 on currentState to ctrl0 on currentState
}

controller ctrl1 {
	sref stm_ref0 = Watchdog
	connection ctrl1 on int_ActualHV to stm_ref0 on int_ActualHV
	connection stm_ref0 on int_DisableHV to ctrl1 on int_DisableHV
	connection ctrl1 on int_underLimit to stm_ref0 on int_underLimit
	connection ctrl1 on int_overLimit to stm_ref0 on int_overLimit

	event ext_pow24VStatus : Power
	event int_overLimit : real
	event int_underLimit : real

	event int_DisableHV
	event int_ActualHV : real 
	connection ctrl1 on ext_pow24VStatus to stm_ref0 on ext_pow24VStatus
}

controller ctrl2 {
	event ext_pow24VStatus : Power

	event ext_pow24_1 : Power

	event ext_pow24_2 : Power
	stm stm0 {
		var power : Power

		event ext_pow24VStatus : Power

		event ext_pow24_1 : Power

		event ext_pow24_2 : Power
		initial i0
		state s0 {
			entry ext_pow24VStatus ? power
		}
		transition t0 {
			from i0
			to s0
		}
		transition t1 {
			from s0
			to s0
			trigger
			action 
		ext_pow24_1 ! power ; ext_pow24_2 ! power
		}
	}

	connection ctrl2 on ext_pow24VStatus to stm0 on ext_pow24VStatus

	connection stm0 on ext_pow24_1 to ctrl2 on ext_pow24_1

	connection stm0 on ext_pow24_2 to ctrl2 on ext_pow24_2
}

controller ctrl3 {
	event int_ActualHV : real
	event ActualHV_1 : real
	event ActualHV_2 : real
	stm stm0 {
		var ActualHV : real
		event int_ActualHV : real
		event ActualHV_1 : real
		event ActualHV_2 : real
		initial i0
		state s0 {
			entry int_ActualHV ? ActualHV
		}
		transition t0 {
			from i0
			to s0
		}
		transition t1 {
			from s0
			to s0
			trigger
			action ActualHV_1 ! ActualHV ; ActualHV_2 ! ActualHV
		}
	}

	connection ctrl3 on int_ActualHV to stm0 on int_ActualHV
	connection stm0 on ActualHV_1 to ctrl3 on ActualHV_1
	connection stm0 on ActualHV_2 to ctrl3 on ActualHV_2
}

