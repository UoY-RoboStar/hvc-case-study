package P2

import basics::*

// P2: That PWM_output is set to 0 whenever the 24v power signal is off
pmodules M2:
	pmodule P2 {
		// 0 - PWM (int_pwmSignal)
	    // 1 - PWM (mod_sys::rp_ref0::ext_pow24VStatus.out)
	    // 2 - PWM_on (int_pwmSignal)
	    // 3 - PWM_on (mod_sys::rp_ref0::ext_pow24VStatus.out)
	    // 4 - PWM_on (int_pwmSignal) after (mod_sys::ext_pow24VStatus.out.Power::Off ->)
	    // 5 - PWM_on (mod_sys::rp_ref0::ext_pow24VStatus.out) after (mod_sys::ext_pow24VStatus.out.Power::Off ->)
		P2_scpc : [-1 to 5] init 0;
		P2_updating: bool init false;
		
		// (0/1, idle) --> (0, busy)
		[mod_sys::rp_ref0::int_pwmSignal.in]  (@P2_updating==false)/\((@P2_scpc==0) \/ (@P2_scpc==1)) 	
			-> (@P2_scpc=0)&(@P2_updating=true); 
	    // (0, busy) --> (0, idle)
	    [] (@P2_scpc==0)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val==Power::Off) 
	    	-> (@P2_scpc=0)&(@P2_updating=false);
	    // (0, busy) --> (2, idle)
	    [] (@P2_scpc==0)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val!=Power::Off) 
	    	-> (@P2_scpc=2)&(@P2_updating=false);
	    
	    //  (0/1, idle) --> (1, busy)
	    [mod_sys::rp_ref0::ext_pow24VStatus.out] (@P2_updating==false)/\((@P2_scpc==0)\/(@P2_scpc==1))   	 
	    	-> (@P2_updating=true)&(@P2_scpc=1);
	    // (1, busy) --> (0/1, idle)
	    [] (@P2_scpc==1)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val==Power::Off)  
	    	-> (@P2_scpc=0)&(@P2_updating=false);
	    // (1, busy) --> (0/1, idle)
	    [] (@P2_scpc==1)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val!=Power::Off) 
	    	-> (@P2_scpc=1)&(@P2_updating=false);
	    
	    // (2/3, idle) --> (2, busy)
	    [mod_sys::rp_ref0::int_pwmSignal.in]    (@P2_updating==false)/\((@P2_scpc==2)\/(@P2_scpc==3)) 
	    	-> (@P2_updating=true)&(@P2_scpc=2);
	    // (2, busy) --> (0/1, idle)
	    [] (@P2_scpc==2)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val==Power::Off)     
	    	-> (@P2_scpc=0)&(@P2_updating=false);
	    // (2, busy) --> (2/3, idle)
	    [] (@P2_scpc==2)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val!=Power::Off)    
	    	-> (@P2_scpc=2)&(@P2_updating=false);
	    
	    //  (2/3, idle) --> (3, busy)
	    [mod_sys::rp_ref0::ext_pow24VStatus.out] (@P2_updating==false)/\((@P2_scpc==2)\/(@P2_scpc==3))   	 
	    	-> (@P2_updating=true)&(@P2_scpc=3);
	    // (3, busy) --> (4, idle)
	    [] (@P2_scpc==3)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val==Power::Off)  
	    	-> (@P2_scpc=4)&(@P2_updating=false);
	    // (2/3, busy) --> (2/3, idle)
	    [] (@P2_scpc==3)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val!=Power::Off) 
	    	-> (@P2_scpc=2)&(@P2_updating=false);
	    
	    //  (4/5, idle) --> (5, busy)
	    [mod_sys::rp_ref0::ext_pow24VStatus.out] (@P2_updating==false)/\((@P2_scpc==4)\/(@P2_scpc==5))   	 
	    	-> (@P2_updating=true)&(@P2_scpc=5);
	    // (5, busy) --> (4/5, idle)
	    [] (@P2_scpc==5)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val==Power::Off)  
	    	-> (@P2_scpc=5)&(@P2_updating=false);
	    // (5, busy) --> (4/5, idle)
	    [] (@P2_scpc==5)/\(@P2_updating==true)/\(mod_sys::rp_ref0::ext_pow24VStatus.out.val!=Power::Off) 
	    	-> (@P2_scpc=5)&(@P2_updating=false);
	    
	    // (4/5, idle) --> (2, busy)
	    [mod_sys::rp_ref0::int_pwmSignal.in]    (@P2_updating==false)/\((@P2_scpc==4)\/(@P2_scpc==5))   	 
	    	-> (@P2_updating=true)&(@P2_scpc=4);
	    // (4, busy) --> (0/1, idle)
	    [] (@P2_scpc==4)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val==Power::Off)     
	    	-> (@P2_scpc=0)&(@P2_updating=false);
	    // (4, busy) --> (-1, idle)
	    [] (@P2_scpc==4)/\(@P2_updating==true)/\(mod_sys::rp_ref0::int_pwmSignal.in.val!=Power::Off)    
	    	-> (@P2_scpc=-1)&(@P2_updating=false);
	}

//prob property P2_sim:
//	Prob>=1.0 of [Globally @M2::P2::P2_scpc != -1]
//	using sim with CI at alpha=0.01, n=1000, and pathlen=10000000
//	with definitions D1
//	with modules M2
//	with cmdoptions "-hybrid -cuddmaxmem 256g -javamaxmem 8g"
	
label l2 = @M2::P2::P2_scpc != -1

prob property P2_deadlock_free:
	not Exists [Finally deadlock]
	with definitions D1
	with modules M2
	with cmdoptions "-hybrid -cuddmaxmem 400g -javamaxmem 8g"
	
prob property P2:
	Forall [Globally #l2]
	with definitions D1
	with modules M2
	with cmdoptions "-hybrid -cuddmaxmem 400g -javamaxmem 8g"