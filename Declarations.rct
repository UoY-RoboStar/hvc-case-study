//package Declarations
diagram Declarations 
enumeration State { Ramp Init Wait24Vpower ClosedLoop ErrorMode }
 enumeration Power { On Off } 

interface IVars {
	var setPoint : real

	var res : boolean = false
	var errorFlag : boolean
var lim : boolean = false

	var supplyLim : boolean = false
	var ActualHV : real
	var errorAck : boolean = false
	var overLimit : real
	var underLimit : real

}

interface IEvents_ext {
	event ext_setPoint : real
	
	event ext_pow24VStatus : Power
}

interface IOps {
disableHV ( arg : boolean )
checkLimits ( )
supplyVoltCheck ( )
}

interface IConst {
	
}

interface IVars_ext {
}

interface IEvents {
	event int_overLimit : real
	event int_pwmSignal : Power
	event int_underLimit : real

	event int_DisableHV
	event int_ActualHV : real 
}

robotic platform RP1 {
	uses IEvents_ext  
	event int_ActualHV : real
	event currentState : State
	event int_pwmSignal : Power
}

//enumeration State { Ramp Init Wait24Vpower ClosedLoop ErrorMode } 

operation disableHV ( 
arg : boolean
) {
	requires IVars initial i0

	state s1 {
		entry setPoint = 0
	}

	transition t0 {
		from s1
		to f0
		trigger
		condition arg == false
		action res = false
	}
	final f0
	transition t1 {
		from s1
		to f0
		trigger
		condition arg == true
		action res = true
	}
state s0 {
		entry int_pwmSignal ! Power :: Off<{0}
	}
	transition t2 {
		from i0
		to s0
	}
	transition t3 {
		from s0
		to s1
	}
event int_pwmSignal : Power
}
 
operation checkLimits ( ) {
	requires IVars initial i0
	state s0 {
	}

	final f0
	transition t0 {
		from i0
		to s0
	}

	transition t1 {
		from s0
		to f0
		trigger
		condition ActualHV <= overLimit /\ ActualHV >= underLimit
		action lim = false
	}
	uses IEvents_ext transition t2 {
		from s0
		to f0
		trigger
		condition ActualHV < underLimit \/ ActualHV > overLimit
				// ActualHV = underLimit
				// underLimit <= overLimit
		action lim = true
	}
}

operation supplyVoltCheck ( ) {
	uses IEvents_ext requires IVars initial i0
	var power : Power
	state s0 {
	}
	final f0
	transition t0 {
		from i0
		to s0
	}
	transition t1 {
		from s0
		to f0
		trigger ext_pow24VStatus ? power
		condition power ==Power::On
		action lim = false
	}
	transition t2 {
		from s0
		to f0
		trigger ext_pow24VStatus ? power
		condition power ==Power::Off
		action lim = true
	}
}
function underLimitF ( x : real ) : real { } function overLimitF ( x : real ) : real { }
